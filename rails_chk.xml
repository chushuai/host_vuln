<Vulns>   <Vulnerability added="2017-05-08" gvid="ID106147" id="106147" modified="2017-05-08" published="2003-05-30" version="2.0">      
        
        
        <cvss>(AV:N/AC:L/Au:N/C:C/I:C/A:C)</cvss>      
        <Tags>         
             <tag>Ruby on Rails</tag>         
             <tag>Obsolete Software</tag>         
        </Tags>      
        <AlternateIds/>      
        
        
      <Check scope="node">         <NetworkService>            <Product name="Ruby on Rails" vendor="Ruby on Rails">               <range>                  
	                    <high inclusive="0">4.2</high>                  
	               </range>            </Product>         </NetworkService>      </Check>      <Solutions>目前厂商还没有提供此漏洞的相关补丁或者升级程序，建议使用此软件的用户随时关注厂商的主页以获取最新版本： 
https://www.alice-dsl.de/</Solutions>      <cnnvd></cnnvd>      <cvsscode>10.0</cvsscode>      <severity>Critical</severity>      <Description>此版本已到期。可能存在未打补丁的安全漏洞。请检查&lt;a href=&quot;http://weblog.rubyonrails.org/releases/&quot;&gt;Rails版本&lt;/a&gt;支持的版本。</Description>      <name>Ruby on Rails: Rails 的过时版本</name>   </Vulnerability>   <Vulnerability added="2020-01-03" gvid="ID106175" id="106175" modified="2020-01-03" published="2006-08-14" version="2.0">      
        <name>Ruby on Rails: Improper Control of Generation of Code ('Code Injection') (CVE-2006-4111)</name>      
        <severity>8</severity>      
        <cvss>(AV:N/AC:L/Au:N/C:P/I:P/A:P)</cvss>      
        <Tags>         
             <tag>Ruby on Rails</tag>         
             <tag>Web</tag>         
        </Tags>      
        <AlternateIds>         
             <id name="BID">19454</id>         
             <id name="CVE">CVE-2006-4111</id>         
             <id name="URL">http://blog.koehntopp.de/archives/1367-Ruby-On-Rails-Mandatory-Mystery-Patch.html</id>         
             <id name="URL">http://secunia.com/advisories/21466</id>         
             <id name="URL">http://secunia.com/advisories/21749</id>         
             <id name="URL">http://securitytracker.com/id?1016673</id>         
             <id name="URL">http://weblog.rubyonrails.org/2006/8/9/rails-1-1-5-mandatory-security-patch-and-other-tidbits</id>         
             <id name="URL">http://www.gentoo.org/security/en/glsa/glsa-200608-20.xml</id>         
             <id name="URL">http://www.novell.com/linux/security/advisories/2006_21_sr.html</id>         
             <id name="URL">http://www.securityfocus.com/bid/19454</id>         
             <id name="URL">http://www.vupen.com/english/advisories/2006/3237</id>         
        </AlternateIds>      
        
        
      <Check scope="node">         <NetworkService>            <Product minCertainty="0.85" name="Ruby on Rails">               <version>                  <low>0.9.1</low>                  <high>0.9.5</high>               </version>               <version>                  <low>0.10.0</low>                  <high>0.10.2</high>               </version>               <version>                  <low>0.11.0</low>                  <high>0.11.2</high>               </version>               <version>                  <low>0.12.0</low>                  <high>0.12.2</high>               </version>               <version>                  <low>0.13.0</low>                  <high>0.13.2</high>               </version>               <version>                  <low>0.14.1</low>                  <high>0.14.5</high>               </version>               <version>                  <low>1.0.0</low>                  <high>1.0.1</high>               </version>               <version>                  <low>1.1.0</low>                  <high>1.1.4</high>               </version>            </Product>         </NetworkService>      </Check>      <Solutions>目前厂商已经发布了升级补丁以修复这个安全问题，补丁下载链接： 
http://www.rubyonrails.org/files/aug_10_security/rel_1-1-0.diff 
http://www.rubyonrails.org/files/aug_10_security/rel_1-1-1.diff 
http://www.rubyonrails.org/files/aug_10_security/rel_1-1-2.diff 
http://www.rubyonrails.org/files/aug_10_security/rel_1-1-4.diff</Solutions>      <cnnvd>CNNVD-200608-225</cnnvd>      <Description>Ruby on Rails before 1.1.5 allows remote attackers to execute Ruby code with &quot;severe&quot; or &quot;serious&quot; impact via a File Upload request with an HTTP header that modifies the LOAD_PATH variable, a different vulnerability than CVE-2006-4112.</Description>   </Vulnerability>   <Vulnerability added="2020-01-03" gvid="ID106176" id="106176" modified="2020-01-03" published="2006-08-14" version="2.0">      
        <name>Ruby on Rails: Unspecified Security Vulnerability (CVE-2006-4112)</name>      
        <severity>8</severity>      
        <cvss>(AV:N/AC:L/Au:N/C:P/I:P/A:P)</cvss>      
        <Tags>         
             <tag>Denial of Service</tag>         
             <tag>Remote Execution</tag>         
             <tag>Ruby on Rails</tag>         
        </Tags>      
        <AlternateIds>         
             <id name="BID">19454</id>         
             <id name="CERT-VN">699540</id>         
             <id name="CVE">CVE-2006-4112</id>         
             <id name="URL">http://secunia.com/advisories/21424</id>         
             <id name="URL">http://secunia.com/advisories/21466</id>         
             <id name="URL">http://secunia.com/advisories/21749</id>         
             <id name="URL">http://securitytracker.com/id?1016673</id>         
             <id name="URL">http://weblog.rubyonrails.org/2006/8/10/rails-1-1-6-backports-and-full-disclosure</id>         
             <id name="URL">http://www.gentoo.org/security/en/glsa/glsa-200608-20.xml</id>         
             <id name="URL">http://www.kb.cert.org/vuls/id/699540</id>         
             <id name="URL">http://www.novell.com/linux/security/advisories/2006_21_sr.html</id>         
             <id name="URL">http://www.securityfocus.com/archive/1/442934/100/0/threaded</id>         
             <id name="URL">http://www.securityfocus.com/bid/19454</id>         
             <id name="URL">https://exchange.xforce.ibmcloud.com/vulnerabilities/28364</id>         
             <id name="XF">28364</id>         
        </AlternateIds>      
        
        
      <Check scope="node">         <NetworkService>            <Product minCertainty="0.85" name="Ruby on Rails">               <version>                  <low>1.1.0</low>                  <high>1.1.5</high>               </version>            </Product>         </NetworkService>      </Check>      <Solutions>目前厂商已经发布了升级补丁以修复这个安全问题，补丁下载链接： 
http://www.rubyonrails.org/files/aug_10_security/rel_1-1-0.diff 
http://www.rubyonrails.org/files/aug_10_security/rel_1-1-1.diff 
http://www.rubyonrails.org/files/aug_10_security/rel_1-1-2.diff 
http://www.rubyonrails.org/files/aug_10_security/rel_1-1-4.diff</Solutions>      <cnnvd>CNNVD-200608-220</cnnvd>      <Description>Unspecified vulnerability in the &quot;dependency resolution mechanism&quot; in Ruby on Rails 1.1.0 through 1.1.5 allows remote attackers to execute arbitrary Ruby code via a URL that is not properly handled in the routing code, which leads to a denial of service (application hang) or &quot;data loss,&quot; a different vulnerability than CVE-2006-4111.</Description>   </Vulnerability>   <Vulnerability added="2020-01-03" gvid="ID106177" id="106177" modified="2020-01-03" published="2007-06-14" version="2.0">      
        <name>Ruby on Rails: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') (CVE-2007-3227)</name>      
        <severity>4</severity>      
        <cvss>(AV:N/AC:M/Au:N/C:N/I:P/A:N)</cvss>      
        <Tags>         
             <tag>Ruby on Rails</tag>         
             <tag>Web</tag>         
             <tag>XSS</tag>         
        </Tags>      
        <AlternateIds>         
             <id name="BID">24161</id>         
             <id name="CVE">CVE-2007-3227</id>         
             <id name="URL">http://bugs.gentoo.org/show_bug.cgi?id=195315</id>         
             <id name="URL">http://dev.rubyonrails.org/ticket/8371</id>         
             <id name="URL">http://osvdb.org/36378</id>         
             <id name="URL">http://pastie.caboo.se/65550.txt</id>         
             <id name="URL">http://secunia.com/advisories/25699</id>         
             <id name="URL">http://secunia.com/advisories/27657</id>         
             <id name="URL">http://secunia.com/advisories/27756</id>         
             <id name="URL">http://security.gentoo.org/glsa/glsa-200711-17.xml</id>         
             <id name="URL">http://weblog.rubyonrails.org/2007/10/12/rails-1-2-5-maintenance-release</id>         
             <id name="URL">http://weblog.rubyonrails.org/2007/10/5/rails-1-2-4-maintenance-release</id>         
             <id name="URL">http://www.novell.com/linux/security/advisories/2007_24_sr.html</id>         
             <id name="URL">http://www.securityfocus.com/bid/24161</id>         
             <id name="URL">http://www.vupen.com/english/advisories/2007/2216</id>         
        </AlternateIds>      
        
        
      <Check scope="node">         <NetworkService>            <Product minCertainty="0.85" name="Ruby on Rails">               <version>                  <low>1.1.5</low>                  <high>1.1.6</high>               </version>            </Product>         </NetworkService>      </Check>      <Solutions></Solutions>      <cnnvd></cnnvd>      <Description>Cross-site scripting (XSS) vulnerability in the to_json (ActiveRecord::Base#to_json) function in Ruby on Rails before edge 9606 allows remote attackers to inject arbitrary web script via the input values.</Description>   </Vulnerability>   <Vulnerability added="2020-01-03" gvid="ID106178" id="106178" modified="2020-01-03" published="2007-11-21" version="2.0">      
        <name>Ruby on Rails: Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition') (CVE-2007-6077)</name>      
        <severity>7</severity>      
        <cvss>(AV:N/AC:M/Au:N/C:P/I:P/A:P)</cvss>      
        <Tags>         
             <tag>Ruby on Rails</tag>         
        </Tags>      
        <AlternateIds>         
             <id name="APPLE">APPLE-SA-2007-12-17</id>         
             <id name="BID">26598</id>         
             <id name="CERT">TA07-352A</id>         
             <id name="CVE">CVE-2007-6077</id>         
             <id name="URL">http://dev.rubyonrails.org/changeset/8177</id>         
             <id name="URL">http://dev.rubyonrails.org/ticket/10048</id>         
             <id name="URL">http://docs.info.apple.com/article.html?artnum=307179</id>         
             <id name="URL">http://lists.apple.com/archives/security-announce/2007/Dec/msg00002.html</id>         
             <id name="URL">http://secunia.com/advisories/27781</id>         
             <id name="URL">http://secunia.com/advisories/28136</id>         
             <id name="URL">http://weblog.rubyonrails.org/2007/11/24/ruby-on-rails-1-2-6-security-and-maintenance-release</id>         
             <id name="URL">http://www.securityfocus.com/bid/26598</id>         
             <id name="URL">http://www.us-cert.gov/cas/techalerts/TA07-352A.html</id>         
             <id name="URL">http://www.vupen.com/english/advisories/2007/4009</id>         
             <id name="URL">http://www.vupen.com/english/advisories/2007/4238</id>         
        </AlternateIds>      
        
        
      <Check scope="node">         <NetworkService>            <Product minCertainty="0.85" name="Ruby on Rails">               <version>                  <low>1.2.4</low>                  <high>1.2.5</high>               </version>            </Product>         </NetworkService>      </Check>      <Solutions></Solutions>      <cnnvd></cnnvd>      <Description>The session fixation protection mechanism in cgi_process.rb in Rails 1.2.4, as used in Ruby on Rails, removes the :cookie_only attribute from the DEFAULT_SESSION_OPTIONS constant, which effectively causes cookie_only to be applied only to the first instantiation of CgiRequest, which allows remote attackers to conduct session fixation attacks.  NOTE: this is due to an incomplete fix for CVE-2007-5380.</Description>   </Vulnerability>   <Vulnerability added="2020-01-03" gvid="ID106179" id="106179" modified="2020-01-03" published="2008-09-30" version="2.0">      
        <name>Ruby on Rails: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') (CVE-2008-4094)</name>      
        <severity>8</severity>      
        <cvss>(AV:N/AC:L/Au:N/C:P/I:P/A:P)</cvss>      
        <Tags>         
             <tag>Database</tag>         
             <tag>Remote Execution</tag>         
             <tag>Ruby on Rails</tag>         
             <tag>SQL Injection</tag>         
        </Tags>      
        <AlternateIds>         
             <id name="BID">31176</id>         
             <id name="CVE">CVE-2008-4094</id>         
             <id name="URL">http://blog.innerewut.de/2008/6/16/why-you-should-upgrade-to-rails-2-1</id>         
             <id name="URL">http://gist.github.com/8946</id>         
             <id name="URL">http://lists.opensuse.org/opensuse-security-announce/2008-12/msg00002.html</id>         
             <id name="URL">http://rails.lighthouseapp.com/projects/8994/tickets/288</id>         
             <id name="URL">http://rails.lighthouseapp.com/projects/8994/tickets/964</id>         
             <id name="URL">http://secunia.com/advisories/31875</id>         
             <id name="URL">http://secunia.com/advisories/31909</id>         
             <id name="URL">http://secunia.com/advisories/31910</id>         
             <id name="URL">http://www.openwall.com/lists/oss-security/2008/09/13/2</id>         
             <id name="URL">http://www.openwall.com/lists/oss-security/2008/09/16/1</id>         
             <id name="URL">http://www.rorsecurity.info/2008/09/08/sql-injection-issue-in-limit-and-offset-parameter/</id>         
             <id name="URL">http://www.securityfocus.com/bid/31176</id>         
             <id name="URL">http://www.securitytracker.com/id?1020871</id>         
             <id name="URL">http://www.vupen.com/english/advisories/2008/2562</id>         
             <id name="URL">https://exchange.xforce.ibmcloud.com/vulnerabilities/45109</id>         
             <id name="XF">45109</id>         
        </AlternateIds>      
        
        
      <Check scope="node">         <NetworkService>            <Product minCertainty="0.85" name="Ruby on Rails">               <version>                  <low>0.9.1</low>                  <high>0.9.5</high>               </version>               <version>                  <low>0.10.0</low>                  <high>0.10.2</high>               </version>               <version>                  <low>0.11.0</low>                  <high>0.11.2</high>               </version>               <version>                  <low>0.12.0</low>                  <high>0.12.2</high>               </version>               <version>                  <low>0.13.0</low>                  <high>0.13.2</high>               </version>               <version>                  <low>0.14.1</low>                  <high>0.14.5</high>               </version>               <version>                  <low>1.0.0</low>                  <high>1.0.1</high>               </version>               <version>                  <low>1.1.0</low>                  <high>1.1.7</high>               </version>               <version>                  <low>1.2.0</low>                  <high>1.2.7</high>               </version>               <version>                  <low>1.9.5</low>                  <high>1.9.6</high>               </version>               <version>                  <low>2.0.0</low>                  <high>2.0.5</high>               </version>               <version>                  <low>2.1.0</low>                  <high>2.1.1</high>               </version>            </Product>         </NetworkService>      </Check>      <Solutions>目前厂商已发布升级补丁以修复漏洞，补丁获取链接： 
http://rails.lighthouseapp.com/projects/8994/tickets/288 
http://rails.lighthouseapp.com/projects/8994/tickets/964</Solutions>      <cnnvd>CNNVD-200809-414</cnnvd>      <Description>Multiple SQL injection vulnerabilities in Ruby on Rails before 2.1.1 allow remote attackers to execute arbitrary SQL commands via the (1) :limit and (2) :offset parameters, related to ActiveRecord, ActiveSupport, ActiveResource, ActionPack, and ActionMailer.</Description>   </Vulnerability>   <Vulnerability added="2020-01-03" gvid="ID106180" id="106180" modified="2020-01-03" published="2008-11-21" version="2.0">      
        <name>Ruby on Rails: Cross-Site Request Forgery (CSRF) (CVE-2008-5189)</name>      
        <severity>5</severity>      
        <cvss>(AV:N/AC:L/Au:N/C:N/I:P/A:N)</cvss>      
        <Tags>         
             <tag>CSRF</tag>         
             <tag>Ruby on Rails</tag>         
             <tag>Web</tag>         
        </Tags>      
        <AlternateIds>         
             <id name="BID">32359</id>         
             <id name="CVE">CVE-2008-5189</id>         
             <id name="URL">http://github.com/rails/rails/commit/7282ed863ca7e6f928bae9162c9a63a98775a19d</id>         
             <id name="URL">http://lists.opensuse.org/opensuse-security-announce/2008-12/msg00002.html</id>         
             <id name="URL">http://weblog.rubyonrails.org/2008/10/19/rails-2-0-5-redirect_to-and-offset-limit-sanitizing</id>         
             <id name="URL">http://weblog.rubyonrails.org/2008/10/19/response-splitting-risk</id>         
             <id name="URL">http://www.securityfocus.com/bid/32359</id>         
        </AlternateIds>      
        
        
      <Check scope="node">         <NetworkService>            <Product minCertainty="0.85" name="Ruby on Rails">               <version>                  <low>0.9.1</low>                  <high>0.9.5</high>               </version>               <version>                  <low>0.10.0</low>                  <high>0.10.2</high>               </version>               <version>                  <low>0.11.0</low>                  <high>0.11.2</high>               </version>               <version>                  <low>0.12.0</low>                  <high>0.12.2</high>               </version>               <version>                  <low>0.13.0</low>                  <high>0.13.2</high>               </version>               <version>                  <low>0.14.1</low>                  <high>0.14.5</high>               </version>               <version>                  <low>1.0.0</low>                  <high>1.0.1</high>               </version>               <version>                  <low>1.1.0</low>                  <high>1.1.7</high>               </version>               <version>                  <low>1.2.0</low>                  <high>1.2.7</high>               </version>               <version>                  <low>1.9.5</low>                  <high>1.9.6</high>               </version>               <version>                  <low>2.0.0</low>                  <high>2.0.3</high>               </version>            </Product>         </NetworkService>      </Check>      <Solutions>目前厂商已发布升级补丁以修复漏洞，补丁获取链接： 
http://rubyforge.org/frs/download.php/45368/rails-2.0.5.tgz 
 
</Solutions>      <cnnvd>CNNVD-200811-348</cnnvd>      <Description>CRLF injection vulnerability in Ruby on Rails before 2.0.5 allows remote attackers to inject arbitrary HTTP headers and conduct HTTP response splitting attacks via a crafted URL to the redirect_to function.</Description>   </Vulnerability>   <Vulnerability added="2020-01-03" gvid="ID106181" id="106181" modified="2020-01-03" published="2009-12-16" version="2.0">      
        <name>Ruby on Rails: Improper Input Validation (CVE-2008-7248)</name>      
        <severity>7</severity>      
        <cvss>(AV:N/AC:M/Au:N/C:P/I:P/A:P)</cvss>      
        <Tags>         
             <tag>CSRF</tag>         
             <tag>Ruby on Rails</tag>         
        </Tags>      
        <AlternateIds>         
             <id name="CVE">CVE-2008-7248</id>         
             <id name="URL">http://groups.google.com/group/rubyonrails-security/browse_thread/thread/d741ee286e36e301?hl=en</id>         
             <id name="URL">http://lists.opensuse.org/opensuse-security-announce/2010-03/msg00004.html</id>         
             <id name="URL">http://pseudo-flaw.net/content/web-browsers/form-data-encoding-roundup/</id>         
             <id name="URL">http://secunia.com/advisories/36600</id>         
             <id name="URL">http://secunia.com/advisories/38915</id>         
             <id name="URL">http://weblog.rubyonrails.org/2008/11/18/potential-circumvention-of-csrf-protection-in-rails-2-1</id>         
             <id name="URL">http://www.openwall.com/lists/oss-security/2009/11/28/1</id>         
             <id name="URL">http://www.openwall.com/lists/oss-security/2009/12/02/2</id>         
             <id name="URL">http://www.rorsecurity.info/journal/2008/11/19/circumvent-rails-csrf-protection.html</id>         
             <id name="URL">http://www.vupen.com/english/advisories/2009/2544</id>         
        </AlternateIds>      
        
        
      <Check scope="node">         <NetworkService>            <Product minCertainty="0.85" name="Ruby on Rails">               <version>                  <low>2.1.0</low>                  <high>2.1.3</high>               </version>               <version>                  <low>2.2.0</low>                  <high>2.2.2</high>               </version>            </Product>         </NetworkService>      </Check>      <Solutions></Solutions>      <cnnvd>CNNVD-200912-202</cnnvd>      <Description>Ruby on Rails 2.1 before 2.1.3 and 2.2.x before 2.2.2 does not verify tokens for requests with certain content types, which allows remote attackers to bypass cross-site request forgery (CSRF) protection for requests to applications that rely on this protection, as demonstrated using text/plain.</Description>   </Vulnerability>   <Vulnerability added="2020-01-03" gvid="ID106182" id="106182" modified="2020-01-03" published="2009-09-08" version="2.0">      
        <name>Ruby on Rails: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') (CVE-2009-3009)</name>      
        <severity>4</severity>      
        <cvss>(AV:N/AC:M/Au:N/C:N/I:P/A:N)</cvss>      
        <Tags>         
             <tag>Ruby on Rails</tag>         
             <tag>Web</tag>         
             <tag>XSS</tag>         
        </Tags>      
        <AlternateIds>         
             <id name="APPLE">APPLE-SA-2010-03-29-1</id>         
             <id name="BID">36278</id>         
             <id name="CVE">CVE-2009-3009</id>         
             <id name="DEBIAN">DSA-1887</id>         
             <id name="URL">http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=545063</id>         
             <id name="URL">http://groups.google.com/group/rubyonrails-security/msg/7f57cd7794e1d1b4?dmode=source</id>         
             <id name="URL">http://lists.apple.com/archives/security-announce/2010//Mar/msg00001.html</id>         
             <id name="URL">http://lists.opensuse.org/opensuse-security-announce/2009-10/msg00004.html</id>         
             <id name="URL">http://secunia.com/advisories/36600</id>         
             <id name="URL">http://secunia.com/advisories/36717</id>         
             <id name="URL">http://securitytracker.com/id?1022824</id>         
             <id name="URL">http://support.apple.com/kb/HT4077</id>         
             <id name="URL">http://weblog.rubyonrails.org/2009/9/4/xss-vulnerability-in-ruby-on-rails</id>         
             <id name="URL">http://www.debian.org/security/2009/dsa-1887</id>         
             <id name="URL">http://www.osvdb.org/57666</id>         
             <id name="URL">http://www.securityfocus.com/bid/36278</id>         
             <id name="URL">http://www.vupen.com/english/advisories/2009/2544</id>         
             <id name="URL">https://exchange.xforce.ibmcloud.com/vulnerabilities/53036</id>         
             <id name="XF">53036</id>         
        </AlternateIds>      
        
        
      <Check scope="node">         <NetworkService>            <Product minCertainty="0.85" name="Ruby on Rails">               <version>                  <low>2.0.0</low>                  <high>2.0.5</high>               </version>               <version>                  <low>2.1.0</low>                  <high>2.1.3</high>               </version>               <version>                  <low>2.2.0</low>                  <high>2.2.3</high>               </version>               <version>                  <low>2.3.2</low>                  <high>2.3.3</high>               </version>            </Product>         </NetworkService>      </Check>      <Solutions>目前厂商已经发布了升级补丁以修复这个安全问题，补丁下载链接： 
http://weblog.rubyonrails.org/assets/2009/9/4/2-0-CVE-2009-3009.patch 
http://weblog.rubyonrails.org/assets/2009/9/4/2-1-CVE-2009-3009.patch 
http://weblog.rubyonrails.org/assets/2009/9/4/2-2-CVE-2009-3009.patch 
http://weblog.rubyonrails.org/assets/2009/9/4/2-3-CVE-2009-3009.patch</Solutions>      <cnnvd>CNNVD-200909-095</cnnvd>      <Description>Cross-site scripting (XSS) vulnerability in Ruby on Rails 2.x before 2.2.3, and 2.3.x before 2.3.4, allows remote attackers to inject arbitrary web script or HTML by placing malformed Unicode strings into a form helper.</Description>   </Vulnerability>   <Vulnerability added="2020-01-03" gvid="ID106183" id="106183" modified="2020-01-03" published="2009-09-08" version="2.0">      
        <name>Ruby on Rails: Information Exposure (CVE-2009-3086)</name>      
        <severity>5</severity>      
        <cvss>(AV:N/AC:L/Au:N/C:P/I:N/A:N)</cvss>      
        <Tags>         
             <tag>Ruby on Rails</tag>         
        </Tags>      
        <AlternateIds>         
             <id name="BID">37427</id>         
             <id name="CVE">CVE-2009-3086</id>         
             <id name="DEBIAN">DSA-2260</id>         
             <id name="URL">http://lists.opensuse.org/opensuse-security-announce/2009-10/msg00004.html</id>         
             <id name="URL">http://secunia.com/advisories/36600</id>         
             <id name="URL">http://weblog.rubyonrails.org/2009/9/4/timing-weakness-in-ruby-on-rails</id>         
             <id name="URL">http://www.debian.org/security/2011/dsa-2260</id>         
             <id name="URL">http://www.securityfocus.com/bid/37427</id>         
             <id name="URL">http://www.vupen.com/english/advisories/2009/2544</id>         
        </AlternateIds>      
        
        
      <Check scope="node">         <NetworkService>            <Product minCertainty="0.85" name="Ruby on Rails">               <version>                  <low>2.1.0</low>                  <high>2.1.3</high>               </version>               <version>                  <low>2.2.0</low>                  <high>2.2.3</high>               </version>               <version>                  <low>2.3.2</low>                  <high>2.3.3</high>               </version>            </Product>         </NetworkService>      </Check>      <Solutions>目前厂商已发布升级补丁以修复漏洞，补丁获取链接： 
https://weblog.rubyonrails.org/2009/9/4/timing-weakness-in-ruby-on-rails/</Solutions>      <cnnvd>CNNVD-200909-099</cnnvd>      <Description>A certain algorithm in Ruby on Rails 2.1.0 through 2.2.2, and 2.3.x before 2.3.4, leaks information about the complexity of message-digest signature verification in the cookie store, which might allow remote attackers to forge a digest via multiple attempts.</Description>   </Vulnerability>   <Vulnerability added="2020-01-03" gvid="ID106184" id="106184" modified="2020-01-03" published="2009-12-07" version="2.0">      
        <name>Ruby on Rails: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') (CVE-2009-4214)</name>      
        <severity>4</severity>      
        <cvss>(AV:N/AC:M/Au:N/C:N/I:P/A:N)</cvss>      
        <Tags>         
             <tag>Ruby on Rails</tag>         
             <tag>Web</tag>         
             <tag>XSS</tag>         
        </Tags>      
        <AlternateIds>         
             <id name="APPLE">APPLE-SA-2010-03-29-1</id>         
             <id name="BID">37142</id>         
             <id name="CVE">CVE-2009-4214</id>         
             <id name="DEBIAN">DSA-2260</id>         
             <id name="DEBIAN">DSA-2301</id>         
             <id name="URL">http://github.com/rails/rails/commit/bfe032858077bb2946abe25e95e485ba6da86bd5</id>         
             <id name="URL">http://groups.google.com/group/rubyonrails-security/browse_thread/thread/4d4f71f2aef4c0ab?pli=1</id>         
             <id name="URL">http://lists.apple.com/archives/security-announce/2010//Mar/msg00001.html</id>         
             <id name="URL">http://lists.opensuse.org/opensuse-security-announce/2010-03/msg00004.html</id>         
             <id name="URL">http://secunia.com/advisories/37446</id>         
             <id name="URL">http://secunia.com/advisories/38915</id>         
             <id name="URL">http://support.apple.com/kb/HT4077</id>         
             <id name="URL">http://weblog.rubyonrails.org/2009/11/30/ruby-on-rails-2-3-5-released</id>         
             <id name="URL">http://www.debian.org/security/2011/dsa-2260</id>         
             <id name="URL">http://www.debian.org/security/2011/dsa-2301</id>         
             <id name="URL">http://www.openwall.com/lists/oss-security/2009/11/27/2</id>         
             <id name="URL">http://www.openwall.com/lists/oss-security/2009/12/08/3</id>         
             <id name="URL">http://www.securityfocus.com/bid/37142</id>         
             <id name="URL">http://www.securitytracker.com/id?1023245</id>         
             <id name="URL">http://www.vupen.com/english/advisories/2009/3352</id>         
        </AlternateIds>      
        
        
      <Check scope="node">         <NetworkService>            <Product minCertainty="0.85" name="Ruby on Rails">               <version>                  <low>0.9.1</low>                  <high>0.9.5</high>               </version>               <version>                  <low>0.10.0</low>                  <high>0.10.2</high>               </version>               <version>                  <low>0.11.0</low>                  <high>0.11.2</high>               </version>               <version>                  <low>0.12.0</low>                  <high>0.12.2</high>               </version>               <version>                  <low>0.13.0</low>                  <high>0.13.2</high>               </version>               <version>                  <low>0.14.1</low>                  <high>0.14.5</high>               </version>               <version>                  <low>1.0.0</low>                  <high>1.0.1</high>               </version>               <version>                  <low>1.1.0</low>                  <high>1.1.7</high>               </version>               <version>                  <low>1.2.0</low>                  <high>1.2.7</high>               </version>               <version>                  <low>1.9.5</low>                  <high>1.9.6</high>               </version>               <version>                  <low>2.0.0</low>                  <high>2.0.5</high>               </version>               <version>                  <low>2.1.0</low>                  <high>2.1.2</high>               </version>               <version>                  <low>2.3.2</low>                  <high>2.3.4</high>               </version>            </Product>         </NetworkService>      </Check>      <Solutions>厂商补丁： 
目前厂商已经发布了升级补丁以修复这个安全问题，补丁下载链接： 
Ruby on Rails Ruby on Rails 2.2.2 
Ruby on Rails 2-2-strip_tags.patch 
http://rubyonrails-security.googlegroups.com/attach/b88c6aa1a9eb2309/2 -2-strip_tags.patch?view=1?=2 
Ruby on Rails Ruby on Rails 2.2.3 
Ruby on Rails 2-2-strip_tags.patch 
http://rubyonrails-security.googlegroups.com/attach/b88c6aa1a9eb2309/2 -2-strip_tags.patch?view=1?=2 
Ruby on Rails Ruby on Rails 2.3.2 
Ruby on Rails 2-3-strip_tags.patch 
http://groups.google.com/group/rubyonrails-security/attach/b88c6aa1a9e b2309/2-3-strip_tags.patch?part=3&amp;view=1 
Ruby on Rails Ruby on Rails 2.3.3 
Ruby on Rails 2-3-strip_tags.patch 
http://groups.google.com/group/rubyonrails-security/attach/b88c6aa1a9e b2309/2-3-strip_tags.patch?part=3&amp;view=1 
Ruby on Rails Ruby on Rails 2.3.4 
Ruby on Rails 2-3-strip_tags.patch 
http://groups.google.com/group/rubyonrails-security/attach/b88c6aa1a9e b2309/2-3-strip_tags.patch?part=3&amp;view=1</Solutions>      <cnnvd>CNNVD-200912-076</cnnvd>      <Description>Cross-site scripting (XSS) vulnerability in the strip_tags function in Ruby on Rails before 2.2.s, and 2.3.x before 2.3.5, allows remote attackers to inject arbitrary web script or HTML via vectors involving non-printing ASCII characters, related to HTML::Tokenizer and actionpack/lib/action_controller/vendor/html-scanner/html/node.rb.</Description>   </Vulnerability>   <Vulnerability added="2020-01-03" gvid="ID106185" id="106185" modified="2020-01-03" published="2019-11-12" version="2.0">      
        <name>Ruby on Rails: Missing Encryption of Sensitive Data (CVE-2010-3299)</name>      
        <severity>4</severity>      
        <cvss>(AV:N/AC:M/Au:N/C:P/I:N/A:N)</cvss>      
        <cvss3>CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:N/A:N</cvss3>      
        <Tags>         
             <tag>Ruby on Rails</tag>         
        </Tags>      
        <AlternateIds>         
             <id name="CVE">CVE-2010-3299</id>         
             <id name="URL">https://access.redhat.com/security/cve/cve-2010-3299</id>         
             <id name="URL">https://seclists.org/oss-sec/2010/q3/357</id>         
             <id name="URL">https://security-tracker.debian.org/tracker/CVE-2010-3299</id>         
             <id name="URL">https://www.usenix.org/legacy/events/woot10/tech/full_papers/Rizzo.pdf</id>         
        </AlternateIds>      
        
        
      <Check scope="node">         <NetworkService>            <Product minCertainty="0.85" name="Ruby on Rails">               <version>                  <low>2.3.0</low>                  <high>2.3.1</high>               </version>            </Product>         </NetworkService>      </Check>      <Solutions>目前厂商已发布升级补丁以修复漏洞，详情请关注厂商主页： 
https://rubyonrails.org/</Solutions>      <cnnvd>CNNVD-201911-674</cnnvd>      <Description>The encrypt/decrypt functions in Ruby on Rails 2.3 are vulnerable to padding oracle attacks.</Description>   </Vulnerability>   <Vulnerability added="2020-01-03" gvid="ID106186" id="106186" modified="2020-01-03" published="2010-10-28" version="2.0">      
        <name>Ruby on Rails: Improper Input Validation (CVE-2010-3933)</name>      
        <severity>6</severity>      
        <cvss>(AV:N/AC:L/Au:N/C:N/I:P/A:P)</cvss>      
        <Tags>         
             <tag>Ruby on Rails</tag>         
        </Tags>      
        <AlternateIds>         
             <id name="CVE">CVE-2010-3933</id>         
             <id name="URL">http://secunia.com/advisories/41930</id>         
             <id name="URL">http://securitytracker.com/id?1024624</id>         
             <id name="URL">http://weblog.rubyonrails.org/2010/10/15/security-vulnerability-in-nested-attributes-code-in-ruby-on-rails-2-3-9-and-3-0-0</id>         
             <id name="URL">http://www.vupen.com/english/advisories/2010/2719</id>         
        </AlternateIds>      
        
        
      <Check scope="node">         <NetworkService>            <Product minCertainty="0.85" name="Ruby on Rails">               <version>                  <low>2.3.9</low>                  <high>2.3.10</high>               </version>               <version>                  <low>3.0.0</low>                  <high>3.0.0</high>               </version>            </Product>         </NetworkService>      </Check>      <Solutions>目前厂商已经发布了升级补丁以修复此安全问题，补丁获取链接： 
http://rubyonrails.org/download</Solutions>      <cnnvd>CNNVD-201010-398</cnnvd>      <Description>Ruby on Rails 2.3.9 and 3.0.0 does not properly handle nested attributes, which allows remote attackers to modify arbitrary records by changing the names of parameters for form inputs.</Description>   </Vulnerability>   <Vulnerability added="2020-01-03" gvid="ID106187" id="106187" modified="2020-01-03" published="2011-02-14" version="2.0">      
        <name>Ruby on Rails: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') (CVE-2011-0446)</name>      
        <severity>4</severity>      
        <cvss>(AV:N/AC:M/Au:N/C:N/I:P/A:N)</cvss>      
        <Tags>         
             <tag>Mail</tag>         
             <tag>Ruby on Rails</tag>         
             <tag>Web</tag>         
             <tag>XSS</tag>         
        </Tags>      
        <AlternateIds>         
             <id name="BID">46291</id>         
             <id name="CVE">CVE-2011-0446</id>         
             <id name="DEBIAN">DSA-2247</id>         
             <id name="URL">http://groups.google.com/group/rubyonrails-security/msg/365b8a23b76a6b4a?dmode=source&amp;amp;output=gplain</id>         
             <id name="URL">http://lists.fedoraproject.org/pipermail/package-announce/2011-April/057650.html</id>         
             <id name="URL">http://lists.fedoraproject.org/pipermail/package-announce/2011-March/055074.html</id>         
             <id name="URL">http://lists.fedoraproject.org/pipermail/package-announce/2011-March/055088.html</id>         
             <id name="URL">http://secunia.com/advisories/43274</id>         
             <id name="URL">http://secunia.com/advisories/43666</id>         
             <id name="URL">http://www.debian.org/security/2011/dsa-2247</id>         
             <id name="URL">http://www.securityfocus.com/bid/46291</id>         
             <id name="URL">http://www.securitytracker.com/id?1025064</id>         
             <id name="URL">http://www.vupen.com/english/advisories/2011/0587</id>         
             <id name="URL">http://www.vupen.com/english/advisories/2011/0877</id>         
        </AlternateIds>      
        
        
      <Check scope="node">         <NetworkService>            <Product minCertainty="0.85" name="Ruby on Rails">               <version>                  <low>2.0.0</low>                  <high>2.0.5</high>               </version>               <version>                  <low>2.1.0</low>                  <high>2.1.3</high>               </version>               <version>                  <low>2.2.0</low>                  <high>2.2.3</high>               </version>               <version>                  <low>2.3.2</low>                  <high>2.3.11</high>               </version>               <version>                  <low>3.0.0</low>                  <high>3.0.4</high>               </version>            </Product>         </NetworkService>      </Check>      <Solutions>目前厂商已经发布了升级补丁以修复此安全问题，补丁获取链接： 
http://rubyonrails.org/download</Solutions>      <cnnvd>CNNVD-201102-213</cnnvd>      <Description>Multiple cross-site scripting (XSS) vulnerabilities in the mail_to helper in Ruby on Rails before 2.3.11, and 3.x before 3.0.4, when javascript encoding is used, allow remote attackers to inject arbitrary web script or HTML via a crafted (1) name or (2) email value.</Description>   </Vulnerability>   <Vulnerability added="2020-01-03" gvid="ID106188" id="106188" modified="2020-01-03" published="2011-02-14" version="2.0">      
        <name>Ruby on Rails: Cross-Site Request Forgery (CSRF) (CVE-2011-0447)</name>      
        <severity>7</severity>      
        <cvss>(AV:N/AC:M/Au:N/C:P/I:P/A:P)</cvss>      
        <Tags>         
             <tag>CSRF</tag>         
             <tag>Ruby on Rails</tag>         
             <tag>Web</tag>         
        </Tags>      
        <AlternateIds>         
             <id name="BID">46291</id>         
             <id name="CVE">CVE-2011-0447</id>         
             <id name="DEBIAN">DSA-2247</id>         
             <id name="URL">http://groups.google.com/group/rubyonrails-security/msg/c22ea1668c0d181c?dmode=source&amp;amp;output=gplain</id>         
             <id name="URL">http://lists.fedoraproject.org/pipermail/package-announce/2011-April/057650.html</id>         
             <id name="URL">http://lists.fedoraproject.org/pipermail/package-announce/2011-March/055074.html</id>         
             <id name="URL">http://lists.fedoraproject.org/pipermail/package-announce/2011-March/055088.html</id>         
             <id name="URL">http://secunia.com/advisories/43274</id>         
             <id name="URL">http://secunia.com/advisories/43666</id>         
             <id name="URL">http://weblog.rubyonrails.org/2011/2/8/csrf-protection-bypass-in-ruby-on-rails</id>         
             <id name="URL">http://www.debian.org/security/2011/dsa-2247</id>         
             <id name="URL">http://www.securityfocus.com/bid/46291</id>         
             <id name="URL">http://www.securitytracker.com/id?1025060</id>         
             <id name="URL">http://www.vupen.com/english/advisories/2011/0587</id>         
             <id name="URL">http://www.vupen.com/english/advisories/2011/0877</id>         
        </AlternateIds>      
        
        
      <Check scope="node">         <NetworkService>            <Product minCertainty="0.85" name="Ruby on Rails">               <version>                  <low>2.1.0</low>                  <high>2.1.3</high>               </version>               <version>                  <low>2.2.0</low>                  <high>2.2.3</high>               </version>               <version>                  <low>2.3.2</low>                  <high>2.3.11</high>               </version>               <version>                  <low>3.0.0</low>                  <high>3.0.4</high>               </version>            </Product>         </NetworkService>      </Check>      <Solutions>目前厂商已经发布了升级补丁以修复此安全问题，补丁获取链接： 
http://rubyonrails.org/download</Solutions>      <cnnvd>CNNVD-201102-214</cnnvd>      <Description>Ruby on Rails 2.1.x, 2.2.x, and 2.3.x before 2.3.11, and 3.x before 3.0.4, does not properly validate HTTP requests that contain an X-Requested-With header, which makes it easier for remote attackers to conduct cross-site request forgery (CSRF) attacks via forged (1) AJAX or (2) API requests that leverage &quot;combinations of browser plugins and HTTP redirects,&quot; a related issue to CVE-2011-0696.</Description>   </Vulnerability>   <Vulnerability added="2020-01-03" gvid="ID106189" id="106189" modified="2020-01-03" published="2011-02-21" version="2.0">      
        <name>Ruby on Rails: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') (CVE-2011-0448)</name>      
        <severity>8</severity>      
        <cvss>(AV:N/AC:L/Au:N/C:P/I:P/A:P)</cvss>      
        <Tags>         
             <tag>Database</tag>         
             <tag>Ruby on Rails</tag>         
             <tag>SQL Injection</tag>         
        </Tags>      
        <AlternateIds>         
             <id name="CVE">CVE-2011-0448</id>         
             <id name="URL">http://groups.google.com/group/rubyonrails-security/msg/4e19864cf6ad40ad?dmode=source&amp;amp;output=gplain</id>         
             <id name="URL">http://lists.fedoraproject.org/pipermail/package-announce/2011-April/057650.html</id>         
             <id name="URL">http://secunia.com/advisories/43278</id>         
             <id name="URL">http://securitytracker.com/id?1025063</id>         
             <id name="URL">http://weblog.rubyonrails.org/2011/2/8/new-releases-2-3-11-and-3-0-4</id>         
             <id name="URL">http://www.vupen.com/english/advisories/2011/0877</id>         
        </AlternateIds>      
        
        
      <Check scope="node">         <NetworkService>            <Product minCertainty="0.85" name="Ruby on Rails">               <version>                  <low>3.0.0</low>                  <high>3.0.4</high>               </version>            </Product>         </NetworkService>      </Check>      <Solutions>目前厂商已经发布了升级补丁以修复此安全问题，补丁获取链接： 
http://weblog.rubyonrails.org/2011/2/8/new-releases-2-3-11-and-3-0-4 
</Solutions>      <cnnvd>CNNVD-201102-297</cnnvd>      <Description>Ruby on Rails 3.0.x before 3.0.4 does not ensure that arguments to the limit function specify integer values, which makes it easier for remote attackers to conduct SQL injection attacks via a non-numeric argument.</Description>   </Vulnerability>   <Vulnerability added="2020-01-03" gvid="ID106190" id="106190" modified="2020-01-03" published="2011-02-21" version="2.0">      
        <name>Ruby on Rails: Permissions, Privileges, and Access Controls (CVE-2011-0449)</name>      
        <severity>8</severity>      
        <cvss>(AV:N/AC:L/Au:N/C:P/I:P/A:P)</cvss>      
        <Tags>         
             <tag>Ruby on Rails</tag>         
        </Tags>      
        <AlternateIds>         
             <id name="CVE">CVE-2011-0449</id>         
             <id name="URL">http://groups.google.com/group/rubyonrails-security/msg/04345b2e84df5b4f?dmode=source&amp;amp;output=gplain</id>         
             <id name="URL">http://lists.fedoraproject.org/pipermail/package-announce/2011-April/057650.html</id>         
             <id name="URL">http://secunia.com/advisories/43278</id>         
             <id name="URL">http://securitytracker.com/id?1025061</id>         
             <id name="URL">http://weblog.rubyonrails.org/2011/2/8/new-releases-2-3-11-and-3-0-4</id>         
             <id name="URL">http://www.vupen.com/english/advisories/2011/0877</id>         
        </AlternateIds>      
        
        
      <Check scope="node">         <NetworkService>            <Product minCertainty="0.85" name="Ruby on Rails">               <version>                  <low>3.0.0</low>                  <high>3.0.4</high>               </version>            </Product>         </NetworkService>      </Check>      <Solutions>目前厂商已经发布了升级补丁以修复此安全问题，补丁获取链接： 
http://weblog.rubyonrails.org/2011/2/8/new-releases-2-3-11-and-3-0-4 
</Solutions>      <cnnvd>CNNVD-201102-298</cnnvd>      <Description>actionpack/lib/action_view/template/resolver.rb in Ruby on Rails 3.0.x before 3.0.4, when a case-insensitive filesystem is used, does not properly implement filters associated with the list of available templates, which allows remote attackers to bypass intended access restrictions via an action name that uses an unintended case for alphabetic characters.</Description>   </Vulnerability>   <Vulnerability added="2017-05-17" gvid="ID106191" id="106191" modified="2020-01-03" published="2011-06-30" version="2.0">      
        
        <severity>4</severity>      
        <cvss>(AV:N/AC:M/Au:N/C:N/I:P/A:N)</cvss>      
        <Tags>         
             <tag>Ruby on Rails</tag>         
             <tag>Web</tag>         
             <tag>XSS</tag>         
        </Tags>      
        <AlternateIds>         
             <id name="CVE">CVE-2011-2197</id>         
             <id name="URL">http://groups.google.com/group/rubyonrails-security/msg/663b600d4471e0d4?dmode=source&amp;amp;output=gplain</id>         
             <id name="URL">http://lists.fedoraproject.org/pipermail/package-announce/2011-July/062514.html</id>         
             <id name="URL">http://lists.fedoraproject.org/pipermail/package-announce/2011-June/062090.html</id>         
             <id name="URL">http://openwall.com/lists/oss-security/2011/06/09/2</id>         
             <id name="URL">http://openwall.com/lists/oss-security/2011/06/13/9</id>         
             <id name="URL">http://secunia.com/advisories/44789</id>         
             <id name="URL">http://weblog.rubyonrails.org/2011/6/8/potential-xss-vulnerability-in-ruby-on-rails-applications</id>         
        </AlternateIds>      
        
        
      <Check scope="node">         <NetworkService>            <Product minCertainty="0.85" name="Ruby on Rails">               <version>                  <low>2.0.0</low>                  <high>2.0.5</high>               </version>               <version>                  <low>2.1.0</low>                  <high>2.1.3</high>               </version>               <version>                  <low>2.2.0</low>                  <high>2.2.3</high>               </version>               <version>                  <low>2.3.2</low>                  <high>2.3.12</high>               </version>               <version>                  <low>3.0.0</low>                  <high>3.0.9</high>               </version>               <version>                  <low>3.1.0</low>                  <high>3.1.0</high>               </version>               <version>                  <low>3.1.0</low>                  <high>3.1.0</high>               </version>               <version>                  <low>3.1.0</low>                  <high>3.1.0</high>               </version>            </Product>         </NetworkService>      </Check>      <Solutions>目前厂商已经发布了升级补丁以修复此安全问题，补丁获取链接: 
http://weblog.rubyonrails.org/2011/6/8/potential-xss-vulnerability-in-ruby-on-rails-applications</Solutions>      <cnnvd>CNNVD-201106-389</cnnvd>      <name>Ruby on Rails のクロスサイトスクリプティング制限機能におけるクロスサイトスクリプティングの脆弱性</name>      <Description>
    </Description>   </Vulnerability>   <Vulnerability added="2017-05-02" gvid="ID106192" id="106192" modified="2020-01-03" published="2011-08-29" version="2.0">      
        
        <severity>5</severity>      
        <cvss>(AV:N/AC:L/Au:N/C:N/I:P/A:N)</cvss>      
        <Tags>         
             <tag>Ruby on Rails</tag>         
        </Tags>      
        <AlternateIds>         
             <id name="CVE">CVE-2011-2929</id>         
             <id name="URL">http://groups.google.com/group/rubyonrails-security/msg/cbbbba6e4f7eaf61?dmode=source&amp;amp;output=gplain</id>         
             <id name="URL">http://lists.fedoraproject.org/pipermail/package-announce/2011-September/065109.html</id>         
             <id name="URL">http://lists.fedoraproject.org/pipermail/package-announce/2011-September/065212.html</id>         
             <id name="URL">http://weblog.rubyonrails.org/2011/8/16/ann-rails-3-1-0-rc6</id>         
             <id name="URL">http://www.openwall.com/lists/oss-security/2011/08/17/1</id>         
             <id name="URL">http://www.openwall.com/lists/oss-security/2011/08/19/11</id>         
             <id name="URL">http://www.openwall.com/lists/oss-security/2011/08/20/1</id>         
             <id name="URL">http://www.openwall.com/lists/oss-security/2011/08/22/13</id>         
             <id name="URL">http://www.openwall.com/lists/oss-security/2011/08/22/14</id>         
             <id name="URL">http://www.openwall.com/lists/oss-security/2011/08/22/5</id>         
             <id name="URL">https://bugzilla.redhat.com/show_bug.cgi?id=731432</id>         
             <id name="URL">https://github.com/rails/rails/commit/5f94b93279f6d0682fafb237c301302c107a9552</id>         
        </AlternateIds>      
        
        
      <Check scope="node">         <NetworkService>            <Product minCertainty="0.85" name="Ruby on Rails">               <version>                  <low>3.0.0</low>                  <high>3.0.11</high>               </version>               <version>                  <low>3.1.0</low>                  <high>3.1.0</high>               </version>               <version>                  <low>3.1.0</low>                  <high>3.1.0</high>               </version>               <version>                  <low>3.1.0</low>                  <high>3.1.0</high>               </version>               <version>                  <low>3.1.0</low>                  <high>3.1.0</high>               </version>               <version>                  <low>3.1.0</low>                  <high>3.1.0</high>               </version>               <version>                  <low>3.1.0</low>                  <high>3.1.0</high>               </version>               <version>                  <low>3.1.0</low>                  <high>3.1.0</high>               </version>            </Product>         </NetworkService>      </Check>      <Solutions>目前厂商已经发布了升级补丁以修复此安全问题，补丁获取链接： 
https://github.com/rails/rails/commit/5f94b93279f6d0682fafb237c301302c107a9552</Solutions>      <cnnvd>CNNVD-201108-479</cnnvd>      <name>Ruby on Rails のテンプレート選択機能における任意のビューを表示される脆弱性</name>      <Description>
    </Description>   </Vulnerability>   <Vulnerability added="2020-01-03" gvid="ID106193" id="106193" modified="2020-01-03" published="2011-08-29" version="2.0">      
        <name>Ruby on Rails: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') (CVE-2011-2930)</name>      
        <severity>8</severity>      
        <cvss>(AV:N/AC:L/Au:N/C:P/I:P/A:P)</cvss>      
        <Tags>         
             <tag>Database</tag>         
             <tag>Remote Execution</tag>         
             <tag>Ruby on Rails</tag>         
             <tag>SQL Injection</tag>         
        </Tags>      
        <AlternateIds>         
             <id name="CVE">CVE-2011-2930</id>         
             <id name="DEBIAN">DSA-2301</id>         
             <id name="URL">http://groups.google.com/group/rubyonrails-security/msg/b1a85d36b0f9dd30?dmode=source&amp;amp;output=gplain</id>         
             <id name="URL">http://lists.fedoraproject.org/pipermail/package-announce/2011-September/065212.html</id>         
             <id name="URL">http://weblog.rubyonrails.org/2011/8/16/ann-rails-3-1-0-rc6</id>         
             <id name="URL">http://www.debian.org/security/2011/dsa-2301</id>         
             <id name="URL">http://www.openwall.com/lists/oss-security/2011/08/17/1</id>         
             <id name="URL">http://www.openwall.com/lists/oss-security/2011/08/19/11</id>         
             <id name="URL">http://www.openwall.com/lists/oss-security/2011/08/20/1</id>         
             <id name="URL">http://www.openwall.com/lists/oss-security/2011/08/22/13</id>         
             <id name="URL">http://www.openwall.com/lists/oss-security/2011/08/22/14</id>         
             <id name="URL">http://www.openwall.com/lists/oss-security/2011/08/22/5</id>         
             <id name="URL">https://bugzilla.redhat.com/show_bug.cgi?id=731438</id>         
             <id name="URL">https://github.com/rails/rails/commit/8a39f411dc3c806422785b1f4d5c7c9d58e4bf85</id>         
        </AlternateIds>      
        
        
      <Check scope="node">         <NetworkService>            <Product minCertainty="0.85" name="Ruby on Rails">               <version>                  <low>2.0.0</low>                  <high>2.0.5</high>               </version>               <version>                  <low>2.1.0</low>                  <high>2.1.3</high>               </version>               <version>                  <low>2.2.0</low>                  <high>2.2.3</high>               </version>               <version>                  <low>2.3.2</low>                  <high>2.3.13</high>               </version>               <version>                  <low>3.0.0</low>                  <high>3.0.11</high>               </version>               <version>                  <low>3.1.0</low>                  <high>3.1.0</high>               </version>               <version>                  <low>3.1.0</low>                  <high>3.1.0</high>               </version>               <version>                  <low>3.1.0</low>                  <high>3.1.0</high>               </version>               <version>                  <low>3.1.0</low>                  <high>3.1.0</high>               </version>               <version>                  <low>3.1.0</low>                  <high>3.1.0</high>               </version>               <version>                  <low>3.1.0</low>                  <high>3.1.0</high>               </version>            </Product>         </NetworkService>      </Check>      <Solutions>目前厂商已经发布了升级补丁以修复此安全问题，补丁获取链接： 
https://github.com/rails/rails/commit/8a39f411dc3c806422785b1f4d5c7c9d58e4bf85</Solutions>      <cnnvd>CNNVD-201108-480</cnnvd>      <Description>Multiple SQL injection vulnerabilities in the quote_table_name method in the ActiveRecord adapters in activerecord/lib/active_record/connection_adapters/ in Ruby on Rails before 2.3.13, 3.0.x before 3.0.10, and 3.1.x before 3.1.0.rc5 allow remote attackers to execute arbitrary SQL commands via a crafted column name.</Description>   </Vulnerability>   <Vulnerability added="2020-01-03" gvid="ID106194" id="106194" modified="2020-01-03" published="2011-08-29" version="2.0">      
        <name>Ruby on Rails: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') (CVE-2011-2931)</name>      
        <severity>4</severity>      
        <cvss>(AV:N/AC:M/Au:N/C:N/I:P/A:N)</cvss>      
        <Tags>         
             <tag>Ruby on Rails</tag>         
             <tag>Web</tag>         
             <tag>XSS</tag>         
        </Tags>      
        <AlternateIds>         
             <id name="CVE">CVE-2011-2931</id>         
             <id name="DEBIAN">DSA-2301</id>         
             <id name="URL">http://groups.google.com/group/rubyonrails-security/msg/fd41ab62966e0fd1?dmode=source&amp;amp;output=gplain</id>         
             <id name="URL">http://lists.fedoraproject.org/pipermail/package-announce/2011-September/065109.html</id>         
             <id name="URL">http://lists.fedoraproject.org/pipermail/package-announce/2011-September/065137.html</id>         
             <id name="URL">http://lists.fedoraproject.org/pipermail/package-announce/2011-September/065212.html</id>         
             <id name="URL">http://secunia.com/advisories/45921</id>         
             <id name="URL">http://weblog.rubyonrails.org/2011/8/16/ann-rails-3-1-0-rc6</id>         
             <id name="URL">http://www.debian.org/security/2011/dsa-2301</id>         
             <id name="URL">http://www.openwall.com/lists/oss-security/2011/08/17/1</id>         
             <id name="URL">http://www.openwall.com/lists/oss-security/2011/08/19/11</id>         
             <id name="URL">http://www.openwall.com/lists/oss-security/2011/08/20/1</id>         
             <id name="URL">http://www.openwall.com/lists/oss-security/2011/08/22/13</id>         
             <id name="URL">http://www.openwall.com/lists/oss-security/2011/08/22/14</id>         
             <id name="URL">http://www.openwall.com/lists/oss-security/2011/08/22/5</id>         
             <id name="URL">https://bugzilla.redhat.com/show_bug.cgi?id=731436</id>         
             <id name="URL">https://github.com/rails/rails/commit/586a944ddd4d03e66dea1093306147594748037a</id>         
        </AlternateIds>      
        
        
      <Check scope="node">         <NetworkService>            <Product minCertainty="0.85" name="Ruby on Rails">               <version>                  <low>2.0.0</low>                  <high>2.0.5</high>               </version>               <version>                  <low>2.1.0</low>                  <high>2.1.3</high>               </version>               <version>                  <low>2.2.0</low>                  <high>2.2.3</high>               </version>               <version>                  <low>2.3.2</low>                  <high>2.3.13</high>               </version>               <version>                  <low>3.0.0</low>                  <high>3.0.11</high>               </version>               <version>                  <low>3.1.0</low>                  <high>3.1.0</high>               </version>               <version>                  <low>3.1.0</low>                  <high>3.1.0</high>               </version>               <version>                  <low>3.1.0</low>                  <high>3.1.0</high>               </version>               <version>                  <low>3.1.0</low>                  <high>3.1.0</high>               </version>               <version>                  <low>3.1.0</low>                  <high>3.1.0</high>               </version>               <version>                  <low>3.1.0</low>                  <high>3.1.0</high>               </version>            </Product>         </NetworkService>      </Check>      <Solutions>目前厂商已经发布了升级补丁以修复此安全问题，补丁获取链接： 
https://github.com/rails/rails/commit/586a944ddd4d03e66dea1093306147594748037a</Solutions>      <cnnvd>CNNVD-201108-481</cnnvd>      <Description>Cross-site scripting (XSS) vulnerability in the strip_tags helper in actionpack/lib/action_controller/vendor/html-scanner/html/node.rb in Ruby on Rails before 2.3.13, 3.0.x before 3.0.10, and 3.1.x before 3.1.0.rc5 allows remote attackers to inject arbitrary web script or HTML via a tag with an invalid name.</Description>   </Vulnerability>   <Vulnerability added="2020-01-03" gvid="ID106195" id="106195" modified="2020-01-03" published="2011-08-29" version="2.0">      
        <name>Ruby on Rails: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') (CVE-2011-2932)</name>      
        <severity>4</severity>      
        <cvss>(AV:N/AC:M/Au:N/C:N/I:P/A:N)</cvss>      
        <Tags>         
             <tag>Ruby on Rails</tag>         
             <tag>Web</tag>         
             <tag>XSS</tag>         
        </Tags>      
        <AlternateIds>         
             <id name="CVE">CVE-2011-2932</id>         
             <id name="URL">http://groups.google.com/group/rubyonrails-security/msg/f1d2749773db9f21?dmode=source&amp;amp;output=gplain</id>         
             <id name="URL">http://lists.fedoraproject.org/pipermail/package-announce/2011-September/065114.html</id>         
             <id name="URL">http://lists.fedoraproject.org/pipermail/package-announce/2011-September/065189.html</id>         
             <id name="URL">http://lists.fedoraproject.org/pipermail/package-announce/2011-September/065212.html</id>         
             <id name="URL">http://secunia.com/advisories/45917</id>         
             <id name="URL">http://weblog.rubyonrails.org/2011/8/16/ann-rails-3-1-0-rc6</id>         
             <id name="URL">http://www.openwall.com/lists/oss-security/2011/08/17/1</id>         
             <id name="URL">http://www.openwall.com/lists/oss-security/2011/08/19/11</id>         
             <id name="URL">http://www.openwall.com/lists/oss-security/2011/08/20/1</id>         
             <id name="URL">http://www.openwall.com/lists/oss-security/2011/08/22/13</id>         
             <id name="URL">http://www.openwall.com/lists/oss-security/2011/08/22/14</id>         
             <id name="URL">http://www.openwall.com/lists/oss-security/2011/08/22/5</id>         
             <id name="URL">https://bugzilla.redhat.com/show_bug.cgi?id=731435</id>         
             <id name="URL">https://github.com/rails/rails/commit/bfc432574d0b141fd7fe759edfe9b6771dd306bd</id>         
        </AlternateIds>      
        
        
      <Check scope="node">         <NetworkService>            <Product minCertainty="0.85" name="Ruby on Rails">               <version>                  <low>2.0.0</low>                  <high>2.0.5</high>               </version>               <version>                  <low>2.1.0</low>                  <high>2.1.3</high>               </version>               <version>                  <low>2.2.0</low>                  <high>2.2.3</high>               </version>               <version>                  <low>2.3.2</low>                  <high>2.3.13</high>               </version>               <version>                  <low>3.0.0</low>                  <high>3.0.11</high>               </version>               <version>                  <low>3.1.0</low>                  <high>3.1.0</high>               </version>               <version>                  <low>3.1.0</low>                  <high>3.1.0</high>               </version>               <version>                  <low>3.1.0</low>                  <high>3.1.0</high>               </version>               <version>                  <low>3.1.0</low>                  <high>3.1.0</high>               </version>               <version>                  <low>3.1.0</low>                  <high>3.1.0</high>               </version>               <version>                  <low>3.1.0</low>                  <high>3.1.0</high>               </version>            </Product>         </NetworkService>      </Check>      <Solutions>目前厂商已经发布了升级补丁以修复此安全问题，补丁获取链接： 
https://github.com/rails/rails/commit/bfc432574d0b141fd7fe759edfe9b6771dd306bd</Solutions>      <cnnvd>CNNVD-201108-482</cnnvd>      <Description>Cross-site scripting (XSS) vulnerability in activesupport/lib/active_support/core_ext/string/output_safety.rb in Ruby on Rails 2.x before 2.3.13, 3.0.x before 3.0.10, and 3.1.x before 3.1.0.rc5 allows remote attackers to inject arbitrary web script or HTML via a malformed Unicode string, related to a &quot;UTF-8 escaping vulnerability.&quot;</Description>   </Vulnerability>   <Vulnerability added="2020-01-03" gvid="ID106196" id="106196" modified="2020-01-03" published="2011-08-29" version="2.0">      
        <name>Ruby on Rails: Improper Control of Generation of Code ('Code Injection') (CVE-2011-3186)</name>      
        <severity>4</severity>      
        <cvss>(AV:N/AC:M/Au:N/C:N/I:P/A:N)</cvss>      
        <Tags>         
             <tag>Ruby on Rails</tag>         
             <tag>Web</tag>         
        </Tags>      
        <AlternateIds>         
             <id name="CVE">CVE-2011-3186</id>         
             <id name="DEBIAN">DSA-2301</id>         
             <id name="URL">http://groups.google.com/group/rubyonrails-security/msg/bbe342e43abaa78c?dmode=source&amp;amp;output=gplain</id>         
             <id name="URL">http://lists.fedoraproject.org/pipermail/package-announce/2011-September/065137.html</id>         
             <id name="URL">http://secunia.com/advisories/45921</id>         
             <id name="URL">http://www.debian.org/security/2011/dsa-2301</id>         
             <id name="URL">http://www.openwall.com/lists/oss-security/2011/08/17/1</id>         
             <id name="URL">http://www.openwall.com/lists/oss-security/2011/08/19/11</id>         
             <id name="URL">http://www.openwall.com/lists/oss-security/2011/08/20/1</id>         
             <id name="URL">http://www.openwall.com/lists/oss-security/2011/08/22/13</id>         
             <id name="URL">http://www.openwall.com/lists/oss-security/2011/08/22/14</id>         
             <id name="URL">http://www.openwall.com/lists/oss-security/2011/08/22/5</id>         
             <id name="URL">https://bugzilla.redhat.com/show_bug.cgi?id=732156</id>         
             <id name="URL">https://github.com/rails/rails/commit/11dafeaa7533be26441a63618be93a03869c83a9</id>         
        </AlternateIds>      
        
        
      <Check scope="node">         <NetworkService>            <Product minCertainty="0.85" name="Ruby on Rails">               <version>                  <low>2.3.2</low>                  <high>2.3.13</high>               </version>            </Product>         </NetworkService>      </Check>      <Solutions>目前厂商已经发布了升级补丁以修复此安全问题，补丁获取链接： 
https://github.com/rails/rails/commit/11dafeaa7533be26441a63618be93a03869c83a9</Solutions>      <cnnvd>CNNVD-201108-483</cnnvd>      <Description>CRLF injection vulnerability in actionpack/lib/action_controller/response.rb in Ruby on Rails 2.3.x before 2.3.13 allows remote attackers to inject arbitrary HTTP headers and conduct HTTP response splitting attacks via the Content-Type header.</Description>   </Vulnerability>   <Vulnerability added="2017-05-02" gvid="ID106197" id="106197" modified="2020-01-03" published="2011-08-29" version="2.0">      
        
        <severity>4</severity>      
        <cvss>(AV:N/AC:M/Au:N/C:N/I:P/A:N)</cvss>      
        <Tags>         
             <tag>Ruby on Rails</tag>         
        </Tags>      
        <AlternateIds>         
             <id name="CVE">CVE-2011-3187</id>         
             <id name="URL">http://archives.neohapsis.com/archives/fulldisclosure/2011-02/0337.html</id>         
             <id name="URL">http://webservsec.blogspot.com/2011/02/ruby-on-rails-vulnerability.html</id>         
             <id name="URL">http://www.openwall.com/lists/oss-security/2011/08/17/1</id>         
             <id name="URL">http://www.openwall.com/lists/oss-security/2011/08/19/11</id>         
             <id name="URL">http://www.openwall.com/lists/oss-security/2011/08/20/1</id>         
             <id name="URL">http://www.openwall.com/lists/oss-security/2011/08/22/13</id>         
             <id name="URL">http://www.openwall.com/lists/oss-security/2011/08/22/14</id>         
             <id name="URL">http://www.openwall.com/lists/oss-security/2011/08/22/5</id>         
             <id name="URL">https://bugzilla.novell.com/show_bug.cgi?id=673010</id>         
        </AlternateIds>      
        
        
      <Check scope="node">         <NetworkService>            <Product minCertainty="0.85" name="Ruby on Rails">               <version>                  <low>3.0.5</low>                  <high>3.0.5</high>               </version>            </Product>         </NetworkService>      </Check>      <Solutions>目前厂商已经发布了升级补丁以修复此安全问题，补丁获取链接： 
https://bugzilla.novell.com/show_bug.cgi?id=673010</Solutions>      <cnnvd>CNNVD-201108-484</cnnvd>      <name>Ruby on Rails の to_s メソッドにおける任意のテキストをログファイルに挿入される脆弱性</name>      <Description>
    </Description>   </Vulnerability>   <Vulnerability added="2017-05-02" gvid="ID106198" id="106198" modified="2020-01-03" published="2011-11-28" version="2.0">      
        
        <severity>4</severity>      
        <cvss>(AV:N/AC:M/Au:N/C:N/I:P/A:N)</cvss>      
        <Tags>         
             <tag>Ruby on Rails</tag>         
             <tag>Web</tag>         
             <tag>XSS</tag>         
        </Tags>      
        <AlternateIds>         
             <id name="BID">50722</id>         
             <id name="CVE">CVE-2011-4319</id>         
             <id name="URL">http://groups.google.com/group/rubyonrails-security/browse_thread/thread/2b61d70fb73c7cc5?pli=1</id>         
             <id name="URL">http://groups.google.com/group/rubyonrails-security/msg/c65c24fbc4b6dd82?dmode=source&amp;amp;output=gplain</id>         
             <id name="URL">http://openwall.com/lists/oss-security/2011/11/18/8</id>         
             <id name="URL">http://osvdb.org/77199</id>         
             <id name="URL">http://weblog.rubyonrails.org/2011/11/18/rails-3-0-11-has-been-released</id>         
             <id name="URL">http://weblog.rubyonrails.org/2011/11/18/rails-3-1-2-has-been-released</id>         
             <id name="URL">http://www.securityfocus.com/bid/50722</id>         
             <id name="URL">http://www.securitytracker.com/id?1026342</id>         
             <id name="URL">https://exchange.xforce.ibmcloud.com/vulnerabilities/71364</id>         
             <id name="XF">71364</id>         
        </AlternateIds>      
        
        
      <Check scope="node">         <NetworkService>            <Product minCertainty="0.85" name="Ruby on Rails">               <version>                  <low>2.3.2</low>                  <high>2.3.13</high>               </version>               <version>                  <low>3.0.0</low>                  <high>3.0.11</high>               </version>               <version>                  <low>3.1.0</low>                  <high>3.1.1</high>               </version>               <version>                  <low>3.1.0</low>                  <high>3.1.1</high>               </version>               <version>                  <low>3.1.0</low>                  <high>3.1.1</high>               </version>               <version>                  <low>3.1.0</low>                  <high>3.1.1</high>               </version>            </Product>         </NetworkService>      </Check>      <Solutions>目前厂商已经发布了升级补丁以修复此安全问题，补丁获取链接： 
http://weblog.rubyonrails.org/2011/11/18/rails-3-1-2-has-been-released</Solutions>      <cnnvd>CNNVD-201111-455</cnnvd>      <name>Ruby on Rails におけるクロスサイトスクリプティングの脆弱性</name>      <Description>
    </Description>   </Vulnerability>   <Vulnerability added="2017-05-02" gvid="ID106199" id="106199" modified="2020-01-03" published="2012-03-13" version="2.0">      
        
        <severity>4</severity>      
        <cvss>(AV:N/AC:M/Au:N/C:N/I:P/A:N)</cvss>      
        <Tags>         
             <tag>Ruby on Rails</tag>         
             <tag>Web</tag>         
             <tag>XSS</tag>         
        </Tags>      
        <AlternateIds>         
             <id name="CVE">CVE-2012-1098</id>         
             <id name="URL">http://groups.google.com/group/rubyonrails-security/msg/1c2e01a5e42722c9?dmode=source&amp;amp;output=gplain</id>         
             <id name="URL">http://lists.fedoraproject.org/pipermail/package-announce/2012-March/075675.html</id>         
             <id name="URL">http://weblog.rubyonrails.org/2012/3/1/ann-rails-3-0-12-has-been-released</id>         
             <id name="URL">http://www.openwall.com/lists/oss-security/2012/03/02/6</id>         
             <id name="URL">http://www.openwall.com/lists/oss-security/2012/03/03/1</id>         
             <id name="URL">https://bugzilla.redhat.com/show_bug.cgi?id=799275</id>         
        </AlternateIds>      
        
        
      <Check scope="node">         <NetworkService>            <Product minCertainty="0.85" name="Ruby on Rails">               <version>                  <low>3.0.0</low>                  <high>3.0.13</high>               </version>               <version>                  <low>3.1.0</low>                  <high>3.1.5</high>               </version>               <version>                  <low>3.2.0</low>                  <high>3.2.2</high>               </version>            </Product>         </NetworkService>      </Check>      <Solutions>目前厂商已经发布了升级补丁以修复此安全问题，补丁获取链接： 
http://weblog.rubyonrails.org/2012/3/1/ann-rails-3-0-12-has-been-released/</Solutions>      <cnnvd>CNNVD-201203-239</cnnvd>      <name>Ruby on Rails におけるクロスサイトスクリプティングの脆弱性</name>      <Description>
    </Description>   </Vulnerability>   <Vulnerability added="2020-01-03" gvid="ID106200" id="106200" modified="2020-01-03" published="2012-03-13" version="2.0">      
        <name>Ruby on Rails: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') (CVE-2012-1099)</name>      
        <severity>4</severity>      
        <cvss>(AV:N/AC:M/Au:N/C:N/I:P/A:N)</cvss>      
        <Tags>         
             <tag>Ruby on Rails</tag>         
             <tag>Web</tag>         
             <tag>XSS</tag>         
        </Tags>      
        <AlternateIds>         
             <id name="CVE">CVE-2012-1099</id>         
             <id name="DEBIAN">DSA-2466</id>         
             <id name="URL">http://groups.google.com/group/rubyonrails-security/msg/6fca4f5c47705488?dmode=source&amp;amp;output=gplain</id>         
             <id name="URL">http://lists.fedoraproject.org/pipermail/package-announce/2012-March/075675.html</id>         
             <id name="URL">http://lists.fedoraproject.org/pipermail/package-announce/2012-March/075740.html</id>         
             <id name="URL">http://weblog.rubyonrails.org/2012/3/1/ann-rails-3-0-12-has-been-released</id>         
             <id name="URL">http://www.debian.org/security/2012/dsa-2466</id>         
             <id name="URL">http://www.openwall.com/lists/oss-security/2012/03/02/6</id>         
             <id name="URL">http://www.openwall.com/lists/oss-security/2012/03/03/1</id>         
             <id name="URL">https://bugzilla.redhat.com/show_bug.cgi?id=799276</id>         
        </AlternateIds>      
        
        
      <Check scope="node">         <NetworkService>            <Product minCertainty="0.85" name="Ruby on Rails">               <version>                  <low>3.0.0</low>                  <high>3.0.13</high>               </version>               <version>                  <low>3.1.0</low>                  <high>3.1.5</high>               </version>               <version>                  <low>3.2.0</low>                  <high>3.2.2</high>               </version>            </Product>         </NetworkService>      </Check>      <Solutions>目前厂商已经发布了升级补丁以修复此安全问题，补丁获取链接： 
http://weblog.rubyonrails.org/2012/3/1/ann-rails-3-0-12-has-been-released/</Solutions>      <cnnvd>CNNVD-201203-240</cnnvd>      <Description>Cross-site scripting (XSS) vulnerability in actionpack/lib/action_view/helpers/form_options_helper.rb in the select helper in Ruby on Rails 3.0.x before 3.0.12, 3.1.x before 3.1.4, and 3.2.x before 3.2.2 allows remote attackers to inject arbitrary web script or HTML via vectors involving certain generation of OPTION elements within SELECT elements.</Description>   </Vulnerability>   <Vulnerability added="2020-01-03" gvid="ID106201" id="106201" modified="2020-01-03" published="2012-06-22" version="2.0">      
        <name>Ruby on Rails: Permissions, Privileges, and Access Controls (CVE-2012-2660)</name>      
        <severity>6</severity>      
        <cvss>(AV:N/AC:L/Au:N/C:P/I:P/A:N)</cvss>      
        <Tags>         
             <tag>Ruby on Rails</tag>         
             <tag>Web</tag>         
        </Tags>      
        <AlternateIds>         
             <id name="CVE">CVE-2012-2660</id>         
             <id name="REDHAT">RHSA-2013:0154</id>         
             <id name="URL">http://lists.opensuse.org/opensuse-security-announce/2012-08/msg00002.html</id>         
             <id name="URL">http://lists.opensuse.org/opensuse-security-announce/2012-08/msg00014.html</id>         
             <id name="URL">http://lists.opensuse.org/opensuse-security-announce/2012-08/msg00016.html</id>         
             <id name="URL">http://lists.opensuse.org/opensuse-security-announce/2012-08/msg00017.html</id>         
             <id name="URL">http://lists.opensuse.org/opensuse-updates/2012-08/msg00046.html</id>         
             <id name="URL">http://rhn.redhat.com/errata/RHSA-2013-0154.html</id>         
             <id name="URL">https://groups.google.com/group/rubyonrails-security/msg/d890f8d58b5fbf32?dmode=source&amp;amp;output=gplain</id>         
        </AlternateIds>      
        
        
      <Check scope="node">         <NetworkService>            <Product minCertainty="0.85" name="Ruby on Rails">               <version>                  <low>3.0.0</low>                  <high>3.0.14</high>               </version>               <version>                  <low>3.1.0</low>                  <high>3.1.6</high>               </version>               <version>                  <low>3.2.0</low>                  <high>3.2.4</high>               </version>            </Product>         </NetworkService>      </Check>      <Solutions>目前厂商已经发布了升级补丁以修复此安全问题，补丁获取链接： 
http://rubyonrails.org/</Solutions>      <cnnvd>CNNVD-201206-025</cnnvd>      <Description>actionpack/lib/action_dispatch/http/request.rb in Ruby on Rails before 3.0.13, 3.1.x before 3.1.5, and 3.2.x before 3.2.4 does not properly consider differences in parameter handling between the Active Record component and the Rack interface, which allows remote attackers to bypass intended database-query restrictions and perform NULL checks via a crafted request, as demonstrated by certain &quot;[nil]&quot; values, a related issue to CVE-2012-2694.</Description>   </Vulnerability>   <Vulnerability added="2020-01-03" gvid="ID106202" id="106202" modified="2020-01-03" published="2012-06-22" version="2.0">      
        <name>Ruby on Rails: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') (CVE-2012-2661)</name>      
        <severity>5</severity>      
        <cvss>(AV:N/AC:L/Au:N/C:P/I:N/A:N)</cvss>      
        <Tags>         
             <tag>Database</tag>         
             <tag>Ruby on Rails</tag>         
             <tag>SQL Injection</tag>         
        </Tags>      
        <AlternateIds>         
             <id name="CVE">CVE-2012-2661</id>         
             <id name="REDHAT">RHSA-2013:0154</id>         
             <id name="URL">http://lists.opensuse.org/opensuse-security-announce/2012-08/msg00014.html</id>         
             <id name="URL">http://lists.opensuse.org/opensuse-security-announce/2012-08/msg00016.html</id>         
             <id name="URL">http://lists.opensuse.org/opensuse-updates/2012-08/msg00046.html</id>         
             <id name="URL">http://rhn.redhat.com/errata/RHSA-2013-0154.html</id>         
             <id name="URL">https://groups.google.com/group/rubyonrails-security/msg/fc2da6c627fc92df?dmode=source&amp;amp;output=gplain</id>         
        </AlternateIds>      
        
        
      <Check scope="node">         <NetworkService>            <Product minCertainty="0.85" name="Ruby on Rails">               <version>                  <low>3.0.0</low>                  <high>3.0.14</high>               </version>               <version>                  <low>3.1.0</low>                  <high>3.1.6</high>               </version>               <version>                  <low>3.2.0</low>                  <high>3.2.4</high>               </version>            </Product>         </NetworkService>      </Check>      <Solutions>目前厂商已经发布了升级补丁以修复此安全问题，补丁获取链接： 
http://rubyonrails.org/</Solutions>      <cnnvd>CNNVD-201205-559</cnnvd>      <Description>The Active Record component in Ruby on Rails 3.0.x before 3.0.13, 3.1.x before 3.1.5, and 3.2.x before 3.2.4 does not properly implement the passing of request data to a where method in an ActiveRecord class, which allows remote attackers to conduct certain SQL injection attacks via nested query parameters that leverage unintended recursion, a related issue to CVE-2012-2695.</Description>   </Vulnerability>   <Vulnerability added="2020-01-03" gvid="ID106203" id="106203" modified="2020-01-03" published="2012-06-22" version="2.0">      
        <name>Ruby on Rails: Permissions, Privileges, and Access Controls (CVE-2012-2694)</name>      
        <severity>4</severity>      
        <cvss>(AV:N/AC:M/Au:N/C:P/I:N/A:N)</cvss>      
        <Tags>         
             <tag>Ruby on Rails</tag>         
             <tag>Web</tag>         
        </Tags>      
        <AlternateIds>         
             <id name="CVE">CVE-2012-2694</id>         
             <id name="REDHAT">RHSA-2013:0154</id>         
             <id name="URL">http://lists.opensuse.org/opensuse-security-announce/2012-08/msg00002.html</id>         
             <id name="URL">http://lists.opensuse.org/opensuse-security-announce/2012-08/msg00014.html</id>         
             <id name="URL">http://lists.opensuse.org/opensuse-security-announce/2012-08/msg00016.html</id>         
             <id name="URL">http://lists.opensuse.org/opensuse-security-announce/2012-08/msg00017.html</id>         
             <id name="URL">http://lists.opensuse.org/opensuse-updates/2012-08/msg00046.html</id>         
             <id name="URL">http://rhn.redhat.com/errata/RHSA-2013-0154.html</id>         
             <id name="URL">https://groups.google.com/group/rubyonrails-security/msg/e2d3a87f2c211def?dmode=source&amp;amp;output=gplain</id>         
        </AlternateIds>      
        
        
      <Check scope="node">         <NetworkService>            <Product minCertainty="0.85" name="Ruby on Rails">               <version>                  <low>3.0.0</low>                  <high>3.0.14</high>               </version>               <version>                  <low>3.1.0</low>                  <high>3.1.6</high>               </version>               <version>                  <low>3.2.0</low>                  <high>3.2.5</high>               </version>            </Product>         </NetworkService>      </Check>      <Solutions>目前厂商已经发布了升级补丁以修复此安全问题，补丁获取链接： 
http://rubyonrails.org/</Solutions>      <cnnvd>CNNVD-201206-197</cnnvd>      <Description>actionpack/lib/action_dispatch/http/request.rb in Ruby on Rails before 3.0.14, 3.1.x before 3.1.6, and 3.2.x before 3.2.6 does not properly consider differences in parameter handling between the Active Record component and the Rack interface, which allows remote attackers to bypass intended database-query restrictions and perform NULL checks via a crafted request, as demonstrated by certain &quot;['xyz', nil]&quot; values, a related issue to CVE-2012-2660.</Description>   </Vulnerability>   <Vulnerability added="2020-01-03" gvid="ID106204" id="106204" modified="2020-01-03" published="2012-06-22" version="2.0">      
        <name>Ruby on Rails: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') (CVE-2012-2695)</name>      
        <severity>8</severity>      
        <cvss>(AV:N/AC:L/Au:N/C:P/I:P/A:P)</cvss>      
        <Tags>         
             <tag>Database</tag>         
             <tag>Ruby on Rails</tag>         
             <tag>SQL Injection</tag>         
        </Tags>      
        <AlternateIds>         
             <id name="CVE">CVE-2012-2695</id>         
             <id name="REDHAT">RHSA-2013:0154</id>         
             <id name="URL">http://lists.opensuse.org/opensuse-security-announce/2012-08/msg00002.html</id>         
             <id name="URL">http://lists.opensuse.org/opensuse-security-announce/2012-08/msg00014.html</id>         
             <id name="URL">http://lists.opensuse.org/opensuse-security-announce/2012-08/msg00016.html</id>         
             <id name="URL">http://lists.opensuse.org/opensuse-updates/2012-08/msg00046.html</id>         
             <id name="URL">http://rhn.redhat.com/errata/RHSA-2013-0154.html</id>         
             <id name="URL">https://groups.google.com/group/rubyonrails-security/msg/aee3413fb038bf56?dmode=source&amp;amp;output=gplain</id>         
        </AlternateIds>      
        
        
      <Check scope="node">         <NetworkService>            <Product minCertainty="0.85" name="Ruby on Rails">               <version>                  <low>3.0.0</low>                  <high>3.0.14</high>               </version>               <version>                  <low>3.1.0</low>                  <high>3.1.6</high>               </version>               <version>                  <low>3.2.0</low>                  <high>3.2.5</high>               </version>            </Product>         </NetworkService>      </Check>      <Solutions>目前厂商已经发布了升级补丁以修复此安全问题，补丁获取链接： 
http://rubyonrails.org/</Solutions>      <cnnvd>CNNVD-201206-198</cnnvd>      <Description>The Active Record component in Ruby on Rails before 3.0.14, 3.1.x before 3.1.6, and 3.2.x before 3.2.6 does not properly implement the passing of request data to a where method in an ActiveRecord class, which allows remote attackers to conduct certain SQL injection attacks via nested query parameters that leverage improper handling of nested hashes, a related issue to CVE-2012-2661.</Description>   </Vulnerability>   <Vulnerability added="2020-01-03" gvid="ID106205" id="106205" modified="2020-01-03" published="2012-08-08" version="2.0">      
        <name>Ruby on Rails: Improper Authentication (CVE-2012-3424)</name>      
        <severity>5</severity>      
        <cvss>(AV:N/AC:L/Au:N/C:N/I:N/A:P)</cvss>      
        <Tags>         
             <tag>Denial of Service</tag>         
             <tag>Ruby on Rails</tag>         
             <tag>Web</tag>         
        </Tags>      
        <AlternateIds>         
             <id name="CVE">CVE-2012-3424</id>         
             <id name="REDHAT">RHSA-2013:0154</id>         
             <id name="URL">http://lists.opensuse.org/opensuse-updates/2012-08/msg00046.html</id>         
             <id name="URL">http://rhn.redhat.com/errata/RHSA-2013-0154.html</id>         
             <id name="URL">http://weblog.rubyonrails.org/2012/7/26/ann-rails-3-2-7-has-been-released/</id>         
             <id name="URL">https://groups.google.com/group/rubyonrails-security/msg/244d32f2fa25147d?hl=en&amp;amp;dmode=source&amp;amp;output=gplain</id>         
        </AlternateIds>      
        
        
      <Check scope="node">         <NetworkService>            <Product minCertainty="0.85" name="Ruby on Rails">               <version>                  <low>3.0.0</low>                  <high>3.0.15</high>               </version>               <version>                  <low>3.1.0</low>                  <high>3.1.7</high>               </version>               <version>                  <low>3.2.0</low>                  <high>3.2.6</high>               </version>            </Product>         </NetworkService>      </Check>      <Solutions>目前厂商已经发布了升级补丁以修复此安全问题，补丁获取链接： 
http://weblog.rubyonrails.org/2012/7/26/ann-rails-3-2-7-has-been-released/</Solutions>      <cnnvd>CNNVD-201207-580</cnnvd>      <Description>The decode_credentials method in actionpack/lib/action_controller/metal/http_authentication.rb in Ruby on Rails 3.x before 3.0.16, 3.1.x before 3.1.7, and 3.2.x before 3.2.7 converts Digest Authentication strings to symbols, which allows remote attackers to cause a denial of service by leveraging access to an application that uses a with_http_digest helper method, as demonstrated by the authenticate_or_request_with_http_digest method.</Description>   </Vulnerability>   <Vulnerability added="2020-01-03" gvid="ID106206" id="106206" modified="2020-01-03" published="2012-08-10" version="2.0">      
        <name>Ruby on Rails: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') (CVE-2012-3463)</name>      
        <severity>4</severity>      
        <cvss>(AV:N/AC:M/Au:N/C:N/I:P/A:N)</cvss>      
        <Tags>         
             <tag>Ruby on Rails</tag>         
             <tag>Web</tag>         
             <tag>XSS</tag>         
        </Tags>      
        <AlternateIds>         
             <id name="CVE">CVE-2012-3463</id>         
             <id name="REDHAT">RHSA-2013:0154</id>         
             <id name="URL">http://rhn.redhat.com/errata/RHSA-2013-0154.html</id>         
             <id name="URL">http://weblog.rubyonrails.org/2012/8/9/ann-rails-3-2-8-has-been-released/</id>         
             <id name="URL">https://groups.google.com/group/rubyonrails-security/msg/961e18e514527078?dmode=source&amp;amp;output=gplain</id>         
        </AlternateIds>      
        
        
      <Check scope="node">         <NetworkService>            <Product minCertainty="0.85" name="Ruby on Rails">               <version>                  <low>3.0.0</low>                  <high>3.0.17</high>               </version>               <version>                  <low>3.1.0</low>                  <high>3.1.8</high>               </version>               <version>                  <low>3.2.0</low>                  <high>3.2.7</high>               </version>            </Product>         </NetworkService>      </Check>      <Solutions>目前厂商已经发布了升级补丁以修复此安全问题，补丁获取链接： 
http://www.rubyonrails.com/</Solutions>      <cnnvd>CNNVD-201208-135</cnnvd>      <Description>Cross-site scripting (XSS) vulnerability in actionpack/lib/action_view/helpers/form_tag_helper.rb in Ruby on Rails 3.x before 3.0.17, 3.1.x before 3.1.8, and 3.2.x before 3.2.8 allows remote attackers to inject arbitrary web script or HTML via the prompt field to the select_tag helper.</Description>   </Vulnerability>   <Vulnerability added="2020-01-03" gvid="ID106207" id="106207" modified="2020-01-03" published="2012-08-10" version="2.0">      
        <name>Ruby on Rails: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') (CVE-2012-3464)</name>      
        <severity>4</severity>      
        <cvss>(AV:N/AC:M/Au:N/C:N/I:P/A:N)</cvss>      
        <Tags>         
             <tag>Ruby on Rails</tag>         
             <tag>Web</tag>         
             <tag>XSS</tag>         
        </Tags>      
        <AlternateIds>         
             <id name="CVE">CVE-2012-3464</id>         
             <id name="REDHAT">RHSA-2013:0154</id>         
             <id name="URL">http://rhn.redhat.com/errata/RHSA-2013-0154.html</id>         
             <id name="URL">http://secunia.com/advisories/50694</id>         
             <id name="URL">http://weblog.rubyonrails.org/2012/8/9/ann-rails-3-2-8-has-been-released/</id>         
             <id name="URL">https://groups.google.com/group/rubyonrails-security/msg/8f1bbe1cef8c6caf?dmode=source&amp;amp;output=gplain</id>         
        </AlternateIds>      
        
        
      <Check scope="node">         <NetworkService>            <Product minCertainty="0.85" name="Ruby on Rails">               <version>                  <low>0.9.1</low>                  <high>0.9.5</high>               </version>               <version>                  <low>0.10.0</low>                  <high>0.10.2</high>               </version>               <version>                  <low>0.11.0</low>                  <high>0.11.2</high>               </version>               <version>                  <low>0.12.0</low>                  <high>0.12.2</high>               </version>               <version>                  <low>0.13.0</low>                  <high>0.13.2</high>               </version>               <version>                  <low>0.14.1</low>                  <high>0.14.5</high>               </version>               <version>                  <low>1.0.0</low>                  <high>1.0.1</high>               </version>               <version>                  <low>1.1.0</low>                  <high>1.1.7</high>               </version>               <version>                  <low>1.2.0</low>                  <high>1.2.7</high>               </version>               <version>                  <low>1.9.5</low>                  <high>1.9.6</high>               </version>               <version>                  <low>2.0.0</low>                  <high>2.0.5</high>               </version>               <version>                  <low>2.1.0</low>                  <high>2.1.3</high>               </version>               <version>                  <low>2.2.0</low>                  <high>2.2.3</high>               </version>               <version>                  <low>2.3.2</low>                  <high>2.3.13</high>               </version>               <version>                  <low>3.0.0</low>                  <high>3.0.15</high>               </version>               <version>                  <low>3.1.0</low>                  <high>3.1.8</high>               </version>               <version>                  <low>3.2.0</low>                  <high>3.2.7</high>               </version>            </Product>         </NetworkService>      </Check>      <Solutions>目前厂商已经发布了升级补丁以修复此安全问题，补丁获取链接： 
http://www.rubyonrails.com/</Solutions>      <cnnvd>CNNVD-201208-136</cnnvd>      <Description>Cross-site scripting (XSS) vulnerability in activesupport/lib/active_support/core_ext/string/output_safety.rb in Ruby on Rails before 3.0.17, 3.1.x before 3.1.8, and 3.2.x before 3.2.8 might allow remote attackers to inject arbitrary web script or HTML via vectors involving a ' (quote) character.</Description>   </Vulnerability>   <Vulnerability added="2020-01-03" gvid="ID106208" id="106208" modified="2020-01-03" published="2012-08-10" version="2.0">      
        <name>Ruby on Rails: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') (CVE-2012-3465)</name>      
        <severity>4</severity>      
        <cvss>(AV:N/AC:M/Au:N/C:N/I:P/A:N)</cvss>      
        <Tags>         
             <tag>Ruby on Rails</tag>         
             <tag>Web</tag>         
             <tag>XSS</tag>         
        </Tags>      
        <AlternateIds>         
             <id name="CVE">CVE-2012-3465</id>         
             <id name="REDHAT">RHSA-2013:0154</id>         
             <id name="URL">http://rhn.redhat.com/errata/RHSA-2013-0154.html</id>         
             <id name="URL">http://secunia.com/advisories/50694</id>         
             <id name="URL">http://weblog.rubyonrails.org/2012/8/9/ann-rails-3-2-8-has-been-released/</id>         
             <id name="URL">https://groups.google.com/group/rubyonrails-security/msg/7fbb5392d4d282b5?dmode=source&amp;amp;output=gplain</id>         
        </AlternateIds>      
        
        
      <Check scope="node">         <NetworkService>            <Product minCertainty="0.85" name="Ruby on Rails">               <version>                  <low>0.9.1</low>                  <high>0.9.5</high>               </version>               <version>                  <low>0.10.0</low>                  <high>0.10.2</high>               </version>               <version>                  <low>0.11.0</low>                  <high>0.11.2</high>               </version>               <version>                  <low>0.12.0</low>                  <high>0.12.2</high>               </version>               <version>                  <low>0.13.0</low>                  <high>0.13.2</high>               </version>               <version>                  <low>0.14.1</low>                  <high>0.14.5</high>               </version>               <version>                  <low>1.0.0</low>                  <high>1.0.1</high>               </version>               <version>                  <low>1.1.0</low>                  <high>1.1.7</high>               </version>               <version>                  <low>1.2.0</low>                  <high>1.2.7</high>               </version>               <version>                  <low>1.9.5</low>                  <high>1.9.6</high>               </version>               <version>                  <low>2.0.0</low>                  <high>2.0.5</high>               </version>               <version>                  <low>2.1.0</low>                  <high>2.1.3</high>               </version>               <version>                  <low>2.2.0</low>                  <high>2.2.3</high>               </version>               <version>                  <low>2.3.2</low>                  <high>2.3.13</high>               </version>               <version>                  <low>3.0.0</low>                  <high>3.0.15</high>               </version>               <version>                  <low>3.1.0</low>                  <high>3.1.8</high>               </version>               <version>                  <low>3.2.0</low>                  <high>3.2.7</high>               </version>            </Product>         </NetworkService>      </Check>      <Solutions>目前厂商已经发布了升级补丁以修复此安全问题，补丁获取链接： 
http://www.rubyonrails.com/</Solutions>      <cnnvd>CNNVD-201208-137</cnnvd>      <Description>Cross-site scripting (XSS) vulnerability in actionpack/lib/action_view/helpers/sanitize_helper.rb in the strip_tags helper in Ruby on Rails before 3.0.17, 3.1.x before 3.1.8, and 3.2.x before 3.2.8 allows remote attackers to inject arbitrary web script or HTML via malformed HTML markup.</Description>   </Vulnerability>   <Vulnerability added="2020-01-03" gvid="ID106209" id="106209" modified="2020-01-03" published="2013-01-04" version="2.0">      
        <name>Ruby on Rails: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') (CVE-2012-6496)</name>      
        <severity>8</severity>      
        <cvss>(AV:N/AC:L/Au:N/C:P/I:P/A:P)</cvss>      
        <Tags>         
             <tag>Database</tag>         
             <tag>Remote Execution</tag>         
             <tag>Ruby on Rails</tag>         
             <tag>SQL Injection</tag>         
        </Tags>      
        <AlternateIds>         
             <id name="BID">57084</id>         
             <id name="CVE">CVE-2012-6496</id>         
             <id name="REDHAT">RHSA-2013:0154</id>         
             <id name="REDHAT">RHSA-2013:0155</id>         
             <id name="REDHAT">RHSA-2013:0220</id>         
             <id name="REDHAT">RHSA-2013:0544</id>         
             <id name="URL">http://blog.phusion.nl/2013/01/03/rails-sql-injection-vulnerability-hold-your-horses-here-are-the-facts/</id>         
             <id name="URL">http://rhn.redhat.com/errata/RHSA-2013-0154.html</id>         
             <id name="URL">http://rhn.redhat.com/errata/RHSA-2013-0155.html</id>         
             <id name="URL">http://rhn.redhat.com/errata/RHSA-2013-0220.html</id>         
             <id name="URL">http://rhn.redhat.com/errata/RHSA-2013-0544.html</id>         
             <id name="URL">http://security.gentoo.org/glsa/glsa-201401-22.xml</id>         
             <id name="URL">http://www.securityfocus.com/bid/57084</id>         
             <id name="URL">https://bugzilla.redhat.com/show_bug.cgi?id=889649</id>         
             <id name="URL">https://groups.google.com/group/rubyonrails-security/msg/23daa048baf28b64?dmode=source&amp;amp;output=gplain</id>         
        </AlternateIds>      
        
        
      <Check scope="node">         <NetworkService>            <Product minCertainty="0.85" name="Ruby on Rails">               <version>                  <low>3.0.0</low>                  <high>3.0.17</high>               </version>               <version>                  <low>3.1.0</low>                  <high>3.1.9</high>               </version>               <version>                  <low>3.2.0</low>                  <high>3.2.9</high>               </version>            </Product>         </NetworkService>      </Check>      <Solutions>目前厂商已经发布了升级补丁以修复此安全问题，补丁获取链接： 
http://blog.phusion.nl/2013/01/03/rails-sql-injection-vulnerability-hold-your-horses-here-are-the-facts/</Solutions>      <cnnvd>CNNVD-201301-062</cnnvd>      <Description>SQL injection vulnerability in the Active Record component in Ruby on Rails before 3.0.18, 3.1.x before 3.1.9, and 3.2.x before 3.2.10 allows remote attackers to execute arbitrary SQL commands via a crafted request that leverages incorrect behavior of dynamic finders in applications that can use unexpected data types in certain find_by_ method calls.</Description>   </Vulnerability>   <Vulnerability added="2020-01-03" gvid="ID106210" id="106210" modified="2020-01-03" published="2013-01-04" version="2.0">      
        <name>Ruby on Rails: Information Exposure (CVE-2012-6497)</name>      
        <severity>5</severity>      
        <cvss>(AV:N/AC:L/Au:N/C:P/I:N/A:N)</cvss>      
        <Tags>         
             <tag>Database</tag>         
             <tag>Ruby on Rails</tag>         
             <tag>SQL Injection</tag>         
        </Tags>      
        <AlternateIds>         
             <id name="BID">57084</id>         
             <id name="CVE">CVE-2012-6497</id>         
             <id name="URL">http://blog.phusion.nl/2013/01/03/rails-sql-injection-vulnerability-hold-your-horses-here-are-the-facts/</id>         
             <id name="URL">http://openwall.com/lists/oss-security/2013/01/03/12</id>         
             <id name="URL">http://phenoelit.org/blog/archives/2012/12/21/let_me_github_that_for_you/index.html</id>         
             <id name="URL">http://www.securityfocus.com/bid/57084</id>         
        </AlternateIds>      
        
        
      <Check scope="node">         <NetworkService>            <Product minCertainty="0.85" name="Ruby on Rails">               <version>                  <low>0.9.1</low>                  <high>0.9.5</high>               </version>               <version>                  <low>0.10.0</low>                  <high>0.10.2</high>               </version>               <version>                  <low>0.11.0</low>                  <high>0.11.2</high>               </version>               <version>                  <low>0.12.0</low>                  <high>0.12.2</high>               </version>               <version>                  <low>0.13.0</low>                  <high>0.13.2</high>               </version>               <version>                  <low>0.14.1</low>                  <high>0.14.5</high>               </version>               <version>                  <low>1.0.0</low>                  <high>1.0.1</high>               </version>               <version>                  <low>1.1.0</low>                  <high>1.1.7</high>               </version>               <version>                  <low>1.2.0</low>                  <high>1.2.7</high>               </version>               <version>                  <low>1.9.5</low>                  <high>1.9.6</high>               </version>               <version>                  <low>2.0.0</low>                  <high>2.0.5</high>               </version>               <version>                  <low>2.1.0</low>                  <high>2.1.3</high>               </version>               <version>                  <low>2.2.0</low>                  <high>2.2.3</high>               </version>               <version>                  <low>2.3.2</low>                  <high>2.3.13</high>               </version>               <version>                  <low>3.0.0</low>                  <high>3.0.18</high>               </version>               <version>                  <low>3.1.0</low>                  <high>3.1.9</high>               </version>               <version>                  <low>3.2.0</low>                  <high>3.2.8</high>               </version>            </Product>         </NetworkService>      </Check>      <Solutions>目前厂商已经发布了升级补丁以修复此安全问题，补丁获取链接： 
http://blog.phusion.nl/2013/01/03/rails-sql-injection-vulnerability-hold-your-horses-here-are-the-facts/</Solutions>      <cnnvd>CNNVD-201301-063</cnnvd>      <Description>The Authlogic gem for Ruby on Rails, when used with certain versions before 3.2.10, makes potentially unsafe find_by_id method calls, which might allow remote attackers to conduct CVE-2012-6496 SQL injection attacks via a crafted parameter in environments that have a known secret_token value, as demonstrated by a value contained in secret_token.rb in an open-source product.</Description>   </Vulnerability>   <Vulnerability added="2020-01-03" gvid="ID106148" id="106148" modified="2020-01-03" published="2013-01-13" version="2.0">      
        <name>Ruby on Rails: Permissions, Privileges, and Access Controls (CVE-2013-0155)</name>      
        <severity>6</severity>      
        <cvss>(AV:N/AC:L/Au:N/C:P/I:P/A:N)</cvss>      
        <Tags>         
             <tag>Ruby on Rails</tag>         
        </Tags>      
        <AlternateIds>         
             <id name="APPLE">APPLE-SA-2013-06-04-1</id>         
             <id name="CVE">CVE-2013-0155</id>         
             <id name="DEBIAN">DSA-2609</id>         
             <id name="REDHAT">RHSA-2013:0154</id>         
             <id name="REDHAT">RHSA-2013:0155</id>         
             <id name="URL">http://ics-cert.us-cert.gov/advisories/ICSA-13-036-01A</id>         
             <id name="URL">http://lists.apple.com/archives/security-announce/2013/Jun/msg00000.html</id>         
             <id name="URL">http://lists.opensuse.org/opensuse-updates/2013-12/msg00079.html</id>         
             <id name="URL">http://lists.opensuse.org/opensuse-updates/2013-12/msg00081.html</id>         
             <id name="URL">http://lists.opensuse.org/opensuse-updates/2013-12/msg00082.html</id>         
             <id name="URL">http://lists.opensuse.org/opensuse-updates/2014-01/msg00003.html</id>         
             <id name="URL">http://rhn.redhat.com/errata/RHSA-2013-0154.html</id>         
             <id name="URL">http://rhn.redhat.com/errata/RHSA-2013-0155.html</id>         
             <id name="URL">http://support.apple.com/kb/HT5784</id>         
             <id name="URL">http://www.debian.org/security/2013/dsa-2609</id>         
             <id name="URL">https://groups.google.com/group/rubyonrails-security/msg/bc6f13dafe130ee9?dmode=source&amp;amp;output=gplain</id>         
             <id name="URL">https://puppet.com/security/cve/cve-2013-0155</id>         
        </AlternateIds>      
        
        
      <Check scope="node">         <NetworkService>            <Product minCertainty="0.85" name="Ruby on Rails">               <range>                  
                            <low inclusive="1">3.2.0</low>                  
                            <high inclusive="0">3.2.11</high>                  
                       </range>            </Product>         </NetworkService>      </Check>      <Solutions>目前厂商已经发布了升级补丁以修复此安全问题，补丁获取链接： 
http://www.rubyonrails.com/</Solutions>      <cnnvd>CNNVD-201301-212</cnnvd>      <Description>Ruby on Rails 3.0.x before 3.0.19, 3.1.x before 3.1.10, and 3.2.x before 3.2.11 does not properly consider differences in parameter handling between the Active Record component and the JSON implementation, which allows remote attackers to bypass intended database-query restrictions and perform NULL checks or trigger missing WHERE clauses via a crafted request, as demonstrated by certain &quot;[nil]&quot; values, a related issue to CVE-2012-2660 and CVE-2012-2694.</Description>   </Vulnerability>   <Vulnerability added="2020-01-03" gvid="ID106149" id="106149" modified="2020-01-03" published="2013-01-13" version="2.0">      
        <name>Ruby on Rails: Improper Input Validation (CVE-2013-0156)</name>      
        <severity>8</severity>      
        <cvss>(AV:N/AC:L/Au:N/C:P/I:P/A:P)</cvss>      
        <Tags>         
             <tag>Denial of Service</tag>         
             <tag>Remote Execution</tag>         
             <tag>Ruby on Rails</tag>         
        </Tags>      
        <AlternateIds>         
             <id name="APPLE">APPLE-SA-2013-03-14-1</id>         
             <id name="CERT-VN">380039</id>         
             <id name="CERT-VN">628463</id>         
             <id name="CVE">CVE-2013-0156</id>         
             <id name="DEBIAN">DSA-2604</id>         
             <id name="REDHAT">RHSA-2013:0153</id>         
             <id name="REDHAT">RHSA-2013:0154</id>         
             <id name="REDHAT">RHSA-2013:0155</id>         
             <id name="URL">http://ics-cert.us-cert.gov/advisories/ICSA-13-036-01A</id>         
             <id name="URL">http://lists.apple.com/archives/security-announce/2013/Mar/msg00002.html</id>         
             <id name="URL">http://rhn.redhat.com/errata/RHSA-2013-0153.html</id>         
             <id name="URL">http://rhn.redhat.com/errata/RHSA-2013-0154.html</id>         
             <id name="URL">http://rhn.redhat.com/errata/RHSA-2013-0155.html</id>         
             <id name="URL">http://weblog.rubyonrails.org/2013/1/28/Rails-3-0-20-and-2-3-16-have-been-released/</id>         
             <id name="URL">http://www.debian.org/security/2013/dsa-2604</id>         
             <id name="URL">http://www.fujitsu.com/global/support/software/security/products-f/sw-sv-rcve-ror201301e.html</id>         
             <id name="URL">http://www.insinuator.net/2013/01/rails-yaml/</id>         
             <id name="URL">http://www.kb.cert.org/vuls/id/380039</id>         
             <id name="URL">http://www.kb.cert.org/vuls/id/628463</id>         
             <id name="URL">https://community.rapid7.com/community/metasploit/blog/2013/01/09/serialization-mischief-in-ruby-land-cve-2013-0156</id>         
             <id name="URL">https://groups.google.com/group/rubyonrails-security/msg/c1432d0f8c70e89d?dmode=source&amp;amp;output=gplain</id>         
             <id name="URL">https://puppet.com/security/cve/cve-2013-0156</id>         
        </AlternateIds>      
        
        
      <Check scope="node">         <NetworkService>            <Product minCertainty="0.85" name="Ruby on Rails">               <range>                  
                            <low inclusive="1">3.2.0</low>                  
                            <high inclusive="0">3.2.11</high>                  
                       </range>            </Product>         </NetworkService>      </Check>      <Solutions>目前厂商已经发布了升级补丁以修复此安全问题，补丁获取链接： 
http://www.rubyonrails.com/</Solutions>      <cnnvd>CNNVD-201301-089</cnnvd>      <Description>active_support/core_ext/hash/conversions.rb in Ruby on Rails before 2.3.15, 3.0.x before 3.0.19, 3.1.x before 3.1.10, and 3.2.x before 3.2.11 does not properly restrict casts of string values, which allows remote attackers to conduct object-injection attacks and execute arbitrary code, or cause a denial of service (memory and CPU consumption) involving nested XML entity references, by leveraging Action Pack support for (1) YAML type conversion or (2) Symbol type conversion.</Description>   </Vulnerability>   <Vulnerability added="2020-01-03" gvid="ID106211" id="106211" modified="2020-01-03" published="2013-02-13" version="2.0">      
        <name>Ruby on Rails: Permissions, Privileges, and Access Controls (CVE-2013-0276)</name>      
        <severity>4</severity>      
        <cvss>(AV:N/AC:M/Au:N/C:N/I:P/A:N)</cvss>      
        <Tags>         
             <tag>Ruby on Rails</tag>         
        </Tags>      
        <AlternateIds>         
             <id name="APPLE">APPLE-SA-2013-06-04-1</id>         
             <id name="BID">57896</id>         
             <id name="CVE">CVE-2013-0276</id>         
             <id name="DEBIAN">DSA-2620</id>         
             <id name="REDHAT">RHSA-2013:0686</id>         
             <id name="URL">http://lists.apple.com/archives/security-announce/2013/Jun/msg00000.html</id>         
             <id name="URL">http://lists.opensuse.org/opensuse-updates/2013-03/msg00048.html</id>         
             <id name="URL">http://rhn.redhat.com/errata/RHSA-2013-0686.html</id>         
             <id name="URL">http://secunia.com/advisories/52112</id>         
             <id name="URL">http://secunia.com/advisories/52774</id>         
             <id name="URL">http://support.apple.com/kb/HT5784</id>         
             <id name="URL">http://weblog.rubyonrails.org/2013/2/11/SEC-ANN-Rails-3-2-12-3-1-11-and-2-3-17-have-been-released/</id>         
             <id name="URL">http://www.debian.org/security/2013/dsa-2620</id>         
             <id name="URL">http://www.openwall.com/lists/oss-security/2013/02/11/5</id>         
             <id name="URL">http://www.osvdb.org/90072</id>         
             <id name="URL">http://www.securityfocus.com/bid/57896</id>         
             <id name="URL">https://groups.google.com/group/rubyonrails-security/msg/bb44b98a73ef1a06?dmode=source&amp;amp;output=gplain</id>         
        </AlternateIds>      
        
        
      <Check scope="node">         <NetworkService>            <Product minCertainty="0.85" name="Ruby on Rails">               <version>                  <low>2.3.0</low>                  <high>2.3.17</high>               </version>               <version>                  <low>3.1.0</low>                  <high>3.1.11</high>               </version>               <version>                  <low>3.2.0</low>                  <high>3.2.12</high>               </version>            </Product>         </NetworkService>      </Check>      <Solutions>目前厂商已经发布了升级补丁以修复此安全问题，补丁获取链接： 
http://weblog.rubyonrails.org/2013/2/11/SEC-ANN-Rails-3-2-12-3-1-11-and-2-3-17-have-been-released/</Solutions>      <cnnvd>CNNVD-201302-187</cnnvd>      <Description>ActiveRecord in Ruby on Rails before 2.3.17, 3.1.x before 3.1.11, and 3.2.x before 3.2.12 allows remote attackers to bypass the attr_protected protection mechanism and modify protected model attributes via a crafted request.</Description>   </Vulnerability>   <Vulnerability added="2020-01-03" gvid="ID106212" id="106212" modified="2020-01-03" published="2013-02-13" version="2.0">      
        <name>Ruby on Rails: Unspecified Security Vulnerability (CVE-2013-0277)</name>      
        <severity>10</severity>      
        <cvss>(AV:N/AC:L/Au:N/C:C/I:C/A:C)</cvss>      
        <Tags>         
             <tag>Denial of Service</tag>         
             <tag>Remote Execution</tag>         
             <tag>Ruby on Rails</tag>         
        </Tags>      
        <AlternateIds>         
             <id name="APPLE">APPLE-SA-2013-06-04-1</id>         
             <id name="CVE">CVE-2013-0277</id>         
             <id name="DEBIAN">DSA-2620</id>         
             <id name="URL">http://lists.apple.com/archives/security-announce/2013/Jun/msg00000.html</id>         
             <id name="URL">http://lists.opensuse.org/opensuse-updates/2013-03/msg00048.html</id>         
             <id name="URL">http://secunia.com/advisories/52112</id>         
             <id name="URL">http://securitytracker.com/id?1028109</id>         
             <id name="URL">http://support.apple.com/kb/HT5784</id>         
             <id name="URL">http://weblog.rubyonrails.org/2013/2/11/SEC-ANN-Rails-3-2-12-3-1-11-and-2-3-17-have-been-released/</id>         
             <id name="URL">http://www.debian.org/security/2013/dsa-2620</id>         
             <id name="URL">http://www.openwall.com/lists/oss-security/2013/02/11/6</id>         
             <id name="URL">http://www.osvdb.org/90073</id>         
             <id name="URL">https://groups.google.com/group/rubyonrails-security/msg/302ec7ce90f13837?dmode=source&amp;amp;output=gplain</id>         
             <id name="URL">https://puppet.com/security/cve/cve-2013-0277</id>         
        </AlternateIds>      
        
        
      <Check scope="node">         <NetworkService>            <Product minCertainty="0.85" name="Ruby on Rails">               <version>                  <low>2.3.0</low>                  <high>2.3.17</high>               </version>               <version>                  <low>3.0.0</low>                  <high>3.0.20</high>               </version>            </Product>         </NetworkService>      </Check>      <Solutions>目前厂商已经发布了升级补丁以修复此安全问题，补丁获取链接： 
http://weblog.rubyonrails.org/2013/2/11/SEC-ANN-Rails-3-2-12-3-1-11-and-2-3-17-have-been-released/</Solutions>      <cnnvd>CNNVD-201302-188</cnnvd>      <Description>ActiveRecord in Ruby on Rails before 2.3.17 and 3.x before 3.1.0 allows remote attackers to cause a denial of service or execute arbitrary code via crafted serialized attributes that cause the +serialize+ helper to deserialize arbitrary YAML.</Description>   </Vulnerability>   <Vulnerability added="2020-01-03" gvid="ID106213" id="106213" modified="2020-01-03" published="2013-01-30" version="2.0">      
        <name>Ruby on Rails: Unspecified Security Vulnerability (CVE-2013-0333)</name>      
        <severity>8</severity>      
        <cvss>(AV:N/AC:L/Au:N/C:P/I:P/A:P)</cvss>      
        <Tags>         
             <tag>Database</tag>         
             <tag>Remote Execution</tag>         
             <tag>Ruby on Rails</tag>         
             <tag>SQL Injection</tag>         
        </Tags>      
        <AlternateIds>         
             <id name="APPLE">APPLE-SA-2013-03-14-1</id>         
             <id name="APPLE">APPLE-SA-2013-06-04-1</id>         
             <id name="CERT-VN">628463</id>         
             <id name="CVE">CVE-2013-0333</id>         
             <id name="DEBIAN">DSA-2613</id>         
             <id name="REDHAT">RHSA-2013:0201</id>         
             <id name="REDHAT">RHSA-2013:0202</id>         
             <id name="REDHAT">RHSA-2013:0203</id>         
             <id name="URL">http://lists.apple.com/archives/security-announce/2013/Jun/msg00000.html</id>         
             <id name="URL">http://lists.apple.com/archives/security-announce/2013/Mar/msg00002.html</id>         
             <id name="URL">http://rhn.redhat.com/errata/RHSA-2013-0201.html</id>         
             <id name="URL">http://rhn.redhat.com/errata/RHSA-2013-0202.html</id>         
             <id name="URL">http://rhn.redhat.com/errata/RHSA-2013-0203.html</id>         
             <id name="URL">http://support.apple.com/kb/HT5784</id>         
             <id name="URL">http://weblog.rubyonrails.org/2013/1/28/Rails-3-0-20-and-2-3-16-have-been-released/</id>         
             <id name="URL">http://www.debian.org/security/2013/dsa-2613</id>         
             <id name="URL">http://www.kb.cert.org/vuls/id/628463</id>         
             <id name="URL">https://groups.google.com/group/rubyonrails-security/msg/52179af76915e518?dmode=source&amp;amp;output=gplain</id>         
             <id name="URL">https://puppet.com/security/cve/cve-2013-0333</id>         
        </AlternateIds>      
        
        
      <Check scope="node">         <NetworkService>            <Product minCertainty="0.85" name="Ruby on Rails">               <version>                  <low>2.3.0</low>                  <high>2.3.16</high>               </version>               <version>                  <low>3.0.0</low>                  <high>3.0.19</high>               </version>            </Product>         </NetworkService>      </Check>      <Solutions>目前厂商已经发布了升级补丁以修复此安全问题，补丁获取链接： 
http://rubyonrails.org/</Solutions>      <cnnvd>CNNVD-201301-568</cnnvd>      <Description>lib/active_support/json/backends/yaml.rb in Ruby on Rails 2.3.x before 2.3.16 and 3.0.x before 3.0.20 does not properly convert JSON data to YAML data for processing by a YAML parser, which allows remote attackers to execute arbitrary code, conduct SQL injection attacks, or bypass authentication via crafted data that triggers unsafe decoding, a different vulnerability than CVE-2013-0156.</Description>   </Vulnerability>   <Vulnerability added="2020-01-03" gvid="ID106214" id="106214" modified="2020-01-03" published="2013-03-19" version="2.0">      
        <name>Ruby on Rails: Improper Input Validation (CVE-2013-1854)</name>      
        <severity>5</severity>      
        <cvss>(AV:N/AC:L/Au:N/C:N/I:N/A:P)</cvss>      
        <Tags>         
             <tag>Denial of Service</tag>         
             <tag>Ruby on Rails</tag>         
        </Tags>      
        <AlternateIds>         
             <id name="APPLE">APPLE-SA-2013-06-04-1</id>         
             <id name="APPLE">APPLE-SA-2013-10-22-5</id>         
             <id name="CVE">CVE-2013-1854</id>         
             <id name="REDHAT">RHSA-2013:0699</id>         
             <id name="REDHAT">RHSA-2014:1863</id>         
             <id name="URL">http://lists.apple.com/archives/security-announce/2013/Jun/msg00000.html</id>         
             <id name="URL">http://lists.apple.com/archives/security-announce/2013/Oct/msg00006.html</id>         
             <id name="URL">http://lists.opensuse.org/opensuse-updates/2013-04/msg00070.html</id>         
             <id name="URL">http://lists.opensuse.org/opensuse-updates/2013-04/msg00071.html</id>         
             <id name="URL">http://lists.opensuse.org/opensuse-updates/2013-04/msg00075.html</id>         
             <id name="URL">http://lists.opensuse.org/opensuse-updates/2013-04/msg00078.html</id>         
             <id name="URL">http://lists.opensuse.org/opensuse-updates/2013-04/msg00079.html</id>         
             <id name="URL">http://rhn.redhat.com/errata/RHSA-2013-0699.html</id>         
             <id name="URL">http://rhn.redhat.com/errata/RHSA-2014-1863.html</id>         
             <id name="URL">http://support.apple.com/kb/HT5784</id>         
             <id name="URL">http://weblog.rubyonrails.org/2013/3/18/SEC-ANN-Rails-3-2-13-3-1-12-and-2-3-18-have-been-released/</id>         
             <id name="URL">https://groups.google.com/group/ruby-security-ann/msg/34e0d780b04308de?dmode=source&amp;amp;output=gplain</id>         
        </AlternateIds>      
        
        
      <Check scope="node">         <NetworkService>            <Product minCertainty="0.85" name="Ruby on Rails">               <version>                  <low>2.3.0</low>                  <high>2.3.17</high>               </version>               <version>                  <low>3.1.0</low>                  <high>3.1.11</high>               </version>               <version>                  <low>3.2.0</low>                  <high>3.2.12</high>               </version>            </Product>         </NetworkService>      </Check>      <Solutions>目前厂商已经发布了升级补丁以修复此安全问题，补丁获取链接： 
https://groups.google.com/group/ruby-security-ann/msg/34e0d780b04308de?dmode=source&amp;output=gplain</Solutions>      <cnnvd>CNNVD-201303-356</cnnvd>      <Description>The Active Record component in Ruby on Rails 2.3.x before 2.3.18, 3.1.x before 3.1.12, and 3.2.x before 3.2.13 processes certain queries by converting hash keys to symbols, which allows remote attackers to cause a denial of service via crafted input to a where method.</Description>   </Vulnerability>   <Vulnerability added="2020-01-03" gvid="ID106215" id="106215" modified="2020-01-03" published="2013-03-19" version="2.0">      
        <name>Ruby on Rails: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') (CVE-2013-1855)</name>      
        <severity>4</severity>      
        <cvss>(AV:N/AC:M/Au:N/C:N/I:P/A:N)</cvss>      
        <Tags>         
             <tag>Ruby on Rails</tag>         
             <tag>Web</tag>         
             <tag>XSS</tag>         
        </Tags>      
        <AlternateIds>         
             <id name="APPLE">APPLE-SA-2013-06-04-1</id>         
             <id name="APPLE">APPLE-SA-2013-10-22-5</id>         
             <id name="CVE">CVE-2013-1855</id>         
             <id name="REDHAT">RHSA-2013:0698</id>         
             <id name="REDHAT">RHSA-2014:1863</id>         
             <id name="URL">http://lists.apple.com/archives/security-announce/2013/Jun/msg00000.html</id>         
             <id name="URL">http://lists.apple.com/archives/security-announce/2013/Oct/msg00006.html</id>         
             <id name="URL">http://lists.opensuse.org/opensuse-updates/2013-04/msg00072.html</id>         
             <id name="URL">http://lists.opensuse.org/opensuse-updates/2013-04/msg00073.html</id>         
             <id name="URL">http://lists.opensuse.org/opensuse-updates/2014-01/msg00013.html</id>         
             <id name="URL">http://rhn.redhat.com/errata/RHSA-2013-0698.html</id>         
             <id name="URL">http://rhn.redhat.com/errata/RHSA-2014-1863.html</id>         
             <id name="URL">http://support.apple.com/kb/HT5784</id>         
             <id name="URL">http://weblog.rubyonrails.org/2013/3/18/SEC-ANN-Rails-3-2-13-3-1-12-and-2-3-18-have-been-released/</id>         
             <id name="URL">https://groups.google.com/group/rubyonrails-security/msg/8ed835a97cdd1afd?dmode=source&amp;amp;output=gplain</id>         
        </AlternateIds>      
        
        
      <Check scope="node">         <NetworkService>            <Product minCertainty="0.85" name="Ruby on Rails">               <version>                  <low>0.9.1</low>                  <high>0.9.5</high>               </version>               <version>                  <low>0.10.0</low>                  <high>0.10.2</high>               </version>               <version>                  <low>0.11.0</low>                  <high>0.11.2</high>               </version>               <version>                  <low>0.12.0</low>                  <high>0.12.2</high>               </version>               <version>                  <low>0.13.0</low>                  <high>0.13.2</high>               </version>               <version>                  <low>0.14.1</low>                  <high>0.14.5</high>               </version>               <version>                  <low>1.0.0</low>                  <high>1.0.1</high>               </version>               <version>                  <low>1.1.0</low>                  <high>1.1.7</high>               </version>               <version>                  <low>1.2.0</low>                  <high>1.2.7</high>               </version>               <version>                  <low>1.9.5</low>                  <high>1.9.6</high>               </version>               <version>                  <low>2.0.0</low>                  <high>2.0.5</high>               </version>               <version>                  <low>2.1.0</low>                  <high>2.1.3</high>               </version>               <version>                  <low>2.2.0</low>                  <high>2.2.3</high>               </version>               <version>                  <low>2.3.0</low>                  <high>2.3.17</high>               </version>               <version>                  <low>3.0.0</low>                  <high>3.0.21</high>               </version>               <version>                  <low>3.1.0</low>                  <high>3.1.11</high>               </version>               <version>                  <low>3.2.0</low>                  <high>3.2.12</high>               </version>            </Product>         </NetworkService>      </Check>      <Solutions>目前厂商已经发布了升级补丁以修复此安全问题，补丁获取链接： 
https://groups.google.com/group/rubyonrails-security/msg/8ed835a97cdd1afd?dmode=source&amp;output=gplain</Solutions>      <cnnvd>CNNVD-201303-354</cnnvd>      <Description>The sanitize_css method in lib/action_controller/vendor/html-scanner/html/sanitizer.rb in the Action Pack component in Ruby on Rails before 2.3.18, 3.0.x and 3.1.x before 3.1.12, and 3.2.x before 3.2.13 does not properly handle \n (newline) characters, which makes it easier for remote attackers to conduct cross-site scripting (XSS) attacks via crafted Cascading Style Sheets (CSS) token sequences.</Description>   </Vulnerability>   <Vulnerability added="2020-01-03" gvid="ID106216" id="106216" modified="2020-01-03" published="2013-03-19" version="2.0">      
        <name>Ruby on Rails: Improper Input Validation (CVE-2013-1856)</name>      
        <severity>6</severity>      
        <cvss>(AV:N/AC:M/Au:N/C:P/I:N/A:P)</cvss>      
        <Tags>         
             <tag>Denial of Service</tag>         
             <tag>Ruby on Rails</tag>         
        </Tags>      
        <AlternateIds>         
             <id name="APPLE">APPLE-SA-2013-06-04-1</id>         
             <id name="APPLE">APPLE-SA-2013-10-22-5</id>         
             <id name="CVE">CVE-2013-1856</id>         
             <id name="URL">http://lists.apple.com/archives/security-announce/2013/Jun/msg00000.html</id>         
             <id name="URL">http://lists.apple.com/archives/security-announce/2013/Oct/msg00006.html</id>         
             <id name="URL">http://support.apple.com/kb/HT5784</id>         
             <id name="URL">http://weblog.rubyonrails.org/2013/3/18/SEC-ANN-Rails-3-2-13-3-1-12-and-2-3-18-have-been-released/</id>         
             <id name="URL">https://groups.google.com/group/rubyonrails-security/msg/6c2482d4ed1545e6?dmode=source&amp;amp;output=gplain</id>         
        </AlternateIds>      
        
        
      <Check scope="node">         <NetworkService>            <Product minCertainty="0.85" name="Ruby on Rails">               <version>                  <low>3.1.0</low>                  <high>3.1.11</high>               </version>               <version>                  <low>3.2.0</low>                  <high>3.2.12</high>               </version>            </Product>         </NetworkService>      </Check>      <Solutions>目前厂商已经发布了升级补丁以修复此安全问题，补丁获取链接： 
https://groups.google.com/group/rubyonrails-security/msg/6c2482d4ed1545e6?dmode=source&amp;output=gplain</Solutions>      <cnnvd>CNNVD-201303-352</cnnvd>      <Description>The ActiveSupport::XmlMini_JDOM backend in lib/active_support/xml_mini/jdom.rb in the Active Support component in Ruby on Rails 3.0.x and 3.1.x before 3.1.12 and 3.2.x before 3.2.13, when JRuby is used, does not properly restrict the capabilities of the XML parser, which allows remote attackers to read arbitrary files or cause a denial of service (resource consumption) via vectors involving (1) an external DTD or (2) an external entity declaration in conjunction with an entity reference.</Description>   </Vulnerability>   <Vulnerability added="2020-01-03" gvid="ID106217" id="106217" modified="2020-01-03" published="2013-03-19" version="2.0">      
        <name>Ruby on Rails: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') (CVE-2013-1857)</name>      
        <severity>4</severity>      
        <cvss>(AV:N/AC:M/Au:N/C:N/I:P/A:N)</cvss>      
        <Tags>         
             <tag>Ruby on Rails</tag>         
             <tag>Web</tag>         
             <tag>XSS</tag>         
        </Tags>      
        <AlternateIds>         
             <id name="APPLE">APPLE-SA-2013-06-04-1</id>         
             <id name="APPLE">APPLE-SA-2013-10-22-5</id>         
             <id name="CVE">CVE-2013-1857</id>         
             <id name="REDHAT">RHSA-2013:0698</id>         
             <id name="REDHAT">RHSA-2014:1863</id>         
             <id name="URL">http://lists.apple.com/archives/security-announce/2013/Jun/msg00000.html</id>         
             <id name="URL">http://lists.apple.com/archives/security-announce/2013/Oct/msg00006.html</id>         
             <id name="URL">http://lists.opensuse.org/opensuse-updates/2013-04/msg00072.html</id>         
             <id name="URL">http://lists.opensuse.org/opensuse-updates/2013-04/msg00073.html</id>         
             <id name="URL">http://lists.opensuse.org/opensuse-updates/2014-01/msg00013.html</id>         
             <id name="URL">http://rhn.redhat.com/errata/RHSA-2013-0698.html</id>         
             <id name="URL">http://rhn.redhat.com/errata/RHSA-2014-1863.html</id>         
             <id name="URL">http://support.apple.com/kb/HT5784</id>         
             <id name="URL">http://weblog.rubyonrails.org/2013/3/18/SEC-ANN-Rails-3-2-13-3-1-12-and-2-3-18-have-been-released/</id>         
             <id name="URL">https://groups.google.com/group/rubyonrails-security/msg/78b9817a5943f6d6?dmode=source&amp;amp;output=gplain</id>         
        </AlternateIds>      
        
        
      <Check scope="node">         <NetworkService>            <Product minCertainty="0.85" name="Ruby on Rails">               <version>                  <low>0.9.1</low>                  <high>0.9.5</high>               </version>               <version>                  <low>0.10.0</low>                  <high>0.10.2</high>               </version>               <version>                  <low>0.11.0</low>                  <high>0.11.2</high>               </version>               <version>                  <low>0.12.0</low>                  <high>0.12.2</high>               </version>               <version>                  <low>0.13.0</low>                  <high>0.13.2</high>               </version>               <version>                  <low>0.14.1</low>                  <high>0.14.5</high>               </version>               <version>                  <low>1.0.0</low>                  <high>1.0.1</high>               </version>               <version>                  <low>1.1.0</low>                  <high>1.1.7</high>               </version>               <version>                  <low>1.2.0</low>                  <high>1.2.7</high>               </version>               <version>                  <low>1.9.5</low>                  <high>1.9.6</high>               </version>               <version>                  <low>2.0.0</low>                  <high>2.0.5</high>               </version>               <version>                  <low>2.1.0</low>                  <high>2.1.3</high>               </version>               <version>                  <low>2.2.0</low>                  <high>2.2.3</high>               </version>               <version>                  <low>2.3.0</low>                  <high>2.3.17</high>               </version>               <version>                  <low>3.0.0</low>                  <high>3.0.21</high>               </version>               <version>                  <low>3.1.0</low>                  <high>3.1.11</high>               </version>               <version>                  <low>3.2.0</low>                  <high>3.2.12</high>               </version>            </Product>         </NetworkService>      </Check>      <Solutions>目前厂商已经发布了升级补丁以修复此安全问题，补丁获取链接： 
https://groups.google.com/group/rubyonrails-security/msg/78b9817a5943f6d6?dmode=source&amp;output=gplain</Solutions>      <cnnvd>CNNVD-201303-391</cnnvd>      <Description>The sanitize helper in lib/action_controller/vendor/html-scanner/html/sanitizer.rb in the Action Pack component in Ruby on Rails before 2.3.18, 3.0.x and 3.1.x before 3.1.12, and 3.2.x before 3.2.13 does not properly handle encoded : (colon) characters in URLs, which makes it easier for remote attackers to conduct cross-site scripting (XSS) attacks via a crafted scheme name, as demonstrated by including a &amp;#x3a; sequence.</Description>   </Vulnerability>   <Vulnerability added="2017-05-08" gvid="ID106218" id="106218" modified="2020-01-03" published="2013-04-21" version="2.0">      
        
        <severity>6</severity>      
        <cvss>(AV:N/AC:L/Au:N/C:P/I:P/A:N)</cvss>      
        <Tags>         
             <tag>Ruby on Rails</tag>         
        </Tags>      
        <AlternateIds>         
             <id name="CVE">CVE-2013-3221</id>         
             <id name="URL">http://openwall.com/lists/oss-security/2013/02/06/7</id>         
             <id name="URL">http://openwall.com/lists/oss-security/2013/04/24/7</id>         
             <id name="URL">http://pl.reddit.com/r/netsec/comments/17yajp/mysql_madness_and_rails/</id>         
             <id name="URL">http://www.phenoelit.org/blog/archives/2013/02/index.html</id>         
             <id name="URL">https://gist.github.com/dakull/5442275</id>         
             <id name="URL">https://groups.google.com/group/rubyonrails-security/msg/1f3bc0b88a60c1ce?dmode=source&amp;amp;output=gplain</id>         
        </AlternateIds>      
        
        
      <Check scope="node">         <NetworkService>            <Product minCertainty="0.85" name="Ruby on Rails">               <version>                  <low>2.3.0</low>                  <high>2.3.17</high>               </version>               <version>                  <low>3.0.0</low>                  <high>3.0.21</high>               </version>               <version>                  <low>3.1.0</low>                  <high>3.1.11</high>               </version>               <version>                  <low>3.2.0</low>                  <high>3.2.12</high>               </version>            </Product>         </NetworkService>      </Check>      <Solutions>目前厂商还没有提供此漏洞的相关补丁或者升级程序，建议使用此软件的用户随时关注厂商的主页以获取最新版本： 
http://openwall.com/lists/oss-security/2013/02/06/7</Solutions>      <cnnvd>CNNVD-201304-457</cnnvd>      <name>Ruby on Rails の Active Record コンポーネントにおけるデータ型インジェクション攻撃を実行される脆弱性</name>      <Description>
    </Description>   </Vulnerability>   <Vulnerability added="2020-01-03" gvid="ID106219" id="106219" modified="2020-01-03" published="2013-10-17" version="2.0">      
        <name>Ruby on Rails: Use of Externally-Controlled Format String (CVE-2013-4389)</name>      
        <severity>4</severity>      
        <cvss>(AV:N/AC:M/Au:N/C:N/I:N/A:P)</cvss>      
        <Tags>         
             <tag>Denial of Service</tag>         
             <tag>Mail</tag>         
             <tag>Ruby on Rails</tag>         
        </Tags>      
        <AlternateIds>         
             <id name="CVE">CVE-2013-4389</id>         
             <id name="DEBIAN">DSA-2887</id>         
             <id name="DEBIAN">DSA-2888</id>         
             <id name="URL">http://lists.opensuse.org/opensuse-updates/2013-12/msg00091.html</id>         
             <id name="URL">http://lists.opensuse.org/opensuse-updates/2013-12/msg00094.html</id>         
             <id name="URL">http://lists.opensuse.org/opensuse-updates/2014-01/msg00003.html</id>         
             <id name="URL">http://www.debian.org/security/2014/dsa-2887</id>         
             <id name="URL">http://www.debian.org/security/2014/dsa-2888</id>         
             <id name="URL">https://groups.google.com/forum/message/raw?msg=ruby-security-ann/yvlR1Vx44c8/elKJkpO2KVgJ</id>         
        </AlternateIds>      
        
        
      <Check scope="node">         <NetworkService>            <Product minCertainty="0.85" name="Ruby on Rails">               <version>                  <low>3.0.0</low>                  <high>3.0.21</high>               </version>               <version>                  <low>3.1.0</low>                  <high>3.1.11</high>               </version>               <version>                  <low>3.2.0</low>                  <high>3.2.13</high>               </version>            </Product>         </NetworkService>      </Check>      <Solutions>目前厂商已经发布了升级补丁以修复此安全问题，补丁获取链接： 
https://groups.google.com/forum/message/raw?msg=ruby-security-ann/yvlR1Vx44c8/elKJkpO2KVgJ</Solutions>      <cnnvd>CNNVD-201310-453</cnnvd>      <Description>Multiple format string vulnerabilities in log_subscriber.rb files in the log subscriber component in Action Mailer in Ruby on Rails 3.x before 3.2.15 allow remote attackers to cause a denial of service via a crafted e-mail address that is improperly handled during construction of a log message.</Description>   </Vulnerability>   <Vulnerability added="2020-01-03" gvid="ID106150" id="106150" modified="2020-01-03" published="2013-12-07" version="2.0">      
        <name>Ruby on Rails: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') (CVE-2013-4491)</name>      
        <severity>4</severity>      
        <cvss>(AV:N/AC:M/Au:N/C:N/I:P/A:N)</cvss>      
        <Tags>         
             <tag>Ruby on Rails</tag>         
             <tag>Web</tag>         
             <tag>XSS</tag>         
        </Tags>      
        <AlternateIds>         
             <id name="BID">64076</id>         
             <id name="CVE">CVE-2013-4491</id>         
             <id name="DEBIAN">DSA-2888</id>         
             <id name="REDHAT">RHSA-2013:1794</id>         
             <id name="REDHAT">RHSA-2014:0008</id>         
             <id name="REDHAT">RHSA-2014:1863</id>         
             <id name="URL">http://lists.opensuse.org/opensuse-updates/2013-12/msg00079.html</id>         
             <id name="URL">http://lists.opensuse.org/opensuse-updates/2013-12/msg00081.html</id>         
             <id name="URL">http://lists.opensuse.org/opensuse-updates/2013-12/msg00082.html</id>         
             <id name="URL">http://lists.opensuse.org/opensuse-updates/2014-01/msg00003.html</id>         
             <id name="URL">http://rhn.redhat.com/errata/RHSA-2013-1794.html</id>         
             <id name="URL">http://rhn.redhat.com/errata/RHSA-2014-0008.html</id>         
             <id name="URL">http://rhn.redhat.com/errata/RHSA-2014-1863.html</id>         
             <id name="URL">http://secunia.com/advisories/57836</id>         
             <id name="URL">http://weblog.rubyonrails.org/2013/12/3/Rails_3_2_16_and_4_0_2_have_been_released/</id>         
             <id name="URL">http://www.debian.org/security/2014/dsa-2888</id>         
             <id name="URL">http://www.getchef.com/blog/2014/04/09/enterprise-chef-11-1-3-release/</id>         
             <id name="URL">http://www.securityfocus.com/bid/64076</id>         
             <id name="URL">https://groups.google.com/forum/message/raw?msg=ruby-security-ann/pLrh6DUw998/bLFEyIO4k_EJ</id>         
             <id name="URL">https://puppet.com/security/cve/cve-2013-4491</id>         
        </AlternateIds>      
        
        
      <Check scope="node">         <NetworkService>            <Product minCertainty="0.85" name="Ruby on Rails">               <version>                  <low>3.0.0</low>                  <high>3.0.21</high>               </version>               <version>                  <low>3.1.0</low>                  <high>3.1.11</high>               </version>               <version>                  <low>3.2.0</low>                  <high>3.2.14</high>               </version>               <version>                  <low>4.0.0</low>                  <high>4.0.1</high>               </version>            </Product>         </NetworkService>      </Check>      <Solutions>目前厂商已经发布了升级补丁以修复此安全问题，补丁获取链接： 
http://weblog.rubyonrails.org/2013/12/3/Rails_3_2_16_and_4_0_2_have_been_released/</Solutions>      <cnnvd>CNNVD-201312-123</cnnvd>      <Description>Cross-site scripting (XSS) vulnerability in actionpack/lib/action_view/helpers/translation_helper.rb in the internationalization component in Ruby on Rails 3.x before 3.2.16 and 4.x before 4.0.2 allows remote attackers to inject arbitrary web script or HTML via a crafted string that triggers generation of a fallback string by the i18n gem.</Description>   </Vulnerability>   <Vulnerability added="2020-01-03" gvid="ID106151" id="106151" modified="2020-01-03" published="2013-12-07" version="2.0">      
        <name>Ruby on Rails: Improper Input Validation (CVE-2013-6414)</name>      
        <severity>5</severity>      
        <cvss>(AV:N/AC:L/Au:N/C:N/I:N/A:P)</cvss>      
        <Tags>         
             <tag>Denial of Service</tag>         
             <tag>Ruby on Rails</tag>         
        </Tags>      
        <AlternateIds>         
             <id name="CVE">CVE-2013-6414</id>         
             <id name="DEBIAN">DSA-2888</id>         
             <id name="REDHAT">RHSA-2013:1794</id>         
             <id name="REDHAT">RHSA-2014:0008</id>         
             <id name="REDHAT">RHSA-2014:1863</id>         
             <id name="URL">http://lists.opensuse.org/opensuse-updates/2013-12/msg00079.html</id>         
             <id name="URL">http://lists.opensuse.org/opensuse-updates/2013-12/msg00081.html</id>         
             <id name="URL">http://lists.opensuse.org/opensuse-updates/2013-12/msg00082.html</id>         
             <id name="URL">http://lists.opensuse.org/opensuse-updates/2014-01/msg00003.html</id>         
             <id name="URL">http://rhn.redhat.com/errata/RHSA-2013-1794.html</id>         
             <id name="URL">http://rhn.redhat.com/errata/RHSA-2014-0008.html</id>         
             <id name="URL">http://rhn.redhat.com/errata/RHSA-2014-1863.html</id>         
             <id name="URL">http://secunia.com/advisories/57836</id>         
             <id name="URL">http://weblog.rubyonrails.org/2013/12/3/Rails_3_2_16_and_4_0_2_have_been_released/</id>         
             <id name="URL">http://www.debian.org/security/2014/dsa-2888</id>         
             <id name="URL">http://www.getchef.com/blog/2014/04/09/enterprise-chef-11-1-3-release/</id>         
             <id name="URL">https://groups.google.com/forum/message/raw?msg=ruby-security-ann/A-ebV4WxzKg/KNPTbX8XAQUJ</id>         
             <id name="URL">https://puppet.com/security/cve/cve-2013-6414</id>         
        </AlternateIds>      
        
        
      <Check scope="node">         <NetworkService>            <Product minCertainty="0.85" name="Ruby on Rails">               <version>                  <low>3.0.0</low>                  <high>3.0.21</high>               </version>               <version>                  <low>3.1.0</low>                  <high>3.1.11</high>               </version>               <version>                  <low>3.2.0</low>                  <high>3.2.14</high>               </version>               <version>                  <low>4.0.0</low>                  <high>4.0.1</high>               </version>            </Product>         </NetworkService>      </Check>      <Solutions>目前厂商已经发布了升级补丁以修复此安全问题，补丁获取链接： 
http://weblog.rubyonrails.org/2013/12/3/Rails_3_2_16_and_4_0_2_have_been_released/</Solutions>      <cnnvd>CNNVD-201312-072</cnnvd>      <Description>actionpack/lib/action_view/lookup_context.rb in Action View in Ruby on Rails 3.x before 3.2.16 and 4.x before 4.0.2 allows remote attackers to cause a denial of service (memory consumption) via a header containing an invalid MIME type that leads to excessive caching.</Description>   </Vulnerability>   <Vulnerability added="2020-01-03" gvid="ID106152" id="106152" modified="2020-01-03" published="2013-12-07" version="2.0">      
        <name>Ruby on Rails: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') (CVE-2013-6415)</name>      
        <severity>4</severity>      
        <cvss>(AV:N/AC:M/Au:N/C:N/I:P/A:N)</cvss>      
        <Tags>         
             <tag>Ruby on Rails</tag>         
             <tag>Web</tag>         
             <tag>XSS</tag>         
        </Tags>      
        <AlternateIds>         
             <id name="BID">64077</id>         
             <id name="CVE">CVE-2013-6415</id>         
             <id name="DEBIAN">DSA-2888</id>         
             <id name="REDHAT">RHSA-2013:1794</id>         
             <id name="REDHAT">RHSA-2014:0008</id>         
             <id name="REDHAT">RHSA-2014:1863</id>         
             <id name="URL">http://lists.opensuse.org/opensuse-updates/2013-12/msg00079.html</id>         
             <id name="URL">http://lists.opensuse.org/opensuse-updates/2013-12/msg00080.html</id>         
             <id name="URL">http://lists.opensuse.org/opensuse-updates/2013-12/msg00081.html</id>         
             <id name="URL">http://lists.opensuse.org/opensuse-updates/2013-12/msg00082.html</id>         
             <id name="URL">http://lists.opensuse.org/opensuse-updates/2014-01/msg00003.html</id>         
             <id name="URL">http://lists.opensuse.org/opensuse-updates/2014-01/msg00013.html</id>         
             <id name="URL">http://rhn.redhat.com/errata/RHSA-2013-1794.html</id>         
             <id name="URL">http://rhn.redhat.com/errata/RHSA-2014-0008.html</id>         
             <id name="URL">http://rhn.redhat.com/errata/RHSA-2014-1863.html</id>         
             <id name="URL">http://secunia.com/advisories/56093</id>         
             <id name="URL">http://weblog.rubyonrails.org/2013/12/3/Rails_3_2_16_and_4_0_2_have_been_released/</id>         
             <id name="URL">http://www.debian.org/security/2014/dsa-2888</id>         
             <id name="URL">http://www.securityfocus.com/bid/64077</id>         
             <id name="URL">https://groups.google.com/forum/message/raw?msg=ruby-security-ann/9WiRn2nhfq0/2K2KRB4LwCMJ</id>         
             <id name="URL">https://puppet.com/security/cve/cve-2013-6415</id>         
        </AlternateIds>      
        
        
      <Check scope="node">         <NetworkService>            <Product minCertainty="0.85" name="Ruby on Rails">               <version>                  <low>3.0.0</low>                  <high>3.0.21</high>               </version>               <version>                  <low>3.1.0</low>                  <high>3.1.11</high>               </version>               <version>                  <low>3.2.0</low>                  <high>3.2.14</high>               </version>               <version>                  <low>4.0.0</low>                  <high>4.0.1</high>               </version>            </Product>         </NetworkService>      </Check>      <Solutions>目前厂商已经发布了升级补丁以修复此安全问题，补丁获取链接： 
http://weblog.rubyonrails.org/2013/12/3/Rails_3_2_16_and_4_0_2_have_been_released/</Solutions>      <cnnvd>CNNVD-201312-074</cnnvd>      <Description>Cross-site scripting (XSS) vulnerability in the number_to_currency helper in actionpack/lib/action_view/helpers/number_helper.rb in Ruby on Rails before 3.2.16 and 4.x before 4.0.2 allows remote attackers to inject arbitrary web script or HTML via the unit parameter.</Description>   </Vulnerability>   <Vulnerability added="2020-01-03" gvid="ID106153" id="106153" modified="2020-01-03" published="2013-12-07" version="2.0">      
        <name>Ruby on Rails: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') (CVE-2013-6416)</name>      
        <severity>4</severity>      
        <cvss>(AV:N/AC:M/Au:N/C:N/I:P/A:N)</cvss>      
        <Tags>         
             <tag>Ruby on Rails</tag>         
             <tag>Web</tag>         
             <tag>XSS</tag>         
        </Tags>      
        <AlternateIds>         
             <id name="BID">64071</id>         
             <id name="CVE">CVE-2013-6416</id>         
             <id name="URL">http://weblog.rubyonrails.org/2013/12/3/Rails_3_2_16_and_4_0_2_have_been_released/</id>         
             <id name="URL">http://www.securityfocus.com/bid/64071</id>         
             <id name="URL">https://groups.google.com/forum/message/raw?msg=ruby-security-ann/5ZI1-H5OoIM/ZNq4FoR2GnIJ</id>         
        </AlternateIds>      
        
        
      <Check scope="node">         <NetworkService>            <Product minCertainty="0.85" name="Ruby on Rails">               <version>                  <low>4.0.0</low>                  <high>4.0.1</high>               </version>            </Product>         </NetworkService>      </Check>      <Solutions>目前厂商已经发布了升级补丁以修复此安全问题，补丁获取链接： 
http://weblog.rubyonrails.org/2013/12/3/Rails_3_2_16_and_4_0_2_have_been_released/</Solutions>      <cnnvd>CNNVD-201312-125</cnnvd>      <Description>Cross-site scripting (XSS) vulnerability in the simple_format helper in actionpack/lib/action_view/helpers/text_helper.rb in Ruby on Rails 4.x before 4.0.2 allows remote attackers to inject arbitrary web script or HTML via a crafted HTML attribute.</Description>   </Vulnerability>   <Vulnerability added="2020-01-03" gvid="ID106154" id="106154" modified="2020-01-03" published="2013-12-07" version="2.0">      
        <name>Ruby on Rails: Permissions, Privileges, and Access Controls (CVE-2013-6417)</name>      
        <severity>6</severity>      
        <cvss>(AV:N/AC:L/Au:N/C:P/I:P/A:N)</cvss>      
        <Tags>         
             <tag>Ruby on Rails</tag>         
             <tag>Web</tag>         
        </Tags>      
        <AlternateIds>         
             <id name="CVE">CVE-2013-6417</id>         
             <id name="DEBIAN">DSA-2888</id>         
             <id name="REDHAT">RHSA-2013:1794</id>         
             <id name="REDHAT">RHSA-2014:0008</id>         
             <id name="REDHAT">RHSA-2014:0469</id>         
             <id name="URL">http://lists.opensuse.org/opensuse-updates/2013-12/msg00079.html</id>         
             <id name="URL">http://lists.opensuse.org/opensuse-updates/2013-12/msg00081.html</id>         
             <id name="URL">http://lists.opensuse.org/opensuse-updates/2013-12/msg00082.html</id>         
             <id name="URL">http://lists.opensuse.org/opensuse-updates/2014-01/msg00003.html</id>         
             <id name="URL">http://rhn.redhat.com/errata/RHSA-2013-1794.html</id>         
             <id name="URL">http://rhn.redhat.com/errata/RHSA-2014-0008.html</id>         
             <id name="URL">http://rhn.redhat.com/errata/RHSA-2014-0469.html</id>         
             <id name="URL">http://weblog.rubyonrails.org/2013/12/3/Rails_3_2_16_and_4_0_2_have_been_released/</id>         
             <id name="URL">http://www.debian.org/security/2014/dsa-2888</id>         
             <id name="URL">https://groups.google.com/forum/message/raw?msg=ruby-security-ann/niK4drpSHT4/g8JW8ZsayRkJ</id>         
             <id name="URL">https://puppet.com/security/cve/cve-2013-6417</id>         
        </AlternateIds>      
        
        
      <Check scope="node">         <NetworkService>            <Product minCertainty="0.85" name="Ruby on Rails">               <version>                  <low>3.0.0</low>                  <high>3.0.21</high>               </version>               <version>                  <low>3.1.0</low>                  <high>3.1.11</high>               </version>               <version>                  <low>3.2.0</low>                  <high>3.2.14</high>               </version>               <version>                  <low>4.0.0</low>                  <high>4.0.1</high>               </version>            </Product>         </NetworkService>      </Check>      <Solutions>目前厂商已经发布了升级补丁以修复此安全问题，补丁获取链接： 
http://weblog.rubyonrails.org/2013/12/3/Rails_3_2_16_and_4_0_2_have_been_released/</Solutions>      <cnnvd>CNNVD-201312-126</cnnvd>      <Description>actionpack/lib/action_dispatch/http/request.rb in Ruby on Rails before 3.2.16 and 4.x before 4.0.2 does not properly consider differences in parameter handling between the Active Record component and the JSON implementation, which allows remote attackers to bypass intended database-query restrictions and perform NULL checks or trigger missing WHERE clauses via a crafted request that leverages (1) third-party Rack middleware or (2) custom Rack middleware.  NOTE: this vulnerability exists because of an incomplete fix for CVE-2013-0155.</Description>   </Vulnerability>   <Vulnerability added="2017-05-02" gvid="ID106155" id="106155" modified="2020-01-03" published="2014-02-20" version="2.0">      
        
        <severity>7</severity>      
        <cvss>(AV:N/AC:M/Au:N/C:P/I:P/A:P)</cvss>      
        <Tags>         
             <tag>Database</tag>         
             <tag>Ruby on Rails</tag>         
             <tag>SQL Injection</tag>         
        </Tags>      
        <AlternateIds>         
             <id name="CVE">CVE-2014-0080</id>         
             <id name="URL">http://openwall.com/lists/oss-security/2014/02/18/9</id>         
             <id name="URL">https://groups.google.com/forum/message/raw?msg=rubyonrails-security/Wu96YkTUR6s/pPLBMZrlwvYJ</id>         
        </AlternateIds>      
        
        
      <Check scope="node">         <NetworkService>            <Product minCertainty="0.85" name="Ruby on Rails">               <version>                  <low>4.0.0</low>                  <high>4.0.3</high>               </version>               <version>                  <low>4.1.0</low>                  <high>4.1.0</high>               </version>            </Product>         </NetworkService>      </Check>      <Solutions>目前厂商已经发布了升级补丁以修复此安全问题，补丁获取链接： 
http://weblog.rubyonrails.org/2014/2/18/Rails_3_2_17_4_0_3_and_4_1_0_beta2_have_been_released/</Solutions>      <cnnvd>CNNVD-201402-277</cnnvd>      <name>Ruby on Rails の Active Record における SQL インジェクションの脆弱性</name>      <Description>
    </Description>   </Vulnerability>   <Vulnerability added="2020-01-03" gvid="ID106156" id="106156" modified="2020-01-03" published="2014-02-20" version="2.0">      
        <name>Ruby on Rails: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') (CVE-2014-0081)</name>      
        <severity>4</severity>      
        <cvss>(AV:N/AC:M/Au:N/C:N/I:P/A:N)</cvss>      
        <Tags>         
             <tag>Ruby on Rails</tag>         
             <tag>Web</tag>         
             <tag>XSS</tag>         
        </Tags>      
        <AlternateIds>         
             <id name="BID">65647</id>         
             <id name="CVE">CVE-2014-0081</id>         
             <id name="REDHAT">RHSA-2014:0215</id>         
             <id name="REDHAT">RHSA-2014:0306</id>         
             <id name="URL">http://lists.opensuse.org/opensuse-updates/2014-02/msg00081.html</id>         
             <id name="URL">http://openwall.com/lists/oss-security/2014/02/18/8</id>         
             <id name="URL">http://rhn.redhat.com/errata/RHSA-2014-0215.html</id>         
             <id name="URL">http://rhn.redhat.com/errata/RHSA-2014-0306.html</id>         
             <id name="URL">http://secunia.com/advisories/57376</id>         
             <id name="URL">http://www.securityfocus.com/bid/65647</id>         
             <id name="URL">http://www.securitytracker.com/id/1029782</id>         
             <id name="URL">https://groups.google.com/forum/message/raw?msg=rubyonrails-security/tfp6gZCtzr4/j8LUHmu7fIEJ</id>         
        </AlternateIds>      
        
        
      <Check scope="node">         <NetworkService>            <Product minCertainty="0.85" name="Ruby on Rails">               <version>                  <low>0.9.1</low>                  <high>0.9.5</high>               </version>               <version>                  <low>0.10.0</low>                  <high>0.10.2</high>               </version>               <version>                  <low>0.11.0</low>                  <high>0.11.2</high>               </version>               <version>                  <low>0.12.0</low>                  <high>0.12.2</high>               </version>               <version>                  <low>0.13.0</low>                  <high>0.13.2</high>               </version>               <version>                  <low>0.14.1</low>                  <high>0.14.5</high>               </version>               <version>                  <low>1.0.0</low>                  <high>1.0.1</high>               </version>               <version>                  <low>1.1.0</low>                  <high>1.1.7</high>               </version>               <version>                  <low>1.2.0</low>                  <high>1.2.7</high>               </version>               <version>                  <low>1.9.5</low>                  <high>1.9.6</high>               </version>               <version>                  <low>2.0.0</low>                  <high>2.0.5</high>               </version>               <version>                  <low>2.1.0</low>                  <high>2.1.3</high>               </version>               <version>                  <low>2.2.0</low>                  <high>2.2.3</high>               </version>               <version>                  <low>2.3.0</low>                  <high>2.3.17</high>               </version>               <version>                  <low>3.0.0</low>                  <high>3.0.21</high>               </version>               <version>                  <low>3.1.0</low>                  <high>3.1.11</high>               </version>               <version>                  <low>3.2.0</low>                  <high>3.2.16</high>               </version>               <version>                  <low>4.0.0</low>                  <high>4.0.3</high>               </version>               <version>                  <low>4.1.0</low>                  <high>4.1.0</high>               </version>            </Product>         </NetworkService>      </Check>      <Solutions>目前厂商已经发布了升级补丁以修复此安全问题，补丁获取链接： 
http://weblog.rubyonrails.org/2014/2/18/Rails_3_2_17_4_0_3_and_4_1_0_beta2_have_been_released/</Solutions>      <cnnvd>CNNVD-201402-278</cnnvd>      <Description>Multiple cross-site scripting (XSS) vulnerabilities in actionview/lib/action_view/helpers/number_helper.rb in Ruby on Rails before 3.2.17, 4.0.x before 4.0.3, and 4.1.x before 4.1.0.beta2 allow remote attackers to inject arbitrary web script or HTML via the (1) format, (2) negative_format, or (3) units parameter to the (a) number_to_currency, (b) number_to_percentage, or (c) number_to_human helper.</Description>   </Vulnerability>   <Vulnerability added="2020-01-03" gvid="ID106220" id="106220" modified="2020-01-03" published="2014-02-20" version="2.0">      
        <name>Ruby on Rails: Improper Input Validation (CVE-2014-0082)</name>      
        <severity>5</severity>      
        <cvss>(AV:N/AC:L/Au:N/C:N/I:N/A:P)</cvss>      
        <Tags>         
             <tag>Denial of Service</tag>         
             <tag>Ruby on Rails</tag>         
        </Tags>      
        <AlternateIds>         
             <id name="CVE">CVE-2014-0082</id>         
             <id name="REDHAT">RHSA-2014:0215</id>         
             <id name="REDHAT">RHSA-2014:0306</id>         
             <id name="URL">http://lists.opensuse.org/opensuse-updates/2014-02/msg00081.html</id>         
             <id name="URL">http://openwall.com/lists/oss-security/2014/02/18/10</id>         
             <id name="URL">http://rhn.redhat.com/errata/RHSA-2014-0215.html</id>         
             <id name="URL">http://rhn.redhat.com/errata/RHSA-2014-0306.html</id>         
             <id name="URL">http://secunia.com/advisories/57376</id>         
             <id name="URL">http://secunia.com/advisories/57836</id>         
             <id name="URL">http://www.getchef.com/blog/2014/04/09/enterprise-chef-11-1-3-release/</id>         
             <id name="URL">https://groups.google.com/forum/message/raw?msg=rubyonrails-security/LMxO_3_eCuc/ozGBEhKaJbIJ</id>         
             <id name="URL">https://puppet.com/security/cve/cve-2014-0082</id>         
        </AlternateIds>      
        
        
      <Check scope="node">         <NetworkService>            <Product minCertainty="0.85" name="Ruby on Rails">               <version>                  <low>3.0.0</low>                  <high>3.0.21</high>               </version>               <version>                  <low>3.1.0</low>                  <high>3.1.11</high>               </version>               <version>                  <low>3.2.0</low>                  <high>3.2.15</high>               </version>               <version>                  <low>3.2.0</low>                  <high>3.2.15</high>               </version>            </Product>         </NetworkService>      </Check>      <Solutions>目前厂商已经发布了升级补丁以修复此安全问题，补丁获取链接： 
http://weblog.rubyonrails.org/2014/2/18/Rails_3_2_17_4_0_3_and_4_1_0_beta2_have_been_released/</Solutions>      <cnnvd>CNNVD-201402-279</cnnvd>      <Description>actionpack/lib/action_view/template/text.rb in Action View in Ruby on Rails 3.x before 3.2.17 converts MIME type strings to symbols during use of the :text option to the render method, which allows remote attackers to cause a denial of service (memory consumption) by including these strings in headers.</Description>   </Vulnerability>   <Vulnerability added="2020-01-03" gvid="ID106157" id="106157" modified="2020-01-03" published="2014-05-07" version="2.0">      
        <name>Ruby on Rails: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal') (CVE-2014-0130)</name>      
        <severity>4</severity>      
        <cvss>(AV:N/AC:M/Au:N/C:P/I:N/A:N)</cvss>      
        <Tags>         
             <tag>Directory Traversal</tag>         
             <tag>Ruby on Rails</tag>         
        </Tags>      
        <AlternateIds>         
             <id name="BID">67244</id>         
             <id name="CVE">CVE-2014-0130</id>         
             <id name="REDHAT">RHSA-2014:1863</id>         
             <id name="URL">http://matasano.com/research/AnatomyOfRailsVuln-CVE-2014-0130.pdf</id>         
             <id name="URL">http://rhn.redhat.com/errata/RHSA-2014-1863.html</id>         
             <id name="URL">http://www.securityfocus.com/bid/67244</id>         
             <id name="URL">https://groups.google.com/forum/message/raw?msg=rubyonrails-security/NkKc7vTW70o/NxW_PDBSG3AJ</id>         
        </AlternateIds>      
        
        
      <Check scope="node">         <NetworkService>            <Product minCertainty="0.85" name="Ruby on Rails">               <version>                  <low>3.2.0</low>                  <high>3.2.17</high>               </version>               <version>                  <low>4.0.0</low>                  <high>4.0.5</high>               </version>               <version>                  <low>4.1.0</low>                  <high>4.1.0</high>               </version>            </Product>         </NetworkService>      </Check>      <Solutions>目前厂商已经发布了升级补丁以修复此安全问题，补丁获取链接： 
http://weblog.rubyonrails.org/2014/5/6/Rails_3_2_18_4_0_5_and_4_1_1_have_been_released/</Solutions>      <cnnvd>CNNVD-201405-091</cnnvd>      <Description>Directory traversal vulnerability in actionpack/lib/abstract_controller/base.rb in the implicit-render implementation in Ruby on Rails before 3.2.18, 4.0.x before 4.0.5, and 4.1.x before 4.1.1, when certain route globbing configurations are enabled, allows remote attackers to read arbitrary files via a crafted request.</Description>   </Vulnerability>   <Vulnerability added="2020-01-03" gvid="ID106221" id="106221" modified="2020-01-03" published="2014-07-07" version="2.0">      
        <name>Ruby on Rails: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') (CVE-2014-3482)</name>      
        <severity>8</severity>      
        <cvss>(AV:N/AC:L/Au:N/C:P/I:P/A:P)</cvss>      
        <Tags>         
             <tag>Database</tag>         
             <tag>Remote Execution</tag>         
             <tag>Ruby on Rails</tag>         
             <tag>SQL Injection</tag>         
        </Tags>      
        <AlternateIds>         
             <id name="BID">68343</id>         
             <id name="CVE">CVE-2014-3482</id>         
             <id name="DEBIAN">DSA-2982</id>         
             <id name="REDHAT">RHSA-2014:0876</id>         
             <id name="URL">http://openwall.com/lists/oss-security/2014/07/02/5</id>         
             <id name="URL">http://rhn.redhat.com/errata/RHSA-2014-0876.html</id>         
             <id name="URL">http://secunia.com/advisories/59973</id>         
             <id name="URL">http://secunia.com/advisories/60214</id>         
             <id name="URL">http://secunia.com/advisories/60763</id>         
             <id name="URL">http://www.debian.org/security/2014/dsa-2982</id>         
             <id name="URL">http://www.securityfocus.com/bid/68343</id>         
             <id name="URL">https://groups.google.com/forum/message/raw?msg=rubyonrails-security/wDxePLJGZdI/WP7EasCJTA4J</id>         
        </AlternateIds>      
        
        
      <Check scope="node">         <NetworkService>            <Product minCertainty="0.85" name="Ruby on Rails">               <version>                  <low>2.0.0</low>                  <high>2.0.5</high>               </version>               <version>                  <low>2.1.0</low>                  <high>2.1.3</high>               </version>               <version>                  <low>2.2.0</low>                  <high>2.2.3</high>               </version>               <version>                  <low>2.3.0</low>                  <high>2.3.19</high>               </version>               <version>                  <low>3.0.0</low>                  <high>3.0.21</high>               </version>               <version>                  <low>3.1.0</low>                  <high>3.1.11</high>               </version>               <version>                  <low>3.2.0</low>                  <high>3.2.18</high>               </version>            </Product>         </NetworkService>      </Check>      <Solutions>目前厂商已经发布了升级补丁以修复此安全问题，详情请关注厂商主页： 
http://rubyonrails.org/</Solutions>      <cnnvd>CNNVD-201407-181</cnnvd>      <Description>SQL injection vulnerability in activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb in the PostgreSQL adapter for Active Record in Ruby on Rails 2.x and 3.x before 3.2.19 allows remote attackers to execute arbitrary SQL commands by leveraging improper bitstring quoting.</Description>   </Vulnerability>   <Vulnerability added="2020-01-03" gvid="ID106158" id="106158" modified="2020-01-03" published="2014-07-07" version="2.0">      
        <name>Ruby on Rails: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') (CVE-2014-3483)</name>      
        <severity>8</severity>      
        <cvss>(AV:N/AC:L/Au:N/C:P/I:P/A:P)</cvss>      
        <Tags>         
             <tag>Database</tag>         
             <tag>Remote Execution</tag>         
             <tag>Ruby on Rails</tag>         
             <tag>SQL Injection</tag>         
        </Tags>      
        <AlternateIds>         
             <id name="BID">68341</id>         
             <id name="CVE">CVE-2014-3483</id>         
             <id name="DEBIAN">DSA-2982</id>         
             <id name="REDHAT">RHSA-2014:0877</id>         
             <id name="URL">http://openwall.com/lists/oss-security/2014/07/02/5</id>         
             <id name="URL">http://rhn.redhat.com/errata/RHSA-2014-0877.html</id>         
             <id name="URL">http://secunia.com/advisories/59971</id>         
             <id name="URL">http://secunia.com/advisories/60214</id>         
             <id name="URL">http://www.debian.org/security/2014/dsa-2982</id>         
             <id name="URL">http://www.securityfocus.com/bid/68341</id>         
             <id name="URL">https://groups.google.com/forum/message/raw?msg=rubyonrails-security/wDxePLJGZdI/WP7EasCJTA4J</id>         
        </AlternateIds>      
        
        
      <Check scope="node">         <NetworkService>            <Product minCertainty="0.85" name="Ruby on Rails">               <version>                  <low>4.0.0</low>                  <high>4.0.7</high>               </version>               <version>                  <low>4.1.0</low>                  <high>4.1.2</high>               </version>               <version>                  <low>4.1.0</low>                  <high>4.1.2</high>               </version>               <version>                  <low>4.1.0</low>                  <high>4.1.2</high>               </version>               <version>                  <low>4.1.0</low>                  <high>4.1.2</high>               </version>            </Product>         </NetworkService>      </Check>      <Solutions>目前厂商已经发布了升级补丁以修复此安全问题，详情请关注厂商主页： 
http://rubyonrails.org/</Solutions>      <cnnvd>CNNVD-201407-182</cnnvd>      <Description>SQL injection vulnerability in activerecord/lib/active_record/connection_adapters/postgresql/quoting.rb in the PostgreSQL adapter for Active Record in Ruby on Rails 4.x before 4.0.7 and 4.1.x before 4.1.3 allows remote attackers to execute arbitrary SQL commands by leveraging improper range quoting.</Description>   </Vulnerability>   <Vulnerability added="2020-01-03" gvid="ID106159" id="106159" modified="2020-01-03" published="2014-08-20" version="2.0">      
        <name>Ruby on Rails: Permissions, Privileges, and Access Controls (CVE-2014-3514)</name>      
        <severity>8</severity>      
        <cvss>(AV:N/AC:L/Au:N/C:P/I:P/A:P)</cvss>      
        <Tags>         
             <tag>Ruby on Rails</tag>         
        </Tags>      
        <AlternateIds>         
             <id name="CVE">CVE-2014-3514</id>         
             <id name="REDHAT">RHSA-2014:1102</id>         
             <id name="URL">http://openwall.com/lists/oss-security/2014/08/18/10</id>         
             <id name="URL">http://rhn.redhat.com/errata/RHSA-2014-1102.html</id>         
             <id name="URL">http://secunia.com/advisories/60347</id>         
             <id name="URL">https://groups.google.com/forum/message/raw?msg=rubyonrails-security/M4chq5Sb540/CC1Fh0Y_NWwJ</id>         
        </AlternateIds>      
        
        
      <Check scope="node">         <NetworkService>            <Product minCertainty="0.85" name="Ruby on Rails">               <version>                  <low>4.0.0</low>                  <high>4.0.9</high>               </version>               <version>                  <low>4.1.0</low>                  <high>4.1.4</high>               </version>            </Product>         </NetworkService>      </Check>      <Solutions>目前厂商已经发布了升级补丁以修复此安全问题，补丁获取链接： 
http://weblog.rubyonrails.org/2014/8/18/Rails_4_0_9_and_4_1_5_have_been_released/</Solutions>      <cnnvd>CNNVD-201408-304</cnnvd>      <Description>activerecord/lib/active_record/relation/query_methods.rb in Active Record in Ruby on Rails 4.0.x before 4.0.9 and 4.1.x before 4.1.5 allows remote attackers to bypass the strong parameters protection mechanism via crafted input to an application that makes create_with calls.</Description>   </Vulnerability>   <Vulnerability added="2020-01-03" gvid="ID106222" id="106222" modified="2020-01-03" published="2014-11-16" version="2.0">      
        <name>Ruby on Rails: Data Processing Errors (CVE-2014-3916)</name>      
        <severity>5</severity>      
        <cvss>(AV:N/AC:L/Au:N/C:N/I:N/A:P)</cvss>      
        <Tags>         
             <tag>Denial of Service</tag>         
             <tag>Ruby on Rails</tag>         
        </Tags>      
        <AlternateIds>         
             <id name="BID">67705</id>         
             <id name="CVE">CVE-2014-3916</id>         
             <id name="URL">http://seclists.org/oss-sec/2014/q2/362</id>         
             <id name="URL">http://seclists.org/oss-sec/2014/q2/375</id>         
             <id name="URL">http://www.securityfocus.com/bid/67705</id>         
             <id name="URL">https://bugs.ruby-lang.org/issues/9709</id>         
             <id name="URL">https://exchange.xforce.ibmcloud.com/vulnerabilities/93505</id>         
             <id name="XF">93505</id>         
        </AlternateIds>      
        
        
      <Check scope="node">         <NetworkService>            <Product minCertainty="0.85" name="Ruby on Rails">               <version>                  <low>1.9.3</low>                  <high>1.9.4</high>               </version>               <version>                  <low>2.0.0</low>                  <high>2.0.1</high>               </version>               <version>                  <low>2.1.0</low>                  <high>2.1.1</high>               </version>            </Product>         </NetworkService>      </Check>      <Solutions>目前厂商已经发布了升级补丁以修复此安全问题，补丁获取链接： 
https://www.ruby-lang.org/zh_cn/downloads/</Solutions>      <cnnvd>CNNVD-201406-612</cnnvd>      <Description>The str_buf_cat function in string.c in Ruby 1.9.3, 2.0.0, and 2.1 allows context-dependent attackers to cause a denial of service (segmentation fault and crash) via a long string.</Description>   </Vulnerability>   <Vulnerability added="2020-01-03" gvid="ID106160" id="106160" modified="2020-01-03" published="2014-11-08" version="2.0">      
        <name>Ruby on Rails: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal') (CVE-2014-7818)</name>      
        <severity>4</severity>      
        <cvss>(AV:N/AC:M/Au:N/C:P/I:N/A:N)</cvss>      
        <Tags>         
             <tag>Directory Traversal</tag>         
             <tag>Ruby on Rails</tag>         
        </Tags>      
        <AlternateIds>         
             <id name="CVE">CVE-2014-7818</id>         
             <id name="URL">http://lists.opensuse.org/opensuse-updates/2014-11/msg00112.html</id>         
             <id name="URL">https://groups.google.com/forum/message/raw?msg=rubyonrails-security/dCp7duBiQgo/v_R_8PFs5IwJ</id>         
             <id name="URL">https://puppet.com/security/cve/cve-2014-7829</id>         
        </AlternateIds>      
        
        
      <Check scope="node">         <NetworkService>            <Product minCertainty="0.85" name="Ruby on Rails">               <version>                  <low>3.0.0</low>                  <high>3.0.21</high>               </version>               <version>                  <low>3.1.0</low>                  <high>3.1.11</high>               </version>               <version>                  <low>3.2.0</low>                  <high>3.2.19</high>               </version>               <version>                  <low>4.0.0</low>                  <high>4.0.11</high>               </version>               <version>                  <low>4.1.0</low>                  <high>4.1.7</high>               </version>               <version>                  <low>4.2.0</low>                  <high>4.2.0</high>               </version>               <version>                  <low>4.2.0</low>                  <high>4.2.0</high>               </version>            </Product>         </NetworkService>      </Check>      <Solutions>目前厂商已经发布了升级补丁以修复此安全问题，补丁获取链接： 
http://rubygems.org/gems/actionpack/versions</Solutions>      <cnnvd>CNNVD-201410-1424</cnnvd>      <Description>Directory traversal vulnerability in actionpack/lib/action_dispatch/middleware/static.rb in Action Pack in Ruby on Rails 3.x before 3.2.20, 4.0.x before 4.0.11, 4.1.x before 4.1.7, and 4.2.x before 4.2.0.beta3, when serve_static_assets is enabled, allows remote attackers to determine the existence of files outside the application root via a /..%2F sequence.</Description>   </Vulnerability>   <Vulnerability added="2020-01-03" gvid="ID106161" id="106161" modified="2020-01-03" published="2014-11-18" version="2.0">      
        <name>Ruby on Rails: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal') (CVE-2014-7829)</name>      
        <severity>5</severity>      
        <cvss>(AV:N/AC:L/Au:N/C:P/I:N/A:N)</cvss>      
        <Tags>         
             <tag>Directory Traversal</tag>         
             <tag>Ruby on Rails</tag>         
        </Tags>      
        <AlternateIds>         
             <id name="BID">71183</id>         
             <id name="CVE">CVE-2014-7829</id>         
             <id name="URL">http://lists.opensuse.org/opensuse-updates/2014-11/msg00112.html</id>         
             <id name="URL">http://www.securityfocus.com/bid/71183</id>         
             <id name="URL">https://groups.google.com/forum/message/raw?msg=rubyonrails-security/rMTQy4oRCGk/loS_CRS8mNEJ</id>         
             <id name="URL">https://puppet.com/security/cve/cve-2014-7829</id>         
        </AlternateIds>      
        
        
      <Check scope="node">         <NetworkService>            <Product minCertainty="0.85" name="Ruby on Rails">               <version>                  <low>3.0.0</low>                  <high>3.0.21</high>               </version>               <version>                  <low>3.1.0</low>                  <high>3.1.11</high>               </version>               <version>                  <low>3.2.0</low>                  <high>3.2.19</high>               </version>               <version>                  <low>4.0.0</low>                  <high>4.0.11</high>               </version>               <version>                  <low>4.1.0</low>                  <high>4.1.8</high>               </version>               <version>                  <low>4.2.0</low>                  <high>4.2.0</high>               </version>               <version>                  <low>4.2.0</low>                  <high>4.2.0</high>               </version>               <version>                  <low>4.2.0</low>                  <high>4.2.0</high>               </version>            </Product>         </NetworkService>      </Check>      <Solutions>目前厂商已经发布了升级补丁以修复此安全问题，补丁获取链接： 
https://rubygems.org/gems/actionpack/versions</Solutions>      <cnnvd>CNNVD-201411-319</cnnvd>      <Description>Directory traversal vulnerability in actionpack/lib/action_dispatch/middleware/static.rb in Action Pack in Ruby on Rails 3.x before 3.2.21, 4.0.x before 4.0.12, 4.1.x before 4.1.8, and 4.2.x before 4.2.0.beta4, when serve_static_assets is enabled, allows remote attackers to determine the existence of files outside the application root via vectors involving a \ (backslash) character, a similar issue to CVE-2014-7818.</Description>   </Vulnerability>   <Vulnerability added="2020-01-03" gvid="ID106223" id="106223" modified="2020-01-03" published="2015-07-26" version="2.0">      
        <name>Ruby on Rails: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') (CVE-2015-3226)</name>      
        <severity>4</severity>      
        <cvss>(AV:N/AC:M/Au:N/C:N/I:P/A:N)</cvss>      
        <Tags>         
             <tag>Ruby on Rails</tag>         
             <tag>Web</tag>         
             <tag>XSS</tag>         
        </Tags>      
        <AlternateIds>         
             <id name="BID">75231</id>         
             <id name="CVE">CVE-2015-3226</id>         
             <id name="DEBIAN">DSA-3464</id>         
             <id name="URL">http://openwall.com/lists/oss-security/2015/06/16/17</id>         
             <id name="URL">http://www.debian.org/security/2016/dsa-3464</id>         
             <id name="URL">http://www.securityfocus.com/bid/75231</id>         
             <id name="URL">http://www.securitytracker.com/id/1033755</id>         
             <id name="URL">https://groups.google.com/forum/message/raw?msg=rubyonrails-security/7VlB_pck3hU/3QZrGIaQW6cJ</id>         
        </AlternateIds>      
        
        
      <Check scope="node">         <NetworkService>            <Product minCertainty="0.85" name="Ruby on Rails">               <version>                  <low>3.0.0</low>                  <high>3.0.1</high>               </version>               <version>                  <low>3.1.0</low>                  <high>3.1.1</high>               </version>               <version>                  <low>3.2.0</low>                  <high>3.2.18</high>               </version>               <version>                  <low>4.1.0</low>                  <high>4.1.9</high>               </version>               <version>                  <low>4.2.0</low>                  <high>4.2.1</high>               </version>            </Product>         </NetworkService>      </Check>      <Solutions>目前厂商已经发布了升级补丁以修复此安全问题，详情请关注厂商主页： 
http://rubyonrails.org/</Solutions>      <cnnvd>CNNVD-201506-447</cnnvd>      <Description>Cross-site scripting (XSS) vulnerability in json/encoding.rb in Active Support in Ruby on Rails 3.x and 4.1.x before 4.1.11 and 4.2.x before 4.2.2 allows remote attackers to inject arbitrary web script or HTML via a crafted Hash that is mishandled during JSON encoding.</Description>   </Vulnerability>   <Vulnerability added="2020-01-03" gvid="ID106224" id="106224" modified="2020-01-03" published="2015-07-26" version="2.0">      
        <name>Ruby on Rails: Unspecified Security Vulnerability (CVE-2015-3227)</name>      
        <severity>5</severity>      
        <cvss>(AV:N/AC:L/Au:N/C:N/I:N/A:P)</cvss>      
        <Tags>         
             <tag>Denial of Service</tag>         
             <tag>Ruby on Rails</tag>         
        </Tags>      
        <AlternateIds>         
             <id name="BID">75234</id>         
             <id name="CVE">CVE-2015-3227</id>         
             <id name="DEBIAN">DSA-3464</id>         
             <id name="URL">http://lists.opensuse.org/opensuse-updates/2015-07/msg00050.html</id>         
             <id name="URL">http://openwall.com/lists/oss-security/2015/06/16/16</id>         
             <id name="URL">http://www.debian.org/security/2016/dsa-3464</id>         
             <id name="URL">http://www.securityfocus.com/bid/75234</id>         
             <id name="URL">http://www.securitytracker.com/id/1033755</id>         
             <id name="URL">https://groups.google.com/forum/message/raw?msg=rubyonrails-security/bahr2JLnxvk/x4EocXnHPp8J</id>         
        </AlternateIds>      
        
        
      <Check scope="node">         <NetworkService>            <Product minCertainty="0.85" name="Ruby on Rails">               <version>                  <low>4.1.0</low>                  <high>4.1.9</high>               </version>               <version>                  <low>4.2.0</low>                  <high>4.2.1</high>               </version>            </Product>         </NetworkService>      </Check>      <Solutions>目前厂商已经发布了升级补丁以修复此安全问题，详情请关注厂商主页： 
http://rubyonrails.org/</Solutions>      <cnnvd>CNNVD-201506-446</cnnvd>      <Description>The (1) jdom.rb and (2) rexml.rb components in Active Support in Ruby on Rails before 4.1.11 and 4.2.x before 4.2.2, when JDOM or REXML is enabled, allow remote attackers to cause a denial of service (SystemStackError) via a large XML document depth.</Description>   </Vulnerability>   <Vulnerability added="2020-01-03" gvid="ID106162" id="106162" modified="2020-01-03" published="2016-02-16" version="2.0">      
        <name>Ruby on Rails: Security Features (CVE-2015-7576)</name>      
        <severity>4</severity>      
        <cvss>(AV:N/AC:M/Au:N/C:P/I:N/A:N)</cvss>      
        <cvss3>CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N</cvss3>      
        <Tags>         
             <tag>Ruby on Rails</tag>         
             <tag>Web</tag>         
        </Tags>      
        <AlternateIds>         
             <id name="BID">81803</id>         
             <id name="CVE">CVE-2015-7576</id>         
             <id name="DEBIAN">DSA-3464</id>         
             <id name="REDHAT">RHSA-2016:0296</id>         
             <id name="URL">http://lists.fedoraproject.org/pipermail/package-announce/2016-February/178043.html</id>         
             <id name="URL">http://lists.fedoraproject.org/pipermail/package-announce/2016-February/178047.html</id>         
             <id name="URL">http://lists.fedoraproject.org/pipermail/package-announce/2016-February/178067.html</id>         
             <id name="URL">http://lists.fedoraproject.org/pipermail/package-announce/2016-February/178068.html</id>         
             <id name="URL">http://lists.opensuse.org/opensuse-security-announce/2016-04/msg00053.html</id>         
             <id name="URL">http://lists.opensuse.org/opensuse-updates/2016-02/msg00034.html</id>         
             <id name="URL">http://lists.opensuse.org/opensuse-updates/2016-02/msg00043.html</id>         
             <id name="URL">http://rhn.redhat.com/errata/RHSA-2016-0296.html</id>         
             <id name="URL">http://www.debian.org/security/2016/dsa-3464</id>         
             <id name="URL">http://www.openwall.com/lists/oss-security/2016/01/25/8</id>         
             <id name="URL">http://www.securityfocus.com/bid/81803</id>         
             <id name="URL">http://www.securitytracker.com/id/1034816</id>         
             <id name="URL">https://groups.google.com/forum/message/raw?msg=ruby-security-ann/ANv0HDHEC3k/T8Hgq-hYEgAJ</id>         
        </AlternateIds>      
        
        
      <Check scope="node">         <NetworkService>            <Product minCertainty="0.85" name="Ruby on Rails">               <version>                  <low>4.0.0</low>                  <high>4.0.11</high>               </version>               <version>                  <low>4.1.0</low>                  <high>4.1.15</high>               </version>               <version>                  <low>4.2.0</low>                  <high>4.2.6</high>               </version>               <version>                  <low>5.0.0</low>                  <high>5.0.0</high>               </version>            </Product>         </NetworkService>      </Check>      <Solutions>目前厂商已经发布了升级补丁以修复此安全问题，补丁获取链接： 
http://weblog.rubyonrails.org/2016/1/25/Rails-5-0-0-beta1-1-4-2-5-1-4-1-14-1-3-2-22-1-and-rails-html-sanitizer-1-0-3-have-been-released/</Solutions>      <cnnvd>CNNVD-201602-030</cnnvd>      <Description>The http_basic_authenticate_with method in actionpack/lib/action_controller/metal/http_authentication.rb in the Basic Authentication implementation in Action Controller in Ruby on Rails before 3.2.22.1, 4.0.x and 4.1.x before 4.1.14.1, 4.2.x before 4.2.5.1, and 5.x before 5.0.0.beta1.1 does not use a constant-time algorithm for verifying credentials, which makes it easier for remote attackers to bypass authentication by measuring timing differences.</Description>   </Vulnerability>   <Vulnerability added="2020-01-03" gvid="ID106163" id="106163" modified="2020-01-03" published="2016-02-16" version="2.0">      
        <name>Ruby on Rails: Improper Access Control (CVE-2015-7577)</name>      
        <severity>5</severity>      
        <cvss>(AV:N/AC:L/Au:N/C:N/I:P/A:N)</cvss>      
        <cvss3>CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N</cvss3>      
        <Tags>         
             <tag>Ruby on Rails</tag>         
        </Tags>      
        <AlternateIds>         
             <id name="BID">81806</id>         
             <id name="CVE">CVE-2015-7577</id>         
             <id name="DEBIAN">DSA-3464</id>         
             <id name="REDHAT">RHSA-2016:0296</id>         
             <id name="URL">http://lists.fedoraproject.org/pipermail/package-announce/2016-February/178041.html</id>         
             <id name="URL">http://lists.fedoraproject.org/pipermail/package-announce/2016-February/178065.html</id>         
             <id name="URL">http://lists.opensuse.org/opensuse-security-announce/2016-04/msg00053.html</id>         
             <id name="URL">http://lists.opensuse.org/opensuse-updates/2016-02/msg00034.html</id>         
             <id name="URL">http://lists.opensuse.org/opensuse-updates/2016-02/msg00043.html</id>         
             <id name="URL">http://rhn.redhat.com/errata/RHSA-2016-0296.html</id>         
             <id name="URL">http://www.debian.org/security/2016/dsa-3464</id>         
             <id name="URL">http://www.openwall.com/lists/oss-security/2016/01/25/10</id>         
             <id name="URL">http://www.securityfocus.com/bid/81806</id>         
             <id name="URL">http://www.securitytracker.com/id/1034816</id>         
             <id name="URL">https://groups.google.com/forum/message/raw?msg=ruby-security-ann/cawsWcQ6c8g/LATIsglZEgAJ</id>         
        </AlternateIds>      
        
        
      <Check scope="node">         <NetworkService>            <Product minCertainty="0.85" name="Ruby on Rails">               <version>                  <low>4.0.0</low>                  <high>4.0.11</high>               </version>               <version>                  <low>4.1.0</low>                  <high>4.1.15</high>               </version>               <version>                  <low>4.2.0</low>                  <high>4.2.6</high>               </version>               <version>                  <low>5.0.0</low>                  <high>5.0.0</high>               </version>            </Product>         </NetworkService>      </Check>      <Solutions>目前厂商已经发布了升级补丁以修复此安全问题，补丁获取链接： 
http://weblog.rubyonrails.org/2016/1/25/Rails-5-0-0-beta1-1-4-2-5-1-4-1-14-1-3-2-22-1-and-rails-html-sanitizer-1-0-3-have-been-released/</Solutions>      <cnnvd>CNNVD-201602-023</cnnvd>      <Description>activerecord/lib/active_record/nested_attributes.rb in Active Record in Ruby on Rails 3.1.x and 3.2.x before 3.2.22.1, 4.0.x and 4.1.x before 4.1.14.1, 4.2.x before 4.2.5.1, and 5.x before 5.0.0.beta1.1 does not properly implement a certain destroy option, which allows remote attackers to bypass intended change restrictions by leveraging use of the nested attributes feature.</Description>   </Vulnerability>   <Vulnerability added="2020-01-03" gvid="ID106164" id="106164" modified="2020-01-03" published="2016-02-16" version="2.0">      
        <name>Ruby on Rails: Resource Management Errors (CVE-2016-0751)</name>      
        <severity>5</severity>      
        <cvss>(AV:N/AC:L/Au:N/C:N/I:N/A:P)</cvss>      
        <cvss3>CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H</cvss3>      
        <Tags>         
             <tag>Denial of Service</tag>         
             <tag>Ruby on Rails</tag>         
             <tag>Web</tag>         
        </Tags>      
        <AlternateIds>         
             <id name="BID">81800</id>         
             <id name="CVE">CVE-2016-0751</id>         
             <id name="DEBIAN">DSA-3464</id>         
             <id name="REDHAT">RHSA-2016:0296</id>         
             <id name="URL">http://lists.fedoraproject.org/pipermail/package-announce/2016-February/178043.html</id>         
             <id name="URL">http://lists.fedoraproject.org/pipermail/package-announce/2016-February/178067.html</id>         
             <id name="URL">http://lists.opensuse.org/opensuse-security-announce/2016-04/msg00053.html</id>         
             <id name="URL">http://lists.opensuse.org/opensuse-updates/2016-02/msg00034.html</id>         
             <id name="URL">http://lists.opensuse.org/opensuse-updates/2016-02/msg00043.html</id>         
             <id name="URL">http://rhn.redhat.com/errata/RHSA-2016-0296.html</id>         
             <id name="URL">http://www.debian.org/security/2016/dsa-3464</id>         
             <id name="URL">http://www.openwall.com/lists/oss-security/2016/01/25/9</id>         
             <id name="URL">http://www.securityfocus.com/bid/81800</id>         
             <id name="URL">http://www.securitytracker.com/id/1034816</id>         
             <id name="URL">https://groups.google.com/forum/message/raw?msg=ruby-security-ann/9oLY_FCzvoc/5CDXbvpYEgAJ</id>         
        </AlternateIds>      
        
        
      <Check scope="node">         <NetworkService>            <Product minCertainty="0.85" name="Ruby on Rails">               <version>                  <low>4.0.0</low>                  <high>4.0.11</high>               </version>               <version>                  <low>4.1.0</low>                  <high>4.1.14</high>               </version>               <version>                  <low>4.2.0</low>                  <high>4.2.6</high>               </version>               <version>                  <low>5.0.0</low>                  <high>5.0.0</high>               </version>            </Product>         </NetworkService>      </Check>      <Solutions>目前厂商已经发布了升级补丁以修复此安全问题，补丁获取链接： 
http://weblog.rubyonrails.org/2016/1/25/Rails-5-0-0-beta1-1-4-2-5-1-4-1-14-1-3-2-22-1-and-rails-html-sanitizer-1-0-3-have-been-released/</Solutions>      <cnnvd>CNNVD-201602-034</cnnvd>      <Description>actionpack/lib/action_dispatch/http/mime_type.rb in Action Pack in Ruby on Rails before 3.2.22.1, 4.0.x and 4.1.x before 4.1.14.1, 4.2.x before 4.2.5.1, and 5.x before 5.0.0.beta1.1 does not properly restrict use of the MIME type cache, which allows remote attackers to cause a denial of service (memory consumption) via a crafted HTTP Accept header.</Description>   </Vulnerability>   <Vulnerability added="2020-01-03" gvid="ID106165" id="106165" modified="2020-01-03" published="2016-02-16" version="2.0">      
        <name>Ruby on Rails: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal') (CVE-2016-0752)</name>      
        <severity>5</severity>      
        <cvss>(AV:N/AC:L/Au:N/C:P/I:N/A:N)</cvss>      
        <cvss3>CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N</cvss3>      
        <Tags>         
             <tag>Directory Traversal</tag>         
             <tag>Ruby on Rails</tag>         
        </Tags>      
        <AlternateIds>         
             <id name="BID">81801</id>         
             <id name="CVE">CVE-2016-0752</id>         
             <id name="DEBIAN">DSA-3464</id>         
             <id name="REDHAT">RHSA-2016:0296</id>         
             <id name="URL">http://lists.fedoraproject.org/pipermail/package-announce/2016-February/178044.html</id>         
             <id name="URL">http://lists.fedoraproject.org/pipermail/package-announce/2016-February/178069.html</id>         
             <id name="URL">http://lists.opensuse.org/opensuse-security-announce/2016-04/msg00053.html</id>         
             <id name="URL">http://lists.opensuse.org/opensuse-updates/2016-02/msg00034.html</id>         
             <id name="URL">http://lists.opensuse.org/opensuse-updates/2016-02/msg00043.html</id>         
             <id name="URL">http://rhn.redhat.com/errata/RHSA-2016-0296.html</id>         
             <id name="URL">http://www.debian.org/security/2016/dsa-3464</id>         
             <id name="URL">http://www.openwall.com/lists/oss-security/2016/01/25/13</id>         
             <id name="URL">http://www.securityfocus.com/bid/81801</id>         
             <id name="URL">http://www.securitytracker.com/id/1034816</id>         
             <id name="URL">https://groups.google.com/forum/message/raw?msg=ruby-security-ann/335P1DcLG00/JXcBnTtZEgAJ</id>         
             <id name="URL">https://www.exploit-db.com/exploits/40561/</id>         
        </AlternateIds>      
        
        
      <Check scope="node">         <NetworkService>            <Product minCertainty="0.85" name="Ruby on Rails">               <version>                  <low>4.0.0</low>                  <high>4.0.11</high>               </version>               <version>                  <low>4.1.0</low>                  <high>4.1.15</high>               </version>               <version>                  <low>4.2.0</low>                  <high>4.2.6</high>               </version>               <version>                  <low>5.0.0</low>                  <high>5.0.0</high>               </version>            </Product>         </NetworkService>      </Check>      <Solutions>目前厂商已经发布了升级补丁以修复此安全问题，补丁获取链接： 
http://weblog.rubyonrails.org/2016/1/25/Rails-5-0-0-beta1-1-4-2-5-1-4-1-14-1-3-2-22-1-and-rails-html-sanitizer-1-0-3-have-been-released/</Solutions>      <cnnvd>CNNVD-201602-033</cnnvd>      <Description>Directory traversal vulnerability in Action View in Ruby on Rails before 3.2.22.1, 4.0.x and 4.1.x before 4.1.14.1, 4.2.x before 4.2.5.1, and 5.x before 5.0.0.beta1.1 allows remote attackers to read arbitrary files by leveraging an application's unrestricted use of the render method and providing a .. (dot dot) in a pathname.</Description>   </Vulnerability>   <Vulnerability added="2020-01-03" gvid="ID106166" id="106166" modified="2020-01-03" published="2016-02-16" version="2.0">      
        <name>Ruby on Rails: Improper Input Validation (CVE-2016-0753)</name>      
        <severity>5</severity>      
        <cvss>(AV:N/AC:L/Au:N/C:N/I:P/A:N)</cvss>      
        <cvss3>CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N</cvss3>      
        <Tags>         
             <tag>Ruby on Rails</tag>         
        </Tags>      
        <AlternateIds>         
             <id name="BID">82247</id>         
             <id name="CVE">CVE-2016-0753</id>         
             <id name="DEBIAN">DSA-3464</id>         
             <id name="REDHAT">RHSA-2016:0296</id>         
             <id name="URL">http://lists.fedoraproject.org/pipermail/package-announce/2016-February/178041.html</id>         
             <id name="URL">http://lists.fedoraproject.org/pipermail/package-announce/2016-February/178043.html</id>         
             <id name="URL">http://lists.fedoraproject.org/pipermail/package-announce/2016-February/178047.html</id>         
             <id name="URL">http://lists.fedoraproject.org/pipermail/package-announce/2016-February/178065.html</id>         
             <id name="URL">http://lists.fedoraproject.org/pipermail/package-announce/2016-February/178066.html</id>         
             <id name="URL">http://lists.opensuse.org/opensuse-security-announce/2016-04/msg00053.html</id>         
             <id name="URL">http://lists.opensuse.org/opensuse-updates/2016-02/msg00043.html</id>         
             <id name="URL">http://rhn.redhat.com/errata/RHSA-2016-0296.html</id>         
             <id name="URL">http://www.debian.org/security/2016/dsa-3464</id>         
             <id name="URL">http://www.openwall.com/lists/oss-security/2016/01/25/14</id>         
             <id name="URL">http://www.securityfocus.com/bid/82247</id>         
             <id name="URL">http://www.securitytracker.com/id/1034816</id>         
             <id name="URL">https://groups.google.com/forum/message/raw?msg=ruby-security-ann/6jQVC1geukQ/3Iy0GU1ZEgAJ</id>         
        </AlternateIds>      
        
        
      <Check scope="node">         <NetworkService>            <Product minCertainty="0.85" name="Ruby on Rails">               <version>                  <low>4.1.0</low>                  <high>4.1.15</high>               </version>               <version>                  <low>4.2.0</low>                  <high>4.2.6</high>               </version>               <version>                  <low>5.0.0</low>                  <high>5.0.0</high>               </version>            </Product>         </NetworkService>      </Check>      <Solutions>目前厂商已经发布了升级补丁以修复此安全问题，补丁获取链接： 
http://weblog.rubyonrails.org/2016/1/25/Rails-5-0-0-beta1-1-4-2-5-1-4-1-14-1-3-2-22-1-and-rails-html-sanitizer-1-0-3-have-been-released/</Solutions>      <cnnvd>CNNVD-201602-032</cnnvd>      <Description>Active Model in Ruby on Rails 4.1.x before 4.1.14.1, 4.2.x before 4.2.5.1, and 5.x before 5.0.0.beta1.1 supports the use of instance-level writers for class accessors, which allows remote attackers to bypass intended validation steps via crafted parameters.</Description>   </Vulnerability>   <Vulnerability added="2020-01-03" gvid="ID106167" id="106167" modified="2020-01-03" published="2016-04-07" version="2.0">      
        <name>Ruby on Rails: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal') (CVE-2016-2097)</name>      
        <severity>5</severity>      
        <cvss>(AV:N/AC:L/Au:N/C:P/I:N/A:N)</cvss>      
        <cvss3>CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N</cvss3>      
        <Tags>         
             <tag>Directory Traversal</tag>         
             <tag>Ruby on Rails</tag>         
        </Tags>      
        <AlternateIds>         
             <id name="BID">83726</id>         
             <id name="CVE">CVE-2016-2097</id>         
             <id name="DEBIAN">DSA-3509</id>         
             <id name="URL">http://lists.opensuse.org/opensuse-security-announce/2016-03/msg00080.html</id>         
             <id name="URL">http://lists.opensuse.org/opensuse-security-announce/2016-03/msg00083.html</id>         
             <id name="URL">http://lists.opensuse.org/opensuse-security-announce/2016-04/msg00006.html</id>         
             <id name="URL">http://weblog.rubyonrails.org/2016/2/29/Rails-4-2-5-2-4-1-14-2-3-2-22-2-have-been-released/</id>         
             <id name="URL">http://www.debian.org/security/2016/dsa-3509</id>         
             <id name="URL">http://www.securityfocus.com/bid/83726</id>         
             <id name="URL">http://www.securitytracker.com/id/1035122</id>         
             <id name="URL">https://groups.google.com/forum/message/raw?msg=rubyonrails-security/ddY6HgqB2z4/we0RasMZIAAJ</id>         
        </AlternateIds>      
        
        
      <Check scope="node">         <NetworkService>            <Product minCertainty="0.85" name="Ruby on Rails">               <version>                  <low>4.0.0</low>                  <high>4.0.11</high>               </version>               <version>                  <low>4.1.0</low>                  <high>4.1.14</high>               </version>               <version>                  <low>4.1.0</low>                  <high>4.1.14</high>               </version>            </Product>         </NetworkService>      </Check>      <Solutions>目前厂商已经发布了升级补丁以修复此安全问题，补丁获取链接： 
http://weblog.rubyonrails.org/2016/2/29/Rails-4-2-5-2-4-1-14-2-3-2-22-2-have-been-released/</Solutions>      <cnnvd>CNNVD-201603-129</cnnvd>      <Description>Directory traversal vulnerability in Action View in Ruby on Rails before 3.2.22.2 and 4.x before 4.1.14.2 allows remote attackers to read arbitrary files by leveraging an application's unrestricted use of the render method and providing a .. (dot dot) in a pathname.  NOTE: this vulnerability exists because of an incomplete fix for CVE-2016-0752.</Description>   </Vulnerability>   <Vulnerability added="2020-01-03" gvid="ID106168" id="106168" modified="2020-01-03" published="2016-04-07" version="2.0">      
        <name>Ruby on Rails: Improper Input Validation (CVE-2016-2098)</name>      
        <severity>8</severity>      
        <cvss>(AV:N/AC:L/Au:N/C:P/I:P/A:P)</cvss>      
        <cvss3>CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L</cvss3>      
        <Tags>         
             <tag>Remote Execution</tag>         
             <tag>Ruby on Rails</tag>         
        </Tags>      
        <AlternateIds>         
             <id name="BID">83725</id>         
             <id name="CVE">CVE-2016-2098</id>         
             <id name="DEBIAN">DSA-3509</id>         
             <id name="URL">http://lists.opensuse.org/opensuse-security-announce/2016-03/msg00057.html</id>         
             <id name="URL">http://lists.opensuse.org/opensuse-security-announce/2016-03/msg00080.html</id>         
             <id name="URL">http://lists.opensuse.org/opensuse-security-announce/2016-03/msg00083.html</id>         
             <id name="URL">http://lists.opensuse.org/opensuse-security-announce/2016-03/msg00086.html</id>         
             <id name="URL">http://lists.opensuse.org/opensuse-security-announce/2016-04/msg00006.html</id>         
             <id name="URL">http://lists.opensuse.org/opensuse-security-announce/2016-04/msg00053.html</id>         
             <id name="URL">http://weblog.rubyonrails.org/2016/2/29/Rails-4-2-5-2-4-1-14-2-3-2-22-2-have-been-released/</id>         
             <id name="URL">http://www.debian.org/security/2016/dsa-3509</id>         
             <id name="URL">http://www.securityfocus.com/bid/83725</id>         
             <id name="URL">http://www.securitytracker.com/id/1035122</id>         
             <id name="URL">https://groups.google.com/forum/message/raw?msg=rubyonrails-security/ly-IH-fxr_Q/WLoOhcMZIAAJ</id>         
             <id name="URL">https://www.exploit-db.com/exploits/40086/</id>         
        </AlternateIds>      
        
        
      <Check scope="node">         <NetworkService>            <Product minCertainty="0.85" name="Ruby on Rails">               <version>                  <low>4.0.0</low>                  <high>4.0.11</high>               </version>               <version>                  <low>4.1.0</low>                  <high>4.1.15</high>               </version>               <version>                  <low>4.2.0</low>                  <high>4.2.5</high>               </version>               <version>                  <low>4.2.0</low>                  <high>4.2.5</high>               </version>               <version>                  <low>4.2.0</low>                  <high>4.2.5</high>               </version>               <version>                  <low>4.2.0</low>                  <high>4.2.5</high>               </version>            </Product>         </NetworkService>      </Check>      <Solutions>目前厂商已经发布了升级补丁以修复此安全问题，补丁获取链接： 
http://weblog.rubyonrails.org/2016/2/29/Rails-4-2-5-2-4-1-14-2-3-2-22-2-have-been-released/</Solutions>      <cnnvd>CNNVD-201603-128</cnnvd>      <Description>Action Pack in Ruby on Rails before 3.2.22.2, 4.x before 4.1.14.2, and 4.2.x before 4.2.5.2 allows remote attackers to execute arbitrary Ruby code by leveraging an application's unrestricted use of the render method.</Description>   </Vulnerability>   <Vulnerability added="2020-01-03" gvid="ID106169" id="106169" modified="2020-01-03" published="2016-09-07" version="2.0">      
        <name>Ruby on Rails: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') (CVE-2016-6316)</name>      
        <severity>4</severity>      
        <cvss>(AV:N/AC:M/Au:N/C:N/I:P/A:N)</cvss>      
        <cvss3>CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N</cvss3>      
        <Tags>         
             <tag>Ruby on Rails</tag>         
             <tag>Web</tag>         
             <tag>XSS</tag>         
        </Tags>      
        <AlternateIds>         
             <id name="BID">92430</id>         
             <id name="CVE">CVE-2016-6316</id>         
             <id name="DEBIAN">DSA-3651</id>         
             <id name="REDHAT">RHSA-2016:1855</id>         
             <id name="REDHAT">RHSA-2016:1856</id>         
             <id name="REDHAT">RHSA-2016:1857</id>         
             <id name="REDHAT">RHSA-2016:1858</id>         
             <id name="URL">http://rhn.redhat.com/errata/RHSA-2016-1855.html</id>         
             <id name="URL">http://rhn.redhat.com/errata/RHSA-2016-1856.html</id>         
             <id name="URL">http://rhn.redhat.com/errata/RHSA-2016-1857.html</id>         
             <id name="URL">http://rhn.redhat.com/errata/RHSA-2016-1858.html</id>         
             <id name="URL">http://weblog.rubyonrails.org/2016/8/11/Rails-5-0-0-1-4-2-7-2-and-3-2-22-3-have-been-released/</id>         
             <id name="URL">http://www.debian.org/security/2016/dsa-3651</id>         
             <id name="URL">http://www.openwall.com/lists/oss-security/2016/08/11/3</id>         
             <id name="URL">http://www.securityfocus.com/bid/92430</id>         
             <id name="URL">https://groups.google.com/forum/#!topic/ruby-security-ann/8B2iV2tPRSE</id>         
             <id name="URL">https://puppet.com/security/cve/cve-2016-6316</id>         
        </AlternateIds>      
        
        
      <Check scope="node">         <NetworkService>            <Product minCertainty="0.85" name="Ruby on Rails">               <version>                  <low>3.0.0</low>                  <high>3.0.21</high>               </version>               <version>                  <low>3.1.0</low>                  <high>3.1.13</high>               </version>               <version>                  <low>3.2.0</low>                  <high>3.2.23</high>               </version>               <version>                  <low>4.0.0</low>                  <high>4.0.11</high>               </version>               <version>                  <low>4.1.0</low>                  <high>4.1.17</high>               </version>               <version>                  <low>4.2.0</low>                  <high>4.2.8</high>               </version>               <version>                  <low>5.0.0</low>                  <high>5.0.0</high>               </version>               <version>                  <low>5.0.0</low>                  <high>5.0.0</high>               </version>               <version>                  <low>5.0.0</low>                  <high>5.0.0</high>               </version>               <version>                  <low>5.0.0</low>                  <high>5.0.0</high>               </version>               <version>                  <low>5.0.0</low>                  <high>5.0.0</high>               </version>               <version>                  <low>5.0.0</low>                  <high>5.0.0</high>               </version>            </Product>         </NetworkService>      </Check>      <Solutions>目前厂商已经发布了升级补丁以修复此安全问题，补丁获取链接： 
http://weblog.rubyonrails.org/2016/8/11/Rails-5-0-0-1-4-2-7-2-and-3-2-22-3-have-been-released/</Solutions>      <cnnvd>CNNVD-201608-281</cnnvd>      <Description>Cross-site scripting (XSS) vulnerability in Action View in Ruby on Rails 3.x before 3.2.22.3, 4.x before 4.2.7.1, and 5.x before 5.0.0.1 might allow remote attackers to inject arbitrary web script or HTML via text declared as &quot;HTML safe&quot; and used as attribute values in tag handlers.</Description>   </Vulnerability>   <Vulnerability added="2017-05-02" gvid="ID106225" id="106225" modified="2020-01-03" published="2016-09-07" version="2.0">      
        
        <severity>5</severity>      
        <cvss>(AV:N/AC:L/Au:N/C:N/I:P/A:N)</cvss>      
        <cvss3>CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N</cvss3>      
        <Tags>         
             <tag>Ruby on Rails</tag>         
        </Tags>      
        <AlternateIds>         
             <id name="BID">92434</id>         
             <id name="CVE">CVE-2016-6317</id>         
             <id name="REDHAT">RHSA-2016:1855</id>         
             <id name="URL">http://rhn.redhat.com/errata/RHSA-2016-1855.html</id>         
             <id name="URL">http://weblog.rubyonrails.org/2016/8/11/Rails-5-0-0-1-4-2-7-2-and-3-2-22-3-have-been-released/</id>         
             <id name="URL">http://www.openwall.com/lists/oss-security/2016/08/11/4</id>         
             <id name="URL">http://www.securityfocus.com/bid/92434</id>         
             <id name="URL">https://groups.google.com/forum/#!topic/ruby-security-ann/WccgKSKiPZA</id>         
        </AlternateIds>      
        
        
      <Check scope="node">         <NetworkService>            <Product minCertainty="0.85" name="Ruby on Rails">               <version>                  <low>4.2.0</low>                  <high>4.2.7</high>               </version>               <version>                  <low>4.2.0</low>                  <high>4.2.7</high>               </version>            </Product>         </NetworkService>      </Check>      <Solutions>目前厂商已经发布了升级补丁以修复此安全问题，补丁获取链接： 
http://weblog.rubyonrails.org/2016/8/11/Rails-5-0-0-1-4-2-7-2-and-3-2-22-3-have-been-released/</Solutions>      <cnnvd>CNNVD-201608-291</cnnvd>      <name>Ruby on Rails の Action Record におけるデータベースクエリの制限を回避される脆弱性</name>      <Description>
    </Description>   </Vulnerability>   <Vulnerability added="2020-01-03" gvid="ID106170" id="106170" modified="2020-01-03" published="2018-11-30" version="2.0">      
        <name>Ruby on Rails: Deserialization of Untrusted Data (CVE-2018-16476)</name>      
        <severity>5</severity>      
        <cvss>(AV:N/AC:L/Au:N/C:P/I:N/A:N)</cvss>      
        <cvss3>CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N</cvss3>      
        <Tags>         
             <tag>Ruby on Rails</tag>         
        </Tags>      
        <AlternateIds>         
             <id name="CVE">CVE-2018-16476</id>         
             <id name="REDHAT">RHSA-2019:0600</id>         
             <id name="URL">https://access.redhat.com/errata/RHSA-2019:0600</id>         
             <id name="URL">https://groups.google.com/d/msg/rubyonrails-security/FL4dSdzr2zw/zjKVhF4qBAAJ</id>         
             <id name="URL">https://weblog.rubyonrails.org/2018/11/27/Rails-4-2-5-0-5-1-5-2-have-been-released/</id>         
        </AlternateIds>      
        
        
      <Check scope="node">         <NetworkService>            <Product minCertainty="0.85" name="Ruby on Rails">               <range>                  
                            <low inclusive="1">4.2.0</low>                  
                            <high inclusive="0">4.2.11</high>                  
                       </range>            </Product>         </NetworkService>      </Check>      <Solutions>目前厂商已发布升级补丁以修复漏洞，补丁获取链接： 
https://weblog.rubyonrails.org/2018/11/27/Rails-4-2-5-0-5-1-5-2-have-been-released/</Solutions>      <cnnvd>CNNVD-201812-009</cnnvd>      <Description>A Broken Access Control vulnerability in Active Job versions &gt;= 4.2.0 allows an attacker to craft user input which can cause Active Job to deserialize it using GlobalId and give them access to information that they should not have. This vulnerability has been fixed in versions 4.2.11, 5.0.7.1, 5.1.6.1, and 5.2.1.1.</Description>   </Vulnerability>   <Vulnerability added="2020-01-03" gvid="ID106171" id="106171" modified="2020-01-03" published="2018-11-30" version="2.0">      
        <name>Ruby on Rails: Unspecified Security Vulnerability (CVE-2018-16477)</name>      
        <severity>4</severity>      
        <cvss>(AV:N/AC:M/Au:N/C:N/I:P/A:N)</cvss>      
        <cvss3>CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N</cvss3>      
        <Tags>         
             <tag>Ruby on Rails</tag>         
        </Tags>      
        <AlternateIds>         
             <id name="CVE">CVE-2018-16477</id>         
             <id name="URL">https://groups.google.com/d/msg/rubyonrails-security/3KQRnXDIuLg/mByx5KkqBAAJ</id>         
             <id name="URL">https://weblog.rubyonrails.org/2018/11/27/Rails-4-2-5-0-5-1-5-2-have-been-released/</id>         
        </AlternateIds>      
        
        
      <Check scope="node">         <NetworkService>            <Product minCertainty="0.85" name="Ruby on Rails">               <range>                  
                            <low inclusive="1">5.2.0</low>                  
                            <high inclusive="0">5.2.1.1</high>                  
                       </range>            </Product>         </NetworkService>      </Check>      <Solutions>目前厂商已发布升级补丁以修复漏洞，补丁获取链接： 
https://groups.google.com/forum/#!msg/rubyonrails-security/3KQRnXDIuLg/mByx5KkqBAAJ</Solutions>      <cnnvd>CNNVD-201812-008</cnnvd>      <Description>A bypass vulnerability in Active Storage &gt;= 5.2.0 for Google Cloud Storage and Disk services allow an attacker to modify the `content-disposition` and `content-type` parameters which can be used in with HTML files and have them executed inline. Additionally, if combined with other techniques such as cookie bombing and specially crafted AppCache manifests, an attacker can gain access to private signed URLs within a specific storage path. This vulnerability has been fixed in version 5.2.1.1.</Description>   </Vulnerability>   <Vulnerability added="2020-01-03" gvid="ID106172" id="106172" modified="2020-01-03" published="2019-03-27" version="2.0">      
        <name>Ruby on Rails: Information Exposure (CVE-2019-5418)</name>      
        <severity>5</severity>      
        <cvss>(AV:N/AC:L/Au:N/C:P/I:N/A:N)</cvss>      
        <cvss3>CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N</cvss3>      
        <Tags>         
             <tag>Ruby on Rails</tag>         
        </Tags>      
        <AlternateIds>         
             <id name="CVE">CVE-2019-5418</id>         
             <id name="REDHAT">RHSA-2019:0796</id>         
             <id name="REDHAT">RHSA-2019:1147</id>         
             <id name="REDHAT">RHSA-2019:1149</id>         
             <id name="REDHAT">RHSA-2019:1289</id>         
             <id name="URL">http://lists.opensuse.org/opensuse-security-announce/2019-05/msg00011.html</id>         
             <id name="URL">http://packetstormsecurity.com/files/152178/Rails-5.2.1-Arbitrary-File-Content-Disclosure.html</id>         
             <id name="URL">http://www.openwall.com/lists/oss-security/2019/03/22/1</id>         
             <id name="URL">https://access.redhat.com/errata/RHSA-2019:0796</id>         
             <id name="URL">https://access.redhat.com/errata/RHSA-2019:1147</id>         
             <id name="URL">https://access.redhat.com/errata/RHSA-2019:1149</id>         
             <id name="URL">https://access.redhat.com/errata/RHSA-2019:1289</id>         
             <id name="URL">https://groups.google.com/forum/#!topic/rubyonrails-security/pFRKI96Sm8Q</id>         
             <id name="URL">https://lists.debian.org/debian-lts-announce/2019/03/msg00042.html</id>         
             <id name="URL">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/Y43636TH4D6T46IC6N2RQVJTRFJAAYGA/</id>         
             <id name="URL">https://weblog.rubyonrails.org/2019/3/13/Rails-4-2-5-1-5-1-6-2-have-been-released/</id>         
             <id name="URL">https://www.exploit-db.com/exploits/46585/</id>         
        </AlternateIds>      
        
        
      <Check scope="node">         <NetworkService>            <Product minCertainty="0.85" name="Ruby on Rails">               <range>                  
                            <high inclusive="0">4.2.11.1</high>                  
                       </range>            </Product>         </NetworkService>      </Check>      <Solutions>目前厂商暂未发布修复措施解决此安全问题，建议使用此软件的用户随时关注厂商主页或参考网址以获取解决办法： 
https://rubyonrails.org/</Solutions>      <cnnvd>CNNVD-201903-826</cnnvd>      <Description>There is a File Content Disclosure vulnerability in Action View &lt;5.2.2.1, &lt;5.1.6.2, &lt;5.0.7.2, &lt;4.2.11.1 and v3 where specially crafted accept headers can cause contents of arbitrary files on the target system's filesystem to be exposed.</Description>   </Vulnerability>   <Vulnerability added="2020-01-03" gvid="ID106173" id="106173" modified="2020-01-03" published="2019-03-27" version="2.0">      
        <name>Ruby on Rails: Uncontrolled Resource Consumption ('Resource Exhaustion') (CVE-2019-5419)</name>      
        <severity>8</severity>      
        <cvss>(AV:N/AC:L/Au:N/C:N/I:N/A:C)</cvss>      
        <cvss3>CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H</cvss3>      
        <Tags>         
             <tag>Denial of Service</tag>         
             <tag>Ruby on Rails</tag>         
        </Tags>      
        <AlternateIds>         
             <id name="CVE">CVE-2019-5419</id>         
             <id name="REDHAT">RHSA-2019:0796</id>         
             <id name="REDHAT">RHSA-2019:1147</id>         
             <id name="REDHAT">RHSA-2019:1149</id>         
             <id name="REDHAT">RHSA-2019:1289</id>         
             <id name="URL">http://lists.opensuse.org/opensuse-security-announce/2019-05/msg00011.html</id>         
             <id name="URL">http://lists.opensuse.org/opensuse-security-announce/2019-06/msg00025.html</id>         
             <id name="URL">http://lists.opensuse.org/opensuse-security-announce/2019-08/msg00001.html</id>         
             <id name="URL">http://www.openwall.com/lists/oss-security/2019/03/22/1</id>         
             <id name="URL">https://access.redhat.com/errata/RHSA-2019:0796</id>         
             <id name="URL">https://access.redhat.com/errata/RHSA-2019:1147</id>         
             <id name="URL">https://access.redhat.com/errata/RHSA-2019:1149</id>         
             <id name="URL">https://access.redhat.com/errata/RHSA-2019:1289</id>         
             <id name="URL">https://groups.google.com/forum/#!topic/rubyonrails-security/GN7w9fFAQeI</id>         
             <id name="URL">https://lists.debian.org/debian-lts-announce/2019/03/msg00042.html</id>         
             <id name="URL">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/Y43636TH4D6T46IC6N2RQVJTRFJAAYGA/</id>         
             <id name="URL">https://weblog.rubyonrails.org/2019/3/13/Rails-4-2-5-1-5-1-6-2-have-been-released/</id>         
        </AlternateIds>      
        
        
      <Check scope="node">         <NetworkService>            <Product minCertainty="0.85" name="Ruby on Rails">               <range>                  
                            <high inclusive="0">4.2.11.1</high>                  
                       </range>            </Product>         </NetworkService>      </Check>      <Solutions>目前厂商已发布升级补丁以修复漏洞，补丁获取链接： 
https://weblog.rubyonrails.org/2019/3/13/Rails-4-2-5-1-5-1-6-2-have-been-released/</Solutions>      <cnnvd>CNNVD-201903-627</cnnvd>      <Description>There is a possible denial of service vulnerability in Action View (Rails) &lt;5.2.2.1, &lt;5.1.6.2, &lt;5.0.7.2, &lt;4.2.11.1 where specially crafted accept headers can cause action view to consume 100% cpu and make the server unresponsive.</Description>   </Vulnerability>   <Vulnerability added="2020-01-03" gvid="ID106174" id="106174" modified="2020-01-03" published="2019-03-27" version="2.0">      
        <name>Ruby on Rails: Improper Input Validation (CVE-2019-5420)</name>      
        <severity>8</severity>      
        <cvss>(AV:N/AC:L/Au:N/C:P/I:P/A:P)</cvss>      
        <cvss3>CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H</cvss3>      
        <Tags>         
             <tag>Remote Execution</tag>         
             <tag>Ruby on Rails</tag>         
        </Tags>      
        <AlternateIds>         
             <id name="CVE">CVE-2019-5420</id>         
             <id name="URL">http://packetstormsecurity.com/files/152704/Ruby-On-Rails-DoubleTap-Development-Mode-secret_key_base-Remote-Code-Execution.html</id>         
             <id name="URL">https://groups.google.com/forum/#!topic/rubyonrails-security/IsQKvDqZdKw</id>         
             <id name="URL">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/Y43636TH4D6T46IC6N2RQVJTRFJAAYGA/</id>         
             <id name="URL">https://weblog.rubyonrails.org/2019/3/13/Rails-4-2-5-1-5-1-6-2-have-been-released/</id>         
             <id name="URL">https://www.exploit-db.com/exploits/46785/</id>         
        </AlternateIds>      
        
        
      <Check scope="node">         <NetworkService>            <Product minCertainty="0.85" name="Ruby on Rails">               <version>                  <low>6.0.0</low>                  <high>6.0.0</high>               </version>               <version>                  <low>6.0.0</low>                  <high>6.0.0</high>               </version>            </Product>         </NetworkService>      </Check>      <Solutions>目前厂商已发布升级补丁以修复漏洞，补丁获取链接： 
https://weblog.rubyonrails.org/2019/3/13/Rails-4-2-5-1-5-1-6-2-have-been-released/</Solutions>      <cnnvd>CNNVD-201903-628</cnnvd>      <Description>A remote code execution vulnerability in development mode Rails &lt;5.2.2.1, &lt;6.0.0.beta3 can allow an attacker to guess the automatically generated development mode secret token. This secret token can be used in combination with other Rails internals to escalate to a remote code execution exploit.</Description>   </Vulnerability></Vulns>